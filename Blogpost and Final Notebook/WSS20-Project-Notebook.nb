(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    426748,       7875]
NotebookOptionsPosition[    417968,       7713]
NotebookOutlinePosition[    419442,       7756]
CellTagsIndexPosition[    419369,       7751]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Text Generation using GANs", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.803547743095481*^9, 
  3.8035477553052807`*^9}},ExpressionUUID->"7f5a763c-439b-409d-85d9-\
b001eb779415"],

Cell["Suman Sigdel", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.8035477580289707`*^9, 
  3.803547760666333*^9}},ExpressionUUID->"17c07b4e-577f-4fd8-bb63-\
78ea3b522bfe"],

Cell["Bennington College", "Affiliation",
 CellChangeTimes->{{3.802186209582007*^9, 3.802186214327465*^9}, {
  3.8035477626784554`*^9, 
  3.803547765630871*^9}},ExpressionUUID->"96c2b484-c964-462d-9af7-\
4e5a7606bcb7"],

Cell["\<\
Generative Adversarial Networks have been used mostly for image data and are \
known to produce data that closely match the given input eg. deep fakes. Text \
generation is an area in which GANs are used less given the discrete \
structures of text. We believe that CNN based GAN architecture used for \
images can also be used in text generation to generate comparable results to \
that of RNN models. A comparison between GANs and RNNs will be made to draw a \
clear distinction between the results they produce using n-gram distributions \
as a performance metric. 

Application : 
Text generation models can be used for :  product names, naming new \
chemicals, naming new startups etc.\
\>", "Abstract",
 CellChangeTimes->{{3.802186680026499*^9, 3.802186711462531*^9}, {
  3.8035478161418447`*^9, 3.803547973709035*^9}, {3.803548005084981*^9, 
  3.803548031872375*^9}, {3.8035481453903627`*^9, 3.8035482210413637`*^9}, {
  3.8035488898782177`*^9, 
  3.803549014038355*^9}},ExpressionUUID->"bd44fc5d-a918-4ecb-a444-\
9098256d0564"],

Cell[CellGroupData[{

Cell["Wolfram Community Post (material for blog post)", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 
  3.8021873367169733`*^9}},ExpressionUUID->"dde3b2d2-a587-4e33-b62b-\
89e06e4d8b0b"],

Cell[TextData[{
 StyleBox["Introduction", "Subsection",
  FontSize->24],
 "\nGenerative Adversarial Networks or GANs are most commonly known to \
produce results that are almost indistinguishable from the real dataset eg. \
Deep Fakes. GANs consist of two neural networks, Generator and Discriminator \
which compete in an adversarial zero sum game in order to generate plausible \
examples. The generator never sees the actual training data and only gets \
data from a latent space, to which it assigns meaning with the help of the \
discriminator. The discriminator is trained with samples generated by the \
generator and the samples from the training dataset and learns to classify \
between real and fake data. The two models operate in a zero sum game in a \
sense that when the discriminator successfully classifies real and fake \
samples, it is rewarded with no updates made to the model parameters, however \
the generator is penalized with large updates. Similarly, when the generator \
generates plausible examples, only the discriminator\[CloseCurlyQuote]s \
parameters are updated.\nLarge amounts of research have been done with GANs \
for image translation, generation of deep fakes and data augmentation, but \
GANs application in text and NLP is an area that is less explored.\n\n",
 StyleBox["Aim", "Subsection",
  FontSize->24],
 "\nIn this project, I will be applying GANs for text generation and will be \
comparing the results with existing Recurrent Neural Networks. This project \
aims to show that through adversarial training better text generation results \
can be achieved which is comparable to existing RNN models. This post is \
divided into 4 sections. In the first section, I will explain the metric that \
will be used to measure the performance of the text generation models. I will \
then explain the GAN architecture that was used for text generation and will \
show it\[CloseCurlyQuote]s performance while generating texts of various \
domains eg. Chemical Names, Pokemon Names, Company names etc. I will then \
train existing RNN language model (baseline) with the same datasets and \
finally will make a comparison between the performance of GAN and existing \
models.\n\n",
 StyleBox["Performance Metric", "Subsection",
  FontSize->24]
}], "Text",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
   3.802186780928506*^9, 3.802186861789569*^9}, {3.8035496425793324`*^9, 
   3.803549654288391*^9}, {3.8035499054176826`*^9, 3.8035499243740377`*^9}, {
   3.803550171863552*^9, 3.803550179460816*^9}, {3.803553137671221*^9, 
   3.803553232612755*^9}, 3.8035533158603907`*^9, 
   3.803569180325465*^9},ExpressionUUID->"2c2380b2-0547-4128-a721-\
db738b29388d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8035532345141363`*^9, 3.8035532345387487`*^9}, {
  3.803553295157586*^9, 
  3.803553319088189*^9}},ExpressionUUID->"9e3689e3-6922-4c4d-9890-\
4ed26eecaa9f"],

Cell[TextData[StyleBox["Normalizing text", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.803494114073453*^9, 
  3.803494121220852*^9}},ExpressionUUID->"72ef97ee-fa33-410c-b8b5-\
1e4b801373cb"],

Cell[TextData[StyleBox["To compare the different model performances, we will \
be finding the euclidean distance of n-grams between text generated from two \
models. The initial step will be to remove special characters and diacritics \
from the real dataset. The following code accomplishes this goal by using a \
combination of StringReplace, ToLowerCase and Remove Diacritics functions to \
normalize the characters in the dataset.",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.803400431656764*^9, 3.8034004418187227`*^9}, {
  3.803491072515067*^9, 
  3.803491074953171*^9}},ExpressionUUID->"f0607e75-b5d5-48b5-8f04-\
48e72c11868a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalizeText", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"ToLowerCase", " ", "@", " ", 
    RowBox[{"RemoveDiacritics", " ", "@", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"s", ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"WordBoundary", "~~", 
           RowBox[{"(", 
            RowBox[{"WordCharacter", ".."}], ")"}], "~~", "\"\<.\>\""}], 
          "\[RuleDelayed]", "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Remove", " ", "\"\<mr.\>\""}], ",", "\"\<jr.\>\"", ",", 
           "..."}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<\[Mars]\>\"", "|", "\"\<\[Venus]\>\""}], "\[Rule]", 
          "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "gender", " ", "hints"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<\[Hyphen]\>\"", "|", "\"\<-\>\"", "|", "\"\<'\>\""}], 
          "\[Rule]", "\"\< \>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "very", " ", "rare", " ", "characters"}], 
          "*)"}], "\n", "\t", 
         RowBox[{"DigitCharacter", "\[Rule]", "\"\<\>\""}], " ", ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "very", " ", "rare", " ", "characters"}], 
          "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<(\>\"", "|", "\"\<)\>\""}], " ", "\[Rule]", " ", 
          "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "Brackets"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<%\>\"", "|", "\"\<:\>\""}], " ", "\[Rule]", " ", 
          "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "Colons", " ", "and", " ", "%"}], "*)"}], 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"\"\<\:02bb\>\"", " ", "|", "\"\<\[OpenCurlyQuote]\>\""}], 
          "\[Rule]", "  ", "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "other", " ", "special", " ", "characters"}],
           "*)"}], "\[IndentingNewLine]", "\t", 
         RowBox[{"\"\<`\>\"", "\[Rule]", "\"\<\>\""}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"\"\< \>\"", " ", "\[Rule]", " ", "\"\<\>\""}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"\"\<=\>\"", "|", "\"\<?\>\""}], "\[Rule]", "\"\<\>\""}], 
         ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"\"\<}\>\"", "|", "\"\<{\>\""}], "\[Rule]", " ", 
          "\"\<\>\""}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
  "\n"}]], "Code",
 CellChangeTimes->{{3.803163432407468*^9, 3.803163436114833*^9}, {
  3.803163757506627*^9, 3.8031637664158154`*^9}, {3.803163859084519*^9, 
  3.8031638609639463`*^9}, {3.803400237001539*^9, 3.803400249663846*^9}, {
  3.803491123495883*^9, 3.803491137357107*^9}, {3.8034920761473637`*^9, 
  3.803492078909395*^9}, {3.803569318664296*^9, 3.8035693599834127`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e4a17ea5-922c-40ac-8273-3ee490033136"],

Cell[TextData[StyleBox["Computing n-grams", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.8034941311737537`*^9, 
  3.803494158064934*^9}},ExpressionUUID->"cb452640-fa04-4f58-aba2-\
e9f31892de70"],

Cell["\<\
The next step is to create a lookup table for the different characters so \
that we can put them in their respective coordinates in the sparse array. The \
following code makes an association that maps characters and special tokens \
to an unique point.\
\>", "Text",
 CellChangeTimes->{{3.803163872095648*^9, 3.803163879361498*^9}, 
   3.803208624956294*^9, {3.803208830285326*^9, 3.803208835552998*^9}, {
   3.803400258737793*^9, 3.803400259315033*^9}, {3.80340038475633*^9, 
   3.803400427017728*^9}, {3.803400494093054*^9, 3.80340057424549*^9}, {
   3.803400621747838*^9, 
   3.8034006536694183`*^9}},ExpressionUUID->"01814202-b98d-44a7-ba70-\
58f2061647ea"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"characters", " ", "=", " ", 
    RowBox[{"AssociationThread", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"CharacterRange", "[", 
         RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\< \>\"", ",", " ", "StartOfString", ",", " ", "EndOfString"}], 
         "}"}]}], "]"}], "\n", "\t", "\[Rule]", " ", 
      RowBox[{"Range", "[", "29", "]"}]}], "]"}]}], ";"}], "Code"]], "Code",
 CellChangeTimes->{{3.803163770181651*^9, 3.803163801447587*^9}, 
   3.803163870245639*^9, {3.8035533061058483`*^9, 3.803553309298767*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"0ce0e9c0-128d-4541-9363-6ee4237fcbaf"],

Cell["\<\
A function to compute n-grams is created which computes n-gram for a given \
wordlist and puts frequencies of each n-gram in a SparseArray. A sparse-array \
is chosen for faster computation for higher \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote] in the n-grams.\
\>", "Text",
 CellChangeTimes->{{3.8034006589179497`*^9, 3.8034006773812647`*^9}, {
  3.803400727072348*^9, 3.803400830633148*^9}, {3.8034012621741867`*^9, 
  3.803401275209092*^9}, {3.803494057155959*^9, 
  3.80349408252785*^9}},ExpressionUUID->"62b8ff3e-4e9c-492c-b918-\
f8eafea12fec"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"computeNGrams", "[", 
      RowBox[{"texts_", ",", " ", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "ngrams", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"ngrams", " ", "=", " ", 
         RowBox[{"Flatten", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"Partition", "[", 
              RowBox[{"#", ",", " ", "n", ",", " ", "1"}], "]"}], "]"}], " ", 
            "/@", " ", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "StartOfString", "}"}], ",", " ", 
                RowBox[{"Characters", "[", "#", "]"}], ",", " ", 
                RowBox[{"{", "EndOfString", "}"}]}], "]"}], "]"}], " ", "/@", 
             " ", 
             RowBox[{"normalizeText", "[", "texts", "]"}]}]}], ",", "\n", 
           "\t\t", "1"}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Convert", " ", "to", " ", "indices"}], " ", "*)"}], "\n", 
        "\t", 
        RowBox[{"ngrams", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Lookup", "[", 
             RowBox[{"characters", ",", " ", "#"}], "]"}], "&"}], ",", " ", 
           "ngrams"}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"(*", " ", "Counts", " ", "*)"}], "\n", "\t", 
        RowBox[{"ngrams", " ", "=", " ", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"N", " ", "@", " ", 
            RowBox[{"Counts", "[", "ngrams", "]"}]}], " ", "/", " ", 
           RowBox[{"Length", "[", "ngrams", "]"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Fill", " ", "SparseArray"}], " ", "*)"}], "\n", "\t", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"ngrams", ",", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Length", "[", "characters", "]"}], ",", "n"}], "]"}]}], 
         "]"}]}]}], "\n", "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Code",
 CellChangeTimes->{{3.803163803838252*^9, 3.8031638230150957`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"10c395d8-e2dc-4999-a0f2-ad9d0371dd37"],

Cell[TextData[StyleBox["Example", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.803494021907908*^9, 
  3.8034940294990673`*^9}},ExpressionUUID->"00e7bd1e-1ade-4e78-9539-\
43b0e561ab35"],

Cell["Running the following code will normalize chemical names.", "Text",
 CellChangeTimes->{{3.8034918456168003`*^9, 3.803491919427168*^9}, {
  3.8034919778003483`*^9, 3.80349197856742*^9}, {3.803494033287414*^9, 
  3.8034940341383133`*^9}},ExpressionUUID->"2c044039-ed39-4579-8851-\
f414913db1ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chemicalNames", " ", "=", " ", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"EntityList", "[", "\"\<Chemical\>\"", "]"}], ",", 
       "\"\<Name\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"chemicalNames", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"c", ",", 
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"CharacterRange", "[", 
            RowBox[{"\"\<A\>\"", ",", "\"\<z\>\""}], "]"}], ".."}]}], "]"}], 
        "&"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"tennormalizednames", " ", "=", " ", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"normalizeText", "@", "chemicalNames"}], ",", "10"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.803491807467087*^9, 3.803491808112548*^9}, 
   3.8034918427401657`*^9, {3.803491927994171*^9, 3.803491952556642*^9}, {
   3.80349202370039*^9, 3.803492026256033*^9}, {3.8034920723094797`*^9, 
   3.8034920870563917`*^9}, {3.803494414938252*^9, 3.803494449497218*^9}, {
   3.803568178878294*^9, 
   3.803568184169017*^9}},ExpressionUUID->"12447e7c-9567-42f5-adb8-\
bc6e2af1f34f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hydrogen\"\>", ",", "\<\"helium\"\>", ",", "\<\"deuterium\"\>",
    ",", "\<\"lithium\"\>", ",", "\<\"beryllium\"\>", ",", "\<\"boron\"\>", 
   ",", "\<\"diamond\"\>", ",", "\<\"graphite\"\>", ",", "\<\"borane\"\>", 
   ",", "\<\"methane\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.803491942995915*^9, 3.803491956551545*^9}, 
   3.80349203124921*^9, 3.8034920914534492`*^9, {3.803494440439806*^9, 
   3.803494454601613*^9}},
 CellLabel->
  "Out[4927]=",ExpressionUUID->"8ab2b106-82bd-4513-b6e7-4ebdb4ddf63e"]
}, Open  ]],

Cell["\<\
The following code will then compute the 1 and 2 grams and map their indices \
to respective normalized occurrences in a SparseArray.\
\>", "Text",
 CellChangeTimes->{{3.803491981246524*^9, 3.803492004917842*^9}, {
  3.803492111527219*^9, 
  3.803492259060206*^9}},ExpressionUUID->"60ee787c-9893-4f22-aee8-\
b500e417a064"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"computeNGrams", "[", 
    RowBox[{"tennames", ",", "1"}], "]"}], "\n", 
   RowBox[{"computeNGrams", "[", 
    RowBox[{"tennames", ",", "2"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.8034920133059483`*^9, 3.80349204421555*^9}, 
   3.80349217251443*^9, {3.8034922258623323`*^9, 3.803492231198688*^9}},
 CellLabel->
  "In[4812]:=",ExpressionUUID->"d33476e3-78ec-4e3a-b4ca-a4f29c467615"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIAaxd0+qZZacddFeKT7tj3zLY/tPZ5fsjix8Z/95
Tinfs+8X7M/wPvws5/TQXp+55ej0+rf2VuW742YpnbOfY7xoi/mPK/YvFik+
Dlz1yh6XOQvmTsg9nPrU/lPi/g/CF17bF8h4HBQ4+R6nOTrLcyU3h16wf1ex
/Zo1wz37XIvk81d739iXKJ9alHj+sv2R7MIFs5Y+tZ+57eEbVf339q/eLmmY
0/rAfqK5o0yO0Ut7b32d9CPtuM0n1f1L/nMG+ebesl8dGBnHnPPc/tMnNq3S
6Pc43YNL/GTSaQ+G9PP2btfWHLWsuWm/OtfppvCc1zjdg8teUt2Pyz2khg+p
8UWqOTu7DVx3bnlhf8N9+bqaaW/tT0bk/ov/+h6nOADuTHEZ
              "], {{0, 0}, {29, 1}}, {0, 1}], AspectRatio -> 1, Axes -> False,
              Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "29", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIAaxd0+qZZacddFeKT7tj3zLY/tPZ5fsjix8Z/95
Tinfs+8X7M/wPvws5/TQXp+55ej0+rf2VuW742YpnbOfY7xoi/mPK/YvFik+
Dlz1yh6XOQvmTsg9nPrU/lPi/g/CF17bF8h4HBQ4+R6nOTrLcyU3h16wf1ex
/Zo1wz37XIvk81d739iXKJ9alHj+sv2R7MIFs5Y+tZ+57eEbVf339q/eLmmY
0/rAfqK5o0yO0Ut7b32d9CPtuM0n1f1L/nMG+ebesl8dGBnHnPPc/tMnNq3S
6Pc43YNL/GTSaQ+G9PP2btfWHLWsuWm/OtfppvCc1zjdg8teUt2Pyz2khg+p
8UWqOTu7DVx3bnlhf8N9+bqaaW/tT0bk/ov/+h6nOADuTHEZ
              "], {{0, 0}, {29, 1}}, {0, 1}], AspectRatio -> 1, Axes -> False,
              Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "29", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.6206896551724138`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", "28", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.10869565217391304`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", "8", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.05434782608695652`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", "25", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.021739130434782608`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", "4", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.043478260869565216`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {29}, 0, {
   1, {{0, 18}, {{28}, {8}, {25}, {4}, {18}, {15}, {7}, {5}, {14}, {29}, {
     12}, {9}, {21}, {13}, {20}, {2}, {1}, {16}}}, {0.10869565217391304`, 
    0.05434782608695652, 0.021739130434782608`, 0.043478260869565216`, 
    0.06521739130434782, 0.05434782608695652, 0.021739130434782608`, 
    0.09782608695652173, 0.05434782608695652, 0.10869565217391304`, 
    0.043478260869565216`, 0.07608695652173914, 0.05434782608695652, 
    0.06521739130434782, 0.043478260869565216`, 0.03260869565217391, 
    0.043478260869565216`, 0.010869565217391304`}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.80349204486322*^9, 3.803492093290947*^9, 
  3.803492231712475*^9},
 CellLabel->
  "Out[4812]=",ExpressionUUID->"096e0d2b-0a0b-4875-a948-fa51886eecd7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt279Lw1AQwPGAiDiJo4NDdBfBQRDkcBAnB52cLBQcqw4Wl/4Hurg42Exd
Ch2cIlIcu6hIkeJQxWrBX60o4mBxUURwDRhI9N3LdyiEDyHpu9x773K0bnpl
fqnLcZzBn8/38cT6weLOUFW8sYI//n4mrYJ7M1d6FBzX6F5l76Jy1ZS11/3J
qXRbqrf5zPLmS+D5H51s0+uvSV/+8KR75E5qq8eXueHg84N89rzdk906lYY/
UHRL19Lo7aQe7p8iu37Y+wa5ac8Lx3Ecx0127fup9u+P4ziO4ziO47/x8sbo
dNlvSX2muJvbfpajhcxn6i26/hv1uZkeVd817v4tjuO4lvWQ/dGOeGqPP47j
zGvcbteSn3HXA0mrN0zLN+KPa5y/WtZPxmuma+mfh/WwvxMm33Acx3Gc/TFp
HvT+Ymt9GHfexn19+hV25w/j0uXEDcdxWz3s+mZa/WPr/+ij6nOatt9pfy5J
GxdxwHHmy3/t7zj+l/MuqvrTtPFq8S8XYtXI
              "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"29", ",", "29"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt279Lw1AQwPGAiDiJo4NDdBfBQRDkcBAnB52cLBQcqw4Wl/4Hurg42Exd
Ch2cIlIcu6hIkeJQxWrBX60o4mBxUURwDRhI9N3LdyiEDyHpu9x773K0bnpl
fqnLcZzBn8/38cT6weLOUFW8sYI//n4mrYJ7M1d6FBzX6F5l76Jy1ZS11/3J
qXRbqrf5zPLmS+D5H51s0+uvSV/+8KR75E5qq8eXueHg84N89rzdk906lYY/
UHRL19Lo7aQe7p8iu37Y+wa5ac8Lx3Ecx0127fup9u+P4ziO4ziO47/x8sbo
dNlvSX2muJvbfpajhcxn6i26/hv1uZkeVd817v4tjuO4lvWQ/dGOeGqPP47j
zGvcbteSn3HXA0mrN0zLN+KPa5y/WtZPxmuma+mfh/WwvxMm33Acx3Gc/TFp
HvT+Ymt9GHfexn19+hV25w/j0uXEDcdxWz3s+mZa/WPr/+ij6nOatt9pfy5J
GxdxwHHmy3/t7zj+l/MuqvrTtPFq8S8XYtXI
              "], {{0, 0}, {29, 29}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"29", ",", "29"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.06183115338882283`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "13"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.012195121951219513`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "16"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.012195121951219513`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "14"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.024390243902439025`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "0.012195121951219513`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {29, 29}, 0, {
   1, {{0, 3, 5, 5, 9, 15, 15, 17, 21, 24, 24, 24, 26, 29, 32, 35, 36, 36, 40,
      40, 42, 44, 44, 44, 44, 46, 46, 46, 52, 52}, {{13}, {16}, {14}, {5}, {
     15}, {18}, {5}, {9}, {29}, {14}, {12}, {21}, {18}, {29}, {20}, {5}, {
     18}, {25}, {5}, {9}, {1}, {21}, {20}, {1}, {9}, {12}, {29}, {15}, {5}, {
     29}, {4}, {5}, {7}, {18}, {14}, {8}, {15}, {9}, {25}, {1}, {5}, {8}, {
     13}, {20}, {4}, {12}, {8}, {4}, {12}, {2}, {7}, {13}}}, CompressedData["
1:eJxTTMoPSmVkYGAwAeJfEnP6D/7ssEelZxDgk0rPsN8jtFU7cPcikvWh8ldg
iGM3dwWR5uHiE+t/dPUzCNiP2x5c4QMAn3j2Xg==
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.80349204486322*^9, 3.803492093290947*^9, 
  3.803492231915765*^9},
 CellLabel->
  "Out[4813]=",ExpressionUUID->"954669e0-2a41-44bb-8ff7-7a5b85d47a14"]
}, Open  ]],

Cell[TextData[StyleBox["Euclidean Distance between n-gram distributions", \
"Subsubsection"]], "Text",
 CellChangeTimes->{{3.803494092679611*^9, 3.803494098328477*^9}, {
  3.8034941854470177`*^9, 
  3.803494197327005*^9}},ExpressionUUID->"39b915a9-0169-4b7b-aaae-\
10212a458ab2"],

Cell["\<\
We then compute the euclidean distance between the distributions of n-grams \
in the dataset and generated text. The findEuclideanDistance computes the \
euclidean distance between two n gram distributions. The DistancesofNgrams \
function takes the generator and the training dataset to find the euclidean \
distance between n-gram distributions (between generated and training \
dataset) where n goes from 1 to 5.\
\>", "Text",
 CellChangeTimes->{{3.803400844637042*^9, 3.803400850574594*^9}, {
  3.803401041431099*^9, 3.803401092244543*^9}, {3.803401141047371*^9, 
  3.803401252007017*^9}, {3.803492887113673*^9, 3.803492901343629*^9}, {
  3.803495364000704*^9, 
  3.803495364674631*^9}},ExpressionUUID->"f3ae372d-2b11-444b-a309-\
93451b07ec2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"findEuclideanDistance", "[", 
    RowBox[{"ngram1_", ",", "ngram2_"}], "]"}], ":=", " ", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", "ngram1"}], ",", 
     RowBox[{"Flatten", "@", "ngram2"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DistancesofNgrams", "[", 
   RowBox[{"generator_", ",", " ", "dataset_"}], "]"}], ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"findEuclideanDistance", "[", 
     RowBox[{
      RowBox[{"computeNGrams", "[", 
       RowBox[{
        RowBox[{"generator", "@", 
         RowBox[{"latentGeneration", "[", "100", "]"}]}], ",", "n"}], "]"}], 
      ",", " ", 
      RowBox[{"computeNGrams", "[", 
       RowBox[{
        RowBox[{"RandomChoice", "[", 
         RowBox[{"dataset", ",", "100"}], "]"}], ",", "n"}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.8031638246894197`*^9, 3.8031638319123793`*^9}, {
   3.803298579734507*^9, 3.8032985806625223`*^9}, {3.803401023706318*^9, 
   3.8034010355553293`*^9}, 3.803562363777974*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"7e99eca6-3716-4d2a-aff6-71d529f2210a"],

Cell["\<\
Using this metric we will be able to compare the GAN model as well as the RNN \
model. In addition, we will be able to see how the euclidean distance \
converges as the GAN model is trained.

\
\>", "Text",
 CellChangeTimes->{{3.8034912993980093`*^9, 3.8034913731088*^9}, {
  3.803491735031035*^9, 
  3.803491737481607*^9}},ExpressionUUID->"498a9a1a-807a-4a2d-bc32-\
f8c5518e4613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["( Murgue T., de la Higuera C. (2004) Distances \
between Distributions: Comparing Language Models. In: Fred A., Caelli T.M., \
Duin R.P.W., Campilho A.C., de Ridder D. (eds) Structural, Syntactic, and \
Statistical Pattern Recognition. SSPR /SPR 2004. Lecture Notes in Computer \
Science, vol 3138. Springer, Berlin, Heidelberg)", "Text"]], "Subtitle",
 CellChangeTimes->{{3.803034576576008*^9, 3.803034618268505*^9}, {
  3.803044419973773*^9, 3.803044478568988*^9}, {3.803400840028737*^9, 
  3.803400841798848*^9}},ExpressionUUID->"470235e8-9119-461d-9270-\
f9719c71d483"],

Cell[CellGroupData[{

Cell[TextData[{
 "2. Baseline RNN Model\n\n",
 StyleBox["The baseline RNN model that will be used for comparison is the \
pretrained", "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" ", "Text",
  FontSize->14,
  FontColor->GrayLevel[0]],
 StyleBox[Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{
      "\"Wolfram English Character-Level Language Model V1\"", ".", " "}], {
      URL[
      "https://resources.wolframcloud.com/NeuralNetRepository/resources/\
Wolfram-English-Character-Level-Language-Model-V1#:~:text=This%20language%\
20model%20is%20based,on%20sequences%20of%20length%2080."], "None"}, 
     "https://resources.wolframcloud.com/NeuralNetRepository/resources/\
Wolfram-English-Character-Level-Language-Model-V1#:~:text=This%20language%\
20model%20is%20based,on%20sequences%20of%20length%2080.", 
     "HyperlinkActionRecycled", {"HyperlinkActive"}, 
     BaseStyle -> {"Hyperlink"}, HyperlinkAction -> "Recycled"},
    "HyperlinkTemplate"], TextForm]], "Text",
  FontSize->14,ExpressionUUID->"373edae6-72c6-4e1f-8651-de60e082f444"], 
  "Text"],
 StyleBox["The following is the architecture of this model : ", "Text",
  FontColor->GrayLevel[0]]
}], "Section",
 CellChangeTimes->{{3.803298271797764*^9, 3.8032982892800198`*^9}, {
   3.803494308919518*^9, 3.8034943480004807`*^9}, {3.8034954065257597`*^9, 
   3.803495470453116*^9}, {3.803495552303709*^9, 3.8034956268684683`*^9}, 
   3.803548245367815*^9, {3.803549574629403*^9, 3.8035495910491543`*^9}, {
   3.8035496896039333`*^9, 3.8035496991790133`*^9}, {3.803550033254147*^9, 
   3.8035500879234447`*^9}, {3.8035505813441563`*^9, 3.803550596432094*^9}, {
   3.803550969800186*^9, 
   3.803550986901778*^9}},ExpressionUUID->"c3bfde40-8d62-4960-aadc-\
b6e2debc5451"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  "\"\<Wolfram English Character-Level Language Model V1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.803550615657892*^9, 3.8035506450945187`*^9}},
 CellLabel->
  "In[5064]:=",ExpressionUUID->"a98cd7f0-a563-4599-a52c-67c4d631848a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Embedding", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{97, 97}]],
                     "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {97}, "ClassCount" -> 97, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[0]}, "$OutputDimension" -> 97], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0]}, 
                    NeuralNetworks`IndexIntegerT[97]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 97}, NeuralNetworks`RealT]]],
                     "2" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.15, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 97}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 97}, NeuralNetworks`RealT]]],
                     "3" -> Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 97}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 97}], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 97}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 512, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    97, "$SequenceLength" -> NeuralNetworks`LengthVar[0]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 97}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 512, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    512, "$SequenceLength" -> NeuralNetworks`LengthVar[0]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 512, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    512, "$SequenceLength" -> NeuralNetworks`LengthVar[0]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0], 512}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{97, 512}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{97}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {97}, "$OutputSize" -> 97, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{97}, NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{97}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{97}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0]}, 
                    NeuralNetworks`IndexIntegerT[97]], "Type" -> "Characters",
                     "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[1, 
                    NeuralNetworks`Private`DummyArray[{130}], 
                    NeuralNetworks`Private`DummyArray[{97}], 97, {
                    "\"\\t\"", "\"\\n\"", 
                    "\" !\\\"#$%&'()*+,-./0123456789:;<=>?@\
ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"", Blank[] -> 
                    3}]], "OutputForm" -> "Index", "IgnoreCase" -> False, 
                    "Count" -> 97, "TargetLength" -> All, "$TargetLength" -> 
                    NeuralNetworks`LengthVar[0], "$Version" -> "12.2.8", 
                    "$Padding" -> Automatic]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{97}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{"\"\\t\"", "\"\\n\"", 
                    Skeleton[94], "\"~\""}, {
                    "\t", "\n", " ", "!", "\"", "#", "$", "%", "&", "'", "(", 
                    ")", "*", "+", ",", "-", ".", "/", "0", "1", "2", "3", 
                    "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", 
                    "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", 
                    "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
                    "U", "V", "W", "X", "Y", "Z", "[", "\\", "]", "^", "_", 
                    "`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", 
                    "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", 
                    "v", "w", "x", "y", "z", "{", "|", "}", "~"}], 
                    "InputDepth" -> 1, "Dimensions" -> 97, "$Rank" -> 0, 
                    "$Version" -> "12.2.8", "Multilabel" -> False]], 
                    "InteriorStates" -> 
                    Association[{3, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "3", "States", "State"], {
                    4, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "4", "States", "State"], {
                    5, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "5", "States", "State"]]],
                    NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "97", "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["EmbeddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]97\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]97\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]512\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]512\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]512\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 97\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 97\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {
                    290., {72.172119140625, 77.827880859375}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8035506167554607`*^9, 3.803550649491078*^9},
 CellLabel->
  "Out[5064]=",ExpressionUUID->"d9d88b17-8625-453b-9046-3f0630a404d2"]
}, Open  ]],

Cell["\<\
We will now train the RNN model on 3 different datasets and measure their \
respective euclidean distance for 1 to 5 n-grams.\
\>", "Text",
 CellChangeTimes->{{3.803554402436377*^9, 3.803554445491714*^9}, {
  3.803554821163892*^9, 3.8035548576634607`*^9}, {3.803567270081345*^9, 
  3.803567303746729*^9}, {3.803572068827004*^9, 
  3.803572089635542*^9}},ExpressionUUID->"d2d47e6a-b7fa-42eb-abae-\
dccd454b56fd"],

Cell[CellGroupData[{

Cell["1. Chemical Names", "Subsection",
 CellChangeTimes->{{3.803567308191661*^9, 
  3.803567324451008*^9}},ExpressionUUID->"26554757-c4d6-46ef-9b02-\
b2bb84e620df"],

Cell["\<\
The following code gets the chemical names from the EntityList and normalizes \
the names. The pretrained model is trained with the normalized chemical names \
with the default hyperparameters.\
\>", "Text",
 CellChangeTimes->{{3.803568192500001*^9, 3.803568248829012*^9}, 
   3.803568732753076*^9},ExpressionUUID->"d6b8b247-d2bf-43c0-b8a2-\
efa2a7ebd587"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"chemicalNames", "=", " ", 
    RowBox[{"EntityValue", "[", 
     RowBox[{
      RowBox[{"EntityList", "[", "\"\<Chemical\>\"", "]"}], ",", 
      "\"\<Name\>\""}], "]"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"chemicalNames", " ", "=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{"chemicalNames", ",", 
      RowBox[{
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"CharacterRange", "[", 
           RowBox[{"\"\<A\>\"", ",", "\"\<z\>\""}], "]"}], ".."}]}], "]"}], 
       "&"}]}], "]"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"normalizedChemicalNames", " ", "=", " ", 
    RowBox[{"normalizeText", "@", "chemicalNames"}]}], ";"}], 
  "Code"]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8035681890525427`*^9, 3.8035681894534407`*^9}, 
   3.80356830321835*^9, {3.803568680574119*^9, 3.803568681441197*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"7e4e4dea-f6b9-457e-bf06-d5d4883b5a84"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQeAFLX6wDlQkWJ7KlifvqI+Qez6/up7UpTjqFKVIkVpwtGLSAeRKkWQ
dmB5FrrSUUBFBAHpSN07qvRe95Y++ef7ZjKTzGR2747d406+0WV3Mkl+yZfs
3pfky5e/vd2ycqOcOXLkaHsj/6fyWx2Kt2nzVscqt/Kbai3aNmncomGD0i3a
NWzcsM3/vZ2LB74D//DXdfyN8ctg8mW43vWXoXzQxZXzkT5rsic+8YlPfOIT
n/jEJz7xiZ95/EhMw3Ceu5NFLoe+VP5lJT7xiU984hOf+MQnPvGJH1u+qxSG
STLckcMX01O2yETiE5/4xCc+8YlPfOITn/hXi++TkyfMsP4xwuRteP413+00
nsoRn/jEJz7xiU984hOf+MTPDL74aMiR01yuCPEM1wfDE4P4xCc+8YlPfOIT
n/jEJ36m8Q1vecKg3LG1cQ1NfhHKSnziE5/4xCc+8YlPfOITPzP44WKES2lo
4/inMJyye5ISn/jEJz7xiU984hOf+MTPLL47B0O9VW9EGk/ZDW08vxIZPp+J
T3ziE5/4xCc+8YlPfOLHlu8TxROskgxtHP/ahNmtQHziE5/4xCc+8YlPfOIT
P/P4Ip2yEUHOz/AtoxLTTm54A+1Q6V83h/jEJz7xiU984hOf+MQnfkz53nIw
V3z5uZyvb0J9oSSyHEJ84hOf+MQnPvGJT3ziEz/z+Lr8DE/O3hT+ZMOT3im+
OxXxiU984hOf+MQnPvGJT/yrwvcL0t67SmG4onrSeMvvWwHiE5/4xCc+8YlP
fOITn/iZwjeUfPUFVPC6QrrGGIb73a/exCc+8YlPfOITn/jEJz7xM4nvDQxT
TCWSES6m+5Hh94z4xCc+8YlPfOITn/jEJ36m8Q3XR/cgwVAeMptqyI8NJUCt
XoTaEJ/4xCc+8YlPfOITn/jEzzx+hi53oZkL6g0ypJLq4hKf+MQnPvGJT3zi
E5/4xI8132CaQPxoMDVMh/H7nKYCEZ/4xCc+8YlPfOITn/jEz1S+Lk999EhU
Q1lm0OUXrvzEJz7xiU984hOf+MQnPvFjzw8DDBvTkD4YuieGTzkN1z3xiU98
4hOf+MQnPvGJT/xM43vHDJ4AOy9vafzL5xvDVV7iE5/4xCc+8YlPfOITn/iZ
yA+bh+F69ws2pEfuuM79pcuX2MkTJ9jevXvZ9u3bWUpKCgskB1hySjJLTk5m
gUAA38ULnyWnsGQpPAVe/D6QAvFFXOs5hCfDywpPCWCeKQGRnxw/4DCIT3zi
E5/4xCc+8YlP/BjzIR/Qgffs3cNOnjzBLl++HHP9Oy2XbrzgvTW8YZqEdjF5
GY4ePcq2bd1qydmSbcCUSYokS1tGcJ/ivAeSxctpO6cNrXhyWmgHKUxpB+IT
n/jEJz7xiU984hP/KvO3ct342LFj7LKf788r0L+FDu6TpXtBQElt/6sZRhi+
Ywsn/OLFi2zXH7ts+e3ZsxvHOxfOX2CGGPPEkO8LiPCY+MQnPvGJT3ziE5/4
xI8m37hscB34PDvBdeE9u/fY44ddu/5gly5cytT6G2mIYwfrmEJmhprHxUsX
2LbtMOefwrZv286OHz/GUoOpLJgaZEH+nhoKstRUuOefU83PqZ7PqSwkPkOa
YND1PGSHBYNqHsAxGSEzLdwTn/jEJz7xiU984hOf+FmAD7rx9u3bcI5827at
7PTp0/jsSvRvRY83VE0/3MjBcN347REwH+sZfHjD/uBjGRjX7Nq1i505c8aS
syOfEMojxIIhIecQxhHtEQyasg2G1PYQMsOXLXO3jK37oJqG+MQnPvGJT3zi
E5/4xM8q/OCZINu5ayeOAXbu3MHvUzOsfxtOhDCX89CQ0rrTyOMBl1WR/e7G
HDt2FNcztvExzZkzpx25BF2yEPfyuErIUZabJcugO04oFeUo8k0NhWz5Ou9B
4hOf+MQnPvGJT3ziEz9L8mGeHGxlYP/AgYMHM6x/y8+UgYBexfdR+MMEe8YW
6rhD7PU9fvy4LRcxrrLXUxT5mPchWbbBVCVcHj+FUJYhO23Qfk9V0tkv4hOf
+MQnPvGJT3ziEz+L8o8fO476/9aUrYpfoPTo3/76e1jN31ffd8Yg4T2Gioew
x3n3nj22TFB+Yq0kmGrLItVac7HDpLGXkDfaS2F7iPWYVFXWQbntrLRBOT3x
iU984hOf+MQnPvGJn7X5wmfOiRMnMqR/a7cMG4bnmTYvn6UD34iaMsHc/8mT
J015BIOqjKTxTlD6nGrLOdX7UuI58VMtmQfdYeJFfOITn/jEJz7xiU984mcD
/uFDh3Hv7L69+zKkf6s6f4Q5/wj5+44VNOsP4iOMXc6fP2+OfUJiDJVqvWAN
xNwfgfdBnWyFPMznISudGVceM7ntrVKdfK0X8YlPfOITn/jEJz7xiZ/V+adO
nUIbIDgjLCP6t58HUEWjD7PnVx/k71fUcBUSxi6GcdkeO6EcrDGQkEFQyA32
UMA+aGVclMpMH0mSXGw5Be187XYSeQedNnDeiU984hOf+MQnPvGJT/yszT9z
Jog29CkpKRnSv93vuil+/bgirGWQl+yz4QDGLnCZMpLq6paPJQ8nPGjLxx03
qKQJqns1PHlJTOITn/jEJz7xiU984hM/G/DFmWAZ0b+9RvzWZ616H17nN6TB
hTuZXzngzGRT/09VXo5shcycPdSynZQS34qLfpYkX6zyHgtIGxJnLcA9rrmE
iO/D37N79zVdf+ITn/jEJz7xiU/8rMgH3R/s6DOif/td4WLYFMvPqOeosQhL
A3IwjF3gktc0QtJnWYa4LiKtf5hyDZpyl9sjaNpMmbIz427ZvJlt3LiRHTxw
0BqfBW05CpstkX7f3j0YF2yqosV32i7Vw9+8eRPnbUAmvDZZ7xs3bbTDnPBN
bAMPh/3e0eK76y/k3+G991ipUqVY3759Y1p/4Jsy8NZ/M2838A0ba34s+9+w
YcNY1SpV2IABH14V/tWuP/GJT3ziE5/4xI8+PxAI2Hp0evVv18AgnVe49QRn
qBHOE1EA1y0Msz5Q15A89hEylMZP8ivokpO0f8JOY8moTOnSLIHrsk2aNGGn
Tp+S4jttI/hDub5WqlQ8S2yaGDU+2GeBLnv48BEl/vHjJ5BVqlSC+UooxeLx
czyWt1R8vB2ewF+gj8NrxcoV6eJDHUOpou+lhq0/vB89dpTLrAzyK1WqfMX1
j8QvU6aMb/3hWZOmTdiYMUn2edfR5sey//Xr3w/brGePHh4+9IdNmzaxlK1b
Y9r/r2b9iU984hOf+MQnfvT5MP/v2P+kT/82PP8KSyDHZ5AdV7MdOFyukS/D
LrezpuGutzRGssKFXFMlWTvjKmmdRHqG+qWlP49JGoPhIcEQPCtPmK9NiC/F
EhMTo8avUaMG8qdPn2aPFYF/8sQJVprr2aUTSvP30lznTsB34IM+HM/Li+Fl
eJgVJ4HHX7VyVbr4or/Z8g1TfyH/zz7/nNV9qx6bPHnyFdc/Eh/GZ9A2pbmM
ypcvzyrwV/kKFXhdEzAcxgLxXCZdOndmJ9BfbHT5sex//fr1x7bv0bOHhz99
+nSsX43q1WPa/69m/YlPfOITn/jEJ370+aj/y/P/6dC/vR8N3RtzjxHsz2k8
Q0wb1xDz/0yVpf0KOrJNlWRlPQ/KspVkIuIFbRmmoo5t6tRcx+S69OrVq6x8
HZb4PGzYx6h7JyY2jRq/evUayAd9T46v48Nr8JAhWNamTZtGhW+vH7n6pR8/
2vKPxAf9H8Y606ZOU/jg32rzps2sa7euKA8YA4weNSpb1R/0f6hbz+49PPxp
oP8nmPr/1ZT/1W5/4hOf+MQnPvGJnz6+Ov+fPv3bo8+HvfxipGm3gDZUlFuV
gzmGCgZVGaMMQm5ZW+OtkJCfI3ORBsZOMH9u2tiY8+p16tRlR48exTihYFDh
D0X9Px5173D8EyeOs92796SJX6NGdeSi/h9U29HNh/oPHjKYleK6bhNL/09v
/f/4Yzc7dPiQzXfimmkPHDjIDhw86MtPr/xPnzmNspD7vFx/N99d/9Jo/1OK
TZ02VcuHfFu0aI42UE2aNA1bf9gbYbZL2vknT57iaXaz06dPRb3/9e/fH/tT
jx49PXzoD7C2Ub1GjTTJ/8CB/aYNWTr7f6T6x/r7R3ziE5/4xCc+8aPLBx+a
ySmBDOnfuvj22CGsb1DvHmPlxmM+pCuHYa9b2GMd18t/fBRkYm1ElZElF7wP
mXIOOvYlPXv2sG3oBwzob8aTxm3wGob2/6VYotD/XfzZs2ezBg0a4Jwu6PTV
uW7fp3cftmjxYg//7bfqs9dff8NmVnitAr9/HV+bN23S8uE1ZLA5/4/6f5j6
/77ud8yrTu06XC88zPr06cOqv/EGjh169epl1x/WjbZu28b69uvLKr5W0S5P
jRo1WZcuXdi2bVs9su/frx+rxvMeNXq0wu/ZsydnVmPfTv2WLf9tOXu3w7vs
tQqvYX5gs9O1S2f2x64/FPk7tnJBqb5Bu/7m+Mw9/6+2/6RJk0xboNIJ7MiR
w572F+2SAPsp4kuhzVVv3i6LFy325U+Z8g1ryscTZcuZ4w+wr2rerBn7+eef
PfwWLVuirGfMmKHtf19++SU+796tq9L/+oP9TynV/mfGzBkYt4Ilt1IJ8Xa/
6NOnt1L/nbt2se7du7E3qle3261Klcps2MfD2P79B9LU/yPJP9bfP+ITn/jE
Jz7xiR9dfiA54LX/SaP+HWn/r7+O7x+skrx2Q/JTZ/7fkYspT9mOynoXMg6G
XDIKemQWsvIRe6lLlymLetOsWbPYRx99ZO25LcUWLFjg5GHxzf2/Caj/u/lT
p0611xESLF0s3noH3XHRokUKH/Q0M06CrbuZr3i2/vf1ah2k+g8eLNn/hKn/
ypUrkV+uXFn27rvv8jKZewagbO+//75d/31cT6wJexAkvlyeqtWqst+xPI78
u/JxAdimDBo4UOG3a9ce0/Tp3ZtVrFjRrr8pE5NfvfobXEc/YvO9Pq7UNitt
rc9MmzrVt/2nfvutvX6zb98+RXZmu5RS6m++x2O7/MLbxc3/4IMPnHLzOK/h
uCjeHtdBWWR+vbp1Me6kSZO1/W/UqFHIb9W6jdL/+vfvh+0P+39FmsmTJyny
j7f3gMezjp072fVfs3YN70NVzDLyMQ3IG/aBiP7XoEF9dujQoYj9P5L8Y/39
Iz7xiU984hOf+NHlo/4v2f+kR/927nx8h+rSKRuB5fwM3zGCEtNOLs3/B511
Eltu0tgqGJLkFjTHTs4aipBV0JaRkFfQag+w/zf1/5noc+ft+vVR53q92uts
//59Ch/0/wTL/4/MX7x4MeqS4JMG7NF/X7eenTxxkq3gOjjsFQDdrWKF19im
zZtt/rFjx1EPFmsAMId95MhRduToUV7+M055XfUfMmQw6pLC/sev/qs427Fr
imfdu3ZjC3/5hW3bto398ccfdv07dOhgzs+XL8/mzp2H44Fdf+zC+fZKlSrh
fPn7PXsq8u/apSvqwoMGDlL47dq2NXk8Tc2aNdnChb+ww4cPsT179rBhHw3l
YwazPJ99+pnNd8bIYl0rJPX5VNs/07RpU33bv2vXrqaMX3tNaf9Fi6x24c+6
8fr/vn492gCtXLGSj58SsSyv8TSbNm22023cuMnSuUuxTz4Zi/GBs2nTJrQv
gvavXKkyO3nqlM2vV68eMiZPnKTtf6NGj0KZtG7TRul/wv+Paf9jpjt9+gyu
YcBYAmya3nj9dXYU+gXvK7C/WdS/C9Q5PoG99fZbbMOGDZj+8MFDuCe7lLWf
Zdy48RH7fyT5x/r7R3ziE5/4xCc+8aPLT05Osc7RTb/+7QmU7X/Ev4bzrslN
s4Tg3lcczv9nwNb/g5bcgpIcUuXPihzMV0iSQ1CSZaokc4hTpoyj/0PY+g3r
WVkrrFOnzgpf+P9s6rK9ad6sOc6Ht2/f3vZDKfgHDhzgunAtzG/48OEefg1r
7l32/+P0j5Cn/mD/Hy/N//vVf9XKFfZ8N9i6mL5ovfUH25RPP/mELVmyxMMf
AushfEzz+htvKPIHu6BSpcz5f5nfrn07lEO5cuXY1pRkj/zNsVACe69jR5vv
jGOD2vqb9lkJOI/vbv9jx46ypKQx5v5tzh06bKjS/s14u0D9YV3iFLSLVP8D
fJzzZq2aWI8RI4bb/HHjvsY0MPYx1+gc3vYdO9jo0aPxBe0qylKvbj3kT5o8
Sdv/Ro0ajZzWrVsr8gc7KuH/011/0/9PgrL/164/LxOMW6AvTpg40dP+06ZN
Y0l8zDF37tyI/T+S/GP9/SM+8YlPfOITn/jR5QfE+b8Z0L+deF5PP+4Qd36G
J2dvikj7DBz/P2a9Q5YsnHtHno7Mgra8VVnJ71IbpFrz/1x3mzVzFhPjsP99
+YWtO0+1551DbNjQoabtTWKizYf9reXLl8M5159++knLH/qRabPTtm0bDx/8
/5j+P2fY/KDl61XsC5frPwT8/ySYexDC1X/lqpW2Dclq/tmv/vZY0vos85ct
XWr63eevY0eP2TyYe04oJdn/WGnbtWuL4S1atNTKP4nrzSDXt99+O018qD/Y
/wMf1mPefustTPsWf71Z601WOsGxt3qvQ0d24OABu/6g72O7oC3XT9r6m/Ze
CaxN27Y2/5tvpnCeaSs0ftw43Msdqf/h/H+8uYaja//RMP/P82vTprXCN+3/
Eyz7f7X+06z9v7A/XMd/vVo1HJs1atyYbdmyJcP9P5L8Y/39Iz7xiU984hOf
+NHlw9y/OEcrvfq31v+P74G+YYK09/oNxPIwRfH/I9XTGUuZdVSeB4UMQ2qY
kBGOsVT7KZz/57rbrNkz7XY4c/oMa9mypbkvt0IFtnWruQcW9v+ac++JNn/j
xo22nt2lcxfc79unT1+0gYc9t3DfqFFjfI5zymdSFT7O/4P/zxnTXP3AaXu5
/oMHDzbHIE2ahq3/SmH/w/MGuyK/+ot0u3btZF+PG486MZS5c+fOrHHjxpY9
T7ztEwnkj/P/PN+BgwYq/Hbt2qFNykdDPtLKf9LEifi8bt06Hr6zT15Ng/5/
4p09CfaegnjHRn4iz9c+a8+qv9kuZv07Q7tgW/A26d0X99HCfePGjcx2qVjJ
/o7u3buXValcRdpPWwXTwXw82DHp+l9d2/5/krb/KfP/kvz72/Y/PTz1F/7/
0f+Ppv8njU5S9gk0b96cjR0zli1dusySQ9r6fyT5x/r7R3ziE5/4xCc+8aPL
9/r/T7v+rabRzPhrVX853zD7hj2PvPZGyQHT/icoyyHkU387TlB6D3plL54F
nXSm/X88mwnz/5Isd2zfjnsqUbdq1oydPnMG/arEW+d/iTzmzpuH9vjOXk15
D22CvRfY9OVSyrQbkfg4/8/j2/7/7bZUx4mi/qj/J7j0f039zfl/k2/q7vr6
r127juulrew6CF07QdKv4QX7EoT8u3TtgvkOHDRI4bdtZ9r/D5fsaWT5T54y
GfX3unXqOvUKpqpxXfUX/j+BtfCXn9H/zsKFC1n3bt1M/T4hwbJ/V+s/b95c
rfzjpbGD8ywe/Z4KLpyb3b5tO+VcZVwPKp3A3nuvI9uxc6fS/0z7fz4OEfP/
rv4H5xKY8/9tFPkL/b9nz+6e+k+fJun/mv4f5P1xznffob9ad/8DX0c//DBf
skP07/+R5B/r7x/xiU984hOf+MSPLj854OP/Pw36t/uJoX/sTe8bok/mt6tY
2C3Zfk2tOuN5Z6FUS15WfTVjLVUucjuo+YF/GdCfZs2caYbZvBCGibOBP//8
czZs6DDUGZsmOn7m16373dT3ebw5s+ewpUuX4mvJEv4Or6VL2BIrDOxpznC9
TeaDj9AE4f/fxTfHhWp5hf0P6P/h6r9ipWP/c/TYUW39T586zeo3qI988P3Z
vXt3tHcCX0Wr16xhM6wzqEqJMYQlf9D/QYceNGigwsf5f7CnHz5CK3/cmwr6
f926Uh8OOnXV1L9MWcf/v9z+4JMf9iyj/Y60r1Yw165bZ9d/9pzZVrssMd+t
doH3Jfx92bJluObj5u/+4w/0x9m3bz9WtWpVrDO0f603a+F+XCF/nP8H+/+J
kzx1hheMh2T7f/EC+5/4hHjWE/b/uuoP9mDoq7RmDSeNpv9DGy5btpR98ukn
rGWLloqvI1hvidT/I8k/1t8/4hOf+MQnPvGJH12+qf/7+f8Pr39rlXitUZD6
2RxfuBIqgwhzbUAeh3h2DRiq/b85Fgo5dQy65CruxZhIjJ0sOyr5OcpMrLWA
flm6DNqX4/5fqS1E3jDPnBAfz8qUKYs2FsL/v+CfPHkC84DwefPmp5tfo3oN
5OP+Xw3fXf8hkv/PcPVftXKVo7sfOarlz541x5w35vHAh5GbPxPGP7gWAPY/
x2xWF8v/50CN/894eZ+zq/6TJ03GsVLdenVUuaSKvuytP9hnAR/2tLrbf3RS
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
/rfccivuCxYX6P9Q/59/XuhKY76b8/9xbMfOnXYaYf9v7hXx1n/QwEFY/+XL
nf3pYMcPezz8ygV+hNH+p3w5TxzoG99i33iL/f3vf7ftt8y+cSLqv//wO/UM
H69AvfdY8yl/5r8/xCc+8TOPD/bDySkB7bNo8t05GOqteiPSeMpuKPEi7f81
fD5Hix9Jttmdf+ZMEPV+sJmHeaj9B8x9b3PnzTX3Cti6vJo72ASg/Y/i/8e0
//kF5/9VPvjrdOb/1fpv2Sz0/xkKB/bgtmsn9CCVj/P/XP/X1R/n/3l+ly39
f/2G9aaPoS5d0P+pm9+z5/uS/m/Y7Pbt2kWUf3c+DgH7l7NnQ1hvqKO5FzJ6
/d/8DqS9/cU+2lLgp9GHX/vN2ujvZu/e/RgCflxgr+STTz6B8/ruchYrXpTl
zp1bYXvsf6RnO3fusPbxNkpz/bXnlknPhf5v+rU0r1pvvol2NbDH4Eq+f+CD
scQrJTD/li1bavm6Sw79Y/du3I8qfJTq+CArnP/+aYGn/hcuXuD65t/Muf/D
h9LEH87HZlDmF154gZ0+I9vzXXn/m+7Su90XnHMAzw8ePKgpoYHyAJ32rbfe
sh+K+f9vv/lWy69d+03V/sdw/BCNV8YhTiox//+btf8brpo1a2CYvffYVf9f
F/+K/b9cuQq+9Rd8mPsv8UpxV9/QxlbuxP1u6BerVtvrMjr5495zXscFC35S
8viz//0hPvGJH1t+IDngtf+JAd8niidYJRnaOCLEsX1wUvlgYsJ37rI/f9vW
bSwlJUXLHzFyFOquq9GWhaEvFbgfPny4h3+J69WtW7Ux7X8k+/9lS5da+r86
/w8pIV9T///Bw9+C9j+NLf3fSSXP/7vr36N7D9aiuWz/41QU5/8bNbL3kH47
1fQXNAv2JTBV/qdOmXuJgS/P/5v6v2x7pJc/7OeDvGHtY+CHA3FPAoypNMXy
3Ke1/yfj2X1pb38xj377X/6Caz3u+KmhEPvbgw+yAgUL2ol69+lrzq1bfvnl
EsGe6tw35kbf7jIf9hGDzlK/fn1tRe+4/Xb20EMPsdBZdU4aop3m47BmvP2G
Dh1ih6n6v7f/L1jws1nG0Y7+P+SjIRj27bffavs/rMns3rObnQffsnB/+gzb
Egjw99Me+cNYFvJ66aWXtHz3J/fVvWs3TA975931FdeLL76IfkmPcP3ezR8z
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
PxpMDdNh/D6nJPucfeoJig3fL4T4xM8Mfkqyz9rdNVJ/4hOf+MQnPvGJnzF+
wKVDxIKvy1MfPRLVUJYZAikpvnnpU0eXr8uP+MTPLD70f+3enUziX+36E5/4
xCc+8YlP/IzxQX8IBAKaGNHj+0aKENOQPhiaJ6bfIk05Ddd9jPjmG/GJf3X4
3r0711b9iU984hOf+MQnfsb4oD/47f+NFt87ZvAE2Hl5S+wvH539v668seL7
xiA+8TOBb9rupVyz9Sc+8YlPfOITn/gZ4ycr5//GiB82D8P17hdsSI/Mz2n1
fRIrvhNAfOJnPh/1/5TANVt/4hOf+MQnPvGJnzF+AOf/U2LK95YnfIChCTQ0
8WDdQg4yDEONH2O+WxLEJ35m8vHsbunsvmut/sQnPvGJT3ziEz9j/OQU7/m/
MeEb3s+KryD4V1Now3dsYbj2PmoAMeZHBBCf+DHkm+d/pdj3mc2PCCA+8YlP
fOITn/hZko/7f4UfzRjyjTTEsYN1TFFm6Zm5b8FwxXFIXlp0+R4K8YmfiXyc
/5f37lxj9Sc+8YlPfOITn/gZ43v8/8eI787KcN342SiZj/WMANgthQPJBY8B
33AiEJ/4mc6H/o9rd9do/YlPfOITn/jEJ37G+IEA6BCBTOEbUlp3GlkeLqsi
+92NcfwWGUwpiB4Rdb78jPjEz2y+6btL+MC99upPfOITn/jEJz7xM8YX8/+Z
wdcmDRds6AKsfw2mPbdYihH+igLfPz3xiR97vu7s7mup/sQnPvGJT3ziEz9j
fNv/Z2bzNTz7s+G3GqFGBN8nnnjCPslIWymuhK9lEJ/4mcSH/h9wj4GvofoT
n/jEJz7xiU/8jPED0hxirPjavOSHhl8kKaKmTKr/f/8Sx4rvRCE+8TOfb8//
R5G/bdt29vu6dWniO1GuTfnHin/xwgW2YMECFjxz5qrwtRGvYf6sWbPYqJGj
rnr9e33wAfvss8+vGv9q15/4xCd+dPk4/x92D+GV8/0L4Tww/KIZPjcG88x9
qnkYusCo8t1xiU/8zOQHktX5/yvlnw2FWP6bbmI5cuRgW7dui8i/2vWPxF+8
aDEr+WpJVrx48TTzX3n1Vfbyyy/zV1Hz/b/8vaj1ueh/rWcvs3lz58Ws/r16
9eJtEMdq1aqVreX/Z+GXLVeO5c2b96rx4dq9ezfLEZeD9ejRI9P4ixYt4t+f
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
znM3adIUz3SF+N279fDU/9zZc+gHBe2hJ0xMs/zd5/+KcNhjCnk98si/PHmd
O3ue3Xef6dv9yJHDSqZ+sp0+zZmn9pWRsP+X0jr2P5L/n5+F/x9p/p/rrmDr
Yo/ZXPxBAwfa+3/d/Kp4Dpd0xkCE/gftA3s+zfapj+Vo8k4T9uCDVvt072Gn
gTlzsF2/7dZb2f79++3sLnId8+mnnkYbmQULFth5m/Pmceyeu+9B+5aPPhrK
6tWth/51QG817f/7OfUW8/+23ZNTZkWurvb37qt21lDerFUb+z+c2QvnZsE+
WtiXAs/Kly/PxwIyyZr/z5PXw4f8oG+hnOpbcmrShP3V7sfdFbnOnDkT49+U
/2bWpXMX3Ms9nPf9F/7vBdUvEc/7vfc6YNxDh9SzpgV/5gwrr5tuYp07d2bj
vv6a5zWcvfDCC8jGvKR2hT3BEBe/P+PV89jC/f7Ei/n/MP3f7f9TjnOU94/n
n38en8MZ0uDj9euvxrHmzZqz22+/nev+17Mpk6f48rPy7y/xiZ/d+V7//7Hl
G0q++gIqeF2hLVZywHv2qasoMeW7nxCf+JnJh/5v7v9NHx9sLzp37sT1ljtR
74BzUsUF/uULFCyo4EBvgb/fMPfuBoCNATwDW3k3f/WqVZi/45/Rqf+kSRPR
tyDofTDnCjrGI488wqZ8M0Vbf4MrZf/+979RJ3efSxWu/gkJpXF+0c2fNm0q
+mGBM5Dd15ixY7FOsC/VS2Ha9rdlxOvllj/ICPRNU0Zq+6/iMlJ9WDL2y6JF
Lp8okP8Mpw00fGGPsnLVSg//oYceQn1brn+k/jdp4iQWX6oU2r3kwPaJM9tn
yhSFD3omPP/qq6888l//++94Ni6c83v+3HmbDzrgXZafJ+gf+fPlQ9sfOIse
5pH7wd5hK49Zdt+bIBXQfPij1ffM8wLU9hdyHSjJVbahAl+gf//735AP8eCs
Ajj799TpU57+B2MCOOfXzYcL9tkqcsqVkz38sCUnzfXzwp/ZE088gesAov5/
e/BB3C8t9kPAv4/wPEBfVltF5cM+ccgL1gGE36UH//Yg69evv9TOTnL4/uTj
9YCxUVp/f0onJFjfH//+v8xaq+j1wQe6x2hr9fZbb9vjD9GfwDZo6tSpYfnh
6u9+cq39/hOf+FfKt/cQxpzvDQxTTCWS57fMulS7JU2mht+D6PC1mRCf+JnE
N8fuAU/8tPIvXb6MZ9DCXG1G+Nps01n/8+fPs02bNrHUUGpEPuhH8r7MK+Wf
k23Y/a4s3P5p4QeDQbTfqFOnNnNfaeGD3r5x80YWSg1pn1+8cBH3SvjxoW/B
2bM62t59+9A2ST4HWFfIaMl/urDRGu+sJYCtDpxJdqV8ux8HUz3PdAUFuW7a
vFm7z3ozD88hxoRp4J87fw7TmHuR/ZA48sf20pfIP/9oyR/O0d6wfgP76aef
2MkTJ7L97y/xiZ/d+ab+7+f/P4p8w/XRPUgwlIfMphryY0MJCPjY/0QqZ7T4
qniJT/zM5Qd87H8yi3+160/8yHywI4f57XFfO/sSrqX6y/mLvQRoQ5WF69+7
9we4DrJ9x44/lfyJT3ziZy1+ICXZ1KNjzc/Q5S60GuT4/5ejOSVlV1yk8HxN
LOITP9P4jv//q8PXxCJ+FuPDeVBxOePss4szm39lV3T5YX0oZQI/rddzzz7L
nnjiyavG1+ZMfOIT/0/HV/YQxoxvME0gfjSYGqbD+H1Oce1b1kaKId8vhPjE
zwx+SrLP2t01Un/iR+bDuQy27c81WH854OcFC1nhQo+y77///qrw01J/8BsK
Z87B+ddXg3+160984hM/8/gBlw4RC74uT330SFRDWWYI2L77wrNixdflR3zi
ZxYf+r92704m8a92/YlPfOITn/jEJ37G+KA/BOw9hLHh+0aKENOQPhiaJ6bf
Ik05Ddd9jPjmG/GJf3X43r0711b9iU984hOf+MQnfsb4oD/47f+NFt87ZvAE
2Hn9P3vnAR9V8TxwktA7SLcgKKAUaTZUQlFAaYKi/n8KWOggVVFQEBGlV+nY
C12p0kQFFFDpIOUSadKk95ry5r8zr+4rlyO5uyRm3sdwd9u+s/P2ztl9s7NO
ib314+b/7yZvqPieJZjP/DDwVd+92Azbf+Yzn/nMZz7zmZ88fox0/m+I+H7b
UGyvXsmKJUt9H2jsk1DxzQTmMz/8fLL/Y30Ztv/MZz7zmc985jM/eXwfrf/H
hpTvlMd/guKSqLiUw+cW1iRFUeTyIebbNcF85oeTT2d3W87uy2j9Zz7zmc98
5jOf+cnjx8Q6z/8NCV9xvpdiBeG/LkIrnnMLxbb30QUQYn6SAOYzP4R89fyv
WONzuPlJApjPfOYzn/nMZ36a5NP+Xz2OZgj5SgBljGQ3pi6zJU/dt6DYypgk
Jy24fAeF+cwPI5/W/617dzJY/5nPfOYzn/nMZ37y+I74/yHi25tSbB+8fJTU
bHeGD/2W/IGsgoeAr5gFmM/8sPNx/NOzuwzaf+Yzn/nMZz7zmZ88vs+HNoQv
LHzFUtdex6oPm1eR8WrHmHGLFJAEcUcEnW/NYz7zw81XY3fpMXAzXv+Zz3zm
M5/5zGd+8vj6+n84+K5V/SUrbgnavwq4nltsKeH/CgLfuz7zmR96vtvZ3Rmp
/8xnPvOZz3zmMz95fCP+Z7j5LjzjveL1NEIuiLFPHOV0/yQlMClSwndlMJ/5
YeLj+PfZ58AZqP/MZz7zmc985jM/eXyfZQ0xVHzXtqyZilchS0EXmeT4/94S
h4pvFmE+88PPN9b/M2j/mc985jOf+cxnfvL4tP7vdw9hyvneQpgZilcxxeOD
Ao61T7kNxS0xqHx7WeYzP5x8X4y8/p/R+s985jOf+cxnPvOTx1djCMaEmG+T
xat51xTzs2IT0ji3wLt5d10EiW9/ZT7zw8mXz+7OeP1nPvOZz3zmM5/5yeOj
DzGeARZavj3PPdWrrvrGWdYZ/0d779J8KPhyO8xnfnj5+tw9o/af+cxnPvOZ
z3zmJ49v3/8bKn5SfVYskwt7NS855HmLi9yesgaH73Uxn/nh4OP4pzMwUonv
dTGf+cxnPvOZz/y0zdfP/w093yaFopIUe2H/apKSDf+fAGQKBd+mGOYzP6x8
HP+xxvp/+Pmp3X/mM5/5zGc+85mfPL7P57PY0aHne7TkSFO0f/xFIvJZbB+r
2EYdh3KDy1cc/zKf+eHjq7G7fKnGT+3+M5/5zGc+85nP/OTx5TOEQsfX3yrW
wn5aTfpSLPE/bXUVW3KI+M63zGd++Pj07E6K3ZWx+s985jOf+cxnPvOTxyf7
3+dv/28w+IpTHj8oe2nXsgq4xj4MrMXg8B3tMZ/5YeS7nt0RRn5q95/5zGc+
85nPfOYnjy+v/4eK76+Ev5qKaxn9k3PfsmLK7qgafL5beeYzP1x8HP+xPp+U
k5H6z3zmM5/5zGc+85PHR//hmFifa14w+fYWFPmj/EGv45Bdkcoltf9X8Xgf
LH5SumU+80PJN87uy6D9Zz7zmc985jOf+cnj+2J8Tv+fEPA9ijiSZZLiWkZP
MX0fzFoemJDwzU/MZ374+fqzu4zaf+Yzn/nMZz7zmZ88Ptn/Ln70Qefr9aSN
CNb2FE8ZpZJGdcv6vyN2qeVfOyeIfEci89M8X0lMhHnz5sFvv/6WKvxgj3/1
/N+0q/+4G/Hwy6pf4NKlSynm7927F7Zu3XZT/NTuf0bk/7B4EUyZPOU/3f9E
JREuX76cavzU7j/zmc/89M+PiYnVYgiGju+UA2zlrfnWdj0r0uXTz/+1xhly
SKeEjG+WY3564SckJkD7Du1h5MiRqcK3VUzx+Kfzv9Kw/gcN+gAyZcoELV98
KUX8q1evQp48eaitv/f+HTA/tfufEfmNGjWEHDlzpho/qf4vXLQQoqOjoVZ0
TahJr9EQXTOa0qJFGr7+tvY3V/4nn3wCDZ5sAAULFICIiAi4997y8Nqrr8Kh
Q4cd/CeeeILaIwa2X8vyZ+H/uGJFkv2fOnUqPPzww/R34sSJFPUf7HlSfvof
f8xnPvMD4/uMNcTQ8d3aUxwtO2t4k9X2XeP/KPZaoeMrUgrz0wM/ISEeOrRv
DyNGjEwR/8zZs9Cte3eYMX36TfGDPf5jfbb4PwHwhwweDOUrVIBz58+niB+I
/ufOmQN58uaBYUOHpqj/uN764IMPQcmSJeHsmdPpdvxlBH6jRo0gZ66c9pw0
0/9BH6hz0goVK0KlSpXo775KFbXXSlDxvkrwyy+/SO3jukHnzl2o3u233Qov
tWoFr3ftCg/cfz9kisgEt95+G+zetVviY959oq37Kt8Hle+7T7R9H33G95XE
X8FbbqH2vvrqK7/937HjL8iWPZsoG0Hl/zl4IE3ff+Yzn/npgx9Da4jyHsKQ
8b2SXD/bpFBsRRVb/B/HHMQdHUy+XIf56YGfkJAA7dt1gJEjR6WIf/LESWgv
5hGff/75TfG9eTfH18e/eQZG4PwunV+HCGFLnDp1MkV8uU76uP/MDz2/Idr/
uP6fRvvfsUMnyJolKxhn3gfAn/f9PIgQdn79Bg3gwoWLUp0hQ4aQXd5A5AXC
19OrV68OOXLkhH+P/evJv3btKlQU85RsWbNBnTq1iXPw4D9p+v4zn/nMTx98
Z/z/0PIVqV13ASW8m9AaK8bnPPvUJkpI+fYc5qc9flxcPFy4eNH4HJ8QT3b7
iJEjPPnx8fFw7sw5SExM9OSfPHkSOrRD+/+zJPsfH58A586q7QV7/Kv7f/3z
5VYU6NJFXcc07P8k+Kqd5K3/RO1zSu+/Ym0nBfc/MdFbAFe+W3vh5LuR/PAV
aVwm/f1TpN9mme92r1La/4YNrev/9lbM0oqS6FHGnW/a6yn7/Xn66afhtttu
dYN48v/3v/+j78y+fftc+WXLloVs2bPDlatXAhr/CxbMp/Z69uzll9+rVy8q
N2rUSOjRo4dq/x844CwPgfffLP3f//1nPvOZ78039hCGnO9M9COmVEjxKCn7
Lbk0qnhlBIfv2gjz0wT/zw1/wviPx0OX17sIe78D/X908eLFcP3adbL/R420
+/8AbNq0mfzVO3ToQGVeF3WHDB4CO/7aYZTB5wc9e/UUea9Tu+hL1F38fxn/
37xr1y5JHqO99theO5IF1wr/2rEjKP1X5+4+R3l33Sjw+RefQ6WKlSB//vy0
/l+2XDlaW3zttdeMUs8//zy0bNkSYmNj4eWXX4ZiRYtBpshM8Mfvfxhlrl67
CsOGDRN1K0GO7DnIv6dmzZrw0UcfCdtUkfibN2+icrNnz5bEfOH5F+AlwcE9
lO+88w489PBDkDlzZrjjjjuIi/Mre//btm0LtWvXltp5/jkhbytLOw8+BFmw
nZKindbYju4rLevw/LlzMHzECKhbty5ky5YNSt5ZkvSAvtXffvst6eXAgQMB
j78tW7ZA7969oUrlKpAta1Z4rOZj8F7/9+Dw4UNSwde7vA7VqlWDlT+udLR6
6tQpePTRR0kmHGd6tSvXrsDwYcNJphw5rPoeLOtbXKtXrRb3uCKsW78OZs6Y
CfXr14Ps4h6VFPro07cPxIv5MM5DJ4yfQD5gqPO7774b2rZrq+3RtrS1ejVU
rFAR1q5fCwf2H4DnnnsOihUrBnnz5YWmTZvClClTqT27Phrr/j8u339dT1Wr
VIUsqKfHhJ7eE3o6cthVvdeuXoO3+74N91e/H7KK8jh2a0bXFPbzAkn/eJ0T
93TP7j2Oe2P/8OCDD8ID9z9wU9+/77/7nsaFWz5ejz/+ONnmp0+dTpKP8xgc
J7hH4vjx457oNWvWQGREJNR9oi5VN+z/fw56MMDv999DdP9XOv39Zz7zmZ80
X7X/veL/B5Gv2N46FqmkTDCoijVbkRJ8Hv4/SckZLL6sXuanFf6GDRvIfsd9
vgPefx+mTJ4Mffv0oTS0WdqR//8ICb/zr53QsUNH6NSxEwwdOhS+/OpL6Nev
H/kKYdpmYbcgEW2nr7/6GiZOnEjt9BHtfvnlF/DlF1/AkSNHpfY6dBR1O3Ui
3/evvhTt9e9Hc4aOIm3z5s0p7r/Pw//H9RLZS5cuhVdeeRXKlC1LdgTa+q+8
+goMFba83izaJeXKlYVy95Ql+6TeE/XJ7tvt22Pw0a7G+rfdfju8+OKL0KxZ
M8gl7FL0T37hhRckLNqQEaLsxAkTpa5WqVyZ/KObNW8GefPmhUYNGwk9d4QK
5StQ23fdXVrMM65J/a9duxYULlzISKB2qlSB+0U7zZ9+WrSTj3zPO2I7wrZF
v+y77rpLzPmuSYMlLj4enhD2GspVoGABeE7o4ckGT4q5THYoWqQovPVWb6q7
0zKf8zf+tm7dCnly5RL2aTaoVasWjTOUKyIS94feS3MNvfCuXbshu9DVbbfe
SvaqVSnPCz1j32fNmind/9atW5M8t99+G+m7ebPmkDNHTipr6Fu7/2gXYzrO
d7NkzUL7TJsJ3WTJnIXSO4gx3hPzhN2POmjxXAuaU2BebSF7QnyC0c/51FYE
jBo1CnLlyQ15xF9zcb8aN2ps8Lt27eoYf410/x/b+EM95c6dh+x+3HNLeqpa
Rd1He8+9qj4s4//ylStQrWp14tSqU1t8196GZ599BgoWKEhpEydNMppPiIuD
EiVupfRly5aB47Lcfxy3jRs3ovfXrl+DP/78E37+6We4KnjJ+f3BeVtOMXbK
lCnr5Lrw58ydS3K+0auXM1+DXr5yCe4sVQry5c0Phw4douQePbpr/v//pOnf
X+Yzn/npg++LjVHt6FDzk3XZhZaTzPj/1mKmpJBikfzzXUoxP5X5R44eoXV7
tP23btkqlVu+fLk6L2ivx/9RL3VNvxelb922TWoZ7Vdc4x87ZowEw/Vp3f/f
3n/9GUH7du2NeJX6he1hvbFjx6a4/2b8f5lvFPPQP/r/RJD/zylHHtmtIu++
+yrD6dOWfK2t2bPmkC1ap04dwz8Ks64JGxv3T2IePjvQ+dhfTMP5kvWqKjho
y5QuXVrMm44Y6eh79YKwx9HulOooQGv/hQsVcchrbUfvf1xCPD0bUO1Emd2z
Z0/qI/qBGOvs4jp79izcc889EBUZSXx6nmPrv12n//77L5QQtnzu3LnhT2FH
WvX/8biPiV+vXj2pziRhtyK/VatWRtqsWbOoLNr6Vig+N8GydWpr+tb4hr5F
XozQt37NX6j6laDOcf1fv3C8Fi9enGxtXEdf8sMPRt6FCxfoGQ3W27HDfNal
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
vnSJ9BwXd0PK69Fd9eX++puvYcf2HcKWzUrxfK5fvyHdf9Q37hOgM9Zs/P79
+0n+P8hfqK3ZT7fE/tEv3f6fKtn/Kmqj7v8zYqTB1+cSd99dRorFql9nzpyG
vPny0XkGOh8v1f8/l1R27FhNT99/7/r9v3xZ1dONG3EGf//+/eoZDODUP66z
Y3s/rlxpNhPA+F+ozWne698f3Arj2W1FihaFu+4qbaRdvnyFYrY+/NDDDsH1
qj+u/FGNh/r66w5+nJgblSp1J8U+wjm31+8fjrf33x9IMYvff3+A+Hvf+MO0
Bx94kBjdu3WntD///CPN/f4yn/nMTz/8mFjn+b8h4SvO91KsIHD+/83epr1B
ee+jCyDE/CQBzA87/8DBg9CpU0eKAe/bI58FhDE6dH/+kWTnqHXU8wLa0XlK
1gvjgeN6qB4zVN+vixfGP8S0nj16GbawfunnDwyxrMti9hVsb+QI4uOZYHFx
1v2/yRv/Mb5Y47O3buSkPprfyPQZ0x38qrieXs70p7HzH3jgAbIvt22TY6v+
8cfvUKBAAW09+iMj3Yj/M0H2/1f9dso4+PqVJ09eaCjsditfjv+jpmM7ZR3z
FfO9Yf9bsocOGUr9r/FIDdqPrfNjY2Ipxn627NnIZ2m3sMeSGn++PT5a60bf
9L1790p5p06eomcpaMPv37ffqPnjih/J76dxk8ZGaTwnjmLCvyGfB4tnG6j6
luPI6vrGfqj2v8pE/3/7+r8OMdb/Nf9/6/dPX/8fafG/X6jZ/8i3xirFKzEx
geJ1kv/RRx9JOsd9Cvb4/3gul6qnwrD3770SH5+l4T6SrFmyCnvf1BOeEYB7
q63n7+GVINi4FwRjbprnbSnkFzNr9izpe2rtP164v7ZA/gJ0zoM+hnUt4Flq
GCsK+4t7QChVu//PPvusNl/7Rm4Q1Pj/NWo8TPkrf1oJ9u8f7gHCvLfffluq
erO/f/L5X87fv4Pit+93MS4uXrzg2f+U8L0b9AAwn/nMT9N82v+r+zmGkK8E
UMZIdmPqMlvy1H0Liq2MSXLSgst3UJifJvi/rvmV1uvxrKNhw4fC9OnT4QM6
h7cdTJgwnta/rXYOnnv6BsX/7wDvvvMufP3VV+Tfgs/q0VcG7WW02eMp/o/J
e/vtt6B9h3bQt28f+Oabb+HE8RPEv3zpMp0ngDK82+9d+OqrrylGOp4r1aVL
Z1GvD8kSH287O/Um+0/r/9a9OwHqf86cObROX6hQITqTGD/rF57/5epPozWG
PgdYt3jxEuSvPXbcGDpDDPd71q1dh2wn9P/R+bpP0ARa/zclqlqlsm2fgdx/
8v+37NvF9NrC5kOZrYlVqlY25ysu/cezctH+t4+/Vi1fIrkioyJp/br8vfeS
zY/n3fbWYsCQ/4+t/27jD23uyMgoKFq4CLRt1wYmTpxEZ7zdUbIk6QPjWOp8
jAOKvusFC+SHY8eOGS0liLFQrVp1sqd/+flnI30MPV+IoGcuuJ8AP7/6iqpv
tIFJ30OHGOIsoPj/OLeb4bj/P65YbvH/kcfYxg0bqN6I4SOM8afvJW7ZshXV
Q18rtGHf6t3biHvTpGlj4/9juv4bNWpM8X/s/IUL5pM9jzGP2gk7G/cVdBJj
CGOxImfAgPel8b9o8SI6iwHngu+++y59j3Hf9iM1apCsalwitSw+N0GfMTr3
YOZMv+P/C/FdzJI5iuYjvcR8C/eyjx41ivYXYJ8ee/RRx1nIW7dsgeIliqux
gZ5/HqaKOdT8+fOg/3v94M5Sd5I87du2E3OTeIOEf9dvXIfbbruNzk87feqk
QyLH5ef736OnPf6n3Mvnnm1B/d+x468M/fvPfOYzPzC+I/5/iPj2phTbBy8f
JTXbneFDvyV/IKvgIeArZgHmpzH+qlWrYNiwodCpYwey61U7dy7cEHbC6127
wqjRlvO8xN+JUydE+WFkt+nr/YMGDYLYv/+m2OD4PIFiCln4MbF/k72kx/PZ
alkTR/8gld+R+LgX+MNBH9La5+QpU6ADtZeQ4vFPz+5uUv/oS/KOsKfQDkO7
JbpmtMGoVr0a7T/0x0ebH31SsC7aI7mELYpx1Cluv7A/hg8bbhT/7dc1VG7y
lMlSm1WraRyP/ufLp57la+XXrfs4rdta73+1qqKdcveA15U/X16yR+0auX7j
BvmitGvbnmz+WnVq0f3G82D1uPPojxHo+MO9qBgXPmeunGTDo51brlw5+G7u
HIndulVreR3Z0n/0/8+aLSvcfvvtanwbLXvM2LEUR8jQd+6cpO894t7jZ3Xv
sHqhzYx83G9uEZiulSt/orxPPv3U8f3buHkjtTVq9CijvO7/g8+JFi1cCKVL
32U8D8CzCl7v2o3OULAPsaZNmpKvi52P15zZc6C+0BPOD2j+FREF5cqWgznf
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
+nR6/91331FrN67foLMI0BfJja+/QT+3Bx98UOIP+nAQtYX+d/bL9P854Nn/
9Pz7y3zmp3e+j9b/Y0PKd8rjP0FxSVRcyuFzC2uSNe5dIBpPKd+uCeYzP5x8
OrvbcnZfIHzdPps0caInv1v37lRm27ZtWh3VDpsxfYZcUOv/3LlzyQ7U/Ynd
+BjvENuYN28e5aHtQXbDhPEB97/8veXJFuvSuQt07txZ/HWCTvQq/rp0hk6d
Oom8zrB02VIH/8iRwxQ/Hf3Ys+fIQTY27tecPWe2g58o9Ih+Mfg8A31idDvq
8bqPw/nz541y5cvfC1mFPHY+vddkJHm0OY/uTz7BqntbV994401t/X+Ts4jL
wMG1V9SJPz6+Llu21IHbumUr2YY0Rxk+zFX/+/fvJ193LIPPCtB+fKfvO2I+
MRL69Hmb0gdr6/84/hZqa/bTZ8y0C2vY/1Ml+19Fbdy4QbO/Rxp8faxOnDjJ
s//GWN2+zRj/qv9/Lqkk2vnZtHvVyaIX1FXnTuJzF/Xz0qXLHOMP17Xfx7FT
uw7tncZnHjR2Zsv7pJPz/af4nxGRLvlmKcP+H/gBgK2kFz9RvMXv75jRY+DV
V18Vc7QP4bff1Dns2HHjaPzv3LnTAJYuXQrKlCnjysfr5KlTxvxBv/bt20ux
THFf/KnTp+gZ1LkzZ8mf78yZc+S7F6E9yzot8vU503/l95f5zE/v/JhY5/m/
IeErzvdSrCD810Voz3jaorC899EFEGJ+kgDmMz+EfPX8r1jjcyB83aZq3669
J7/u43Uha9ZsEI+xdxTVp9u+pmtlkP+wyO/YsaMn/7VXX6My5FMjsg8eOEif
27VrF3D/WwnbA2Pa0B6DFOgfbfjRI0eTrz3ahP8eP+6Xj/7N+npqd2Fv6g2i
LYS2m7p/IWk++oxjGx3ad9CSnPrHPahoP6vxP5Mef61atlJ1cvaMI8+r//j+
+rXr9BwF/TkqVKxIezu3b9vuqNa8eXOS5/PPP7fJolAsWbSFhwwZYgDcx4qa
baz/T53m6L++/m99TqE/d8Ix4tUhnJPhfuK4uBtGTqNGDR3x/1u+pI2ds+b+
lOR8/85fuACjRo+ifQc4dk4cPyHJ43zvnY18c/+vN9++/u/OCJwfXTOa/NZw
P7We1UDMQ7JmyQrXrl118PHCuQPKMPADcw8C3mO8//r8WH8epL/HvAhL3uhR
ox39Nz+mv99f5jM/vfNp/68eRzOEfCWAMkayG1OX2ZKn7ltQbGVMkpMWXL6D
wnzmh5FP6//WvTsB8HX7v8zddwkb8JoDg3tnMWYnxj3UL2P9X/z/3qv/BQoU
hPL33Atx8TccfFz3u7tsGShSuJBUF+P9lxHp16xyaP3HmDBdu3WlOPl6OvoK
0TOE77938PG6fPESHD5yCG7ciDNy9h/YDwcOHHDVf5s2bcheWblyJaVcFPV9
e3xw8YI1dqJ6YSx/LGvuNdXkEWnfz/veomSTdPESynOY9hWrWYm0ll6uXDmI
c9mbifsI8ufLb/P/t3QVnONvzFhNhu/nud5/PNcV16+vk31s1u3RvZu6H/ab
r8nPPZuwoStVuo/mBdbxh+m4T1tJVBz8/v37EXvwkMGGjAsWzid/ouk4Vmzi
/7hiucX/Rx7jGzdsoHp4DpXO1/cS3323OUasfNxXni+/GKvVq0n6b9SoMcX/
sRJGjxlDbX0vjR3zwrMH8AwA9IXR+Th2Doqx46Z/Gju0X8ByjkIyvv/G+V/W
ZNv3f/3631X7f9AHSf7+fPf9XLhHfA9HjBzpysdYH9hWtapVJMZbvXuT/ge8
N8D196dB/QZ0r/H5nX7t2rUT3h84QPy9D++/PxAGDnhf/SzeD3j/fXjgwQep
Trdu3WCAKLNBiruU/n9/mc/89M53xP8PEd/elGL74OWjpGa7M3zot+QPZBU8
BHzFLMB85oedj+Ofnt3dBH/hAjP+B+0BtvBxDyXG4jT2Bmq19TgsM9Cnw6P/
uj3UwSU++Ku49h+Bzwc6Sf3H5wVoc+AeYHv/0feG/EHIjlHz9gjbPGeOnFC4
SCHYu3evxMf9rOibnjVbVjiw/4DRTq3omhAVlRl2/LXDSMMquA8YfYGiIjPD
qZOniPHLL7+QnHjugF3/qzBPyNq9W3ej/7t1eQoVJnmsly5PtqxZYL9FHuwr
9qutvqatyR+fGE+x2/X1U93+T2r87dm9R5WhsLsM5cT8Cp/loC2rXyt+/JH2
h2IMIJ3/wYcfELfXG72kNu5/4AFK3675gul83FeaX8z5yP/nI8v+X7LZIyzr
/6bsK1b8SHno/2Mf/39u1Pz/R9r2/2pjtbW0X10dq0/Uq6+O1Q/N/Qd4NRb2
v7n+r40d3x6KCYQ+TH/rY0fLPnniJJQpV4aeI1j1FB0dTXtzt+8wxw6WTxD3
CsdOZJQ6dvTG8J7h2QkJ8QkgVbBd1u9//XoN6BmSv+//uvXr6PtH+3+T+P05
e+4cneuBzybUuH5m5qlTp6FK5Sqkszlz50rCHPjnAO3pwGdiOF+28hcuWkT8
u+66W4rTm9Tvnxn//x8pXa9y8OBB+H39H2K+fTFd/v4yn/npne/zoQ3hCwtf
sdS117Hqw+ZVZLzaMWbcIgUkQdwRQedb85jP/HDz1dhdegzcwPgLtPO/0B8C
X/HMWjzf9M23elOMHExr3LQxmGsAZkzH6XafDots6EuA8cOx/gP3PwB9+/aF
Pu+8A/dre3bRXrp+w7IGrajxNvFcJczHM7b69esHfd/uA9Xur0Y8XCc3zq7S
+o82IdpkGLe/bbs2MHHiRPJ7L1nyDmoHzxSw9h/33OL6KsYneefdd2H69G9p
n0KNh2uYcyBLT1B2tMHrCnlxj/A333wNvYVucmTPRmel6XsiDN2gPJERQp7C
0LatJk/HTnTeLdrYGH/Uqv8rVy5D1arqeWT3338/9O/fn2INlbv3HtU/XdRV
/X/s8X+8x58sQ1uYOEHVyR133kl6HKDJgHxcM0ff9QL5C9B5w/qFZzbgMx+0
z39e9bORrj/jKFG8GPnNjx07Fl559VWyr+vUVe/dEFr/Vwx9GM+KbNIut+7/
tWX+qfv/Dx9h9FSP/9OyVUvqB57VhWdw9X7rLXWsijycw6gxOM3x36ihuv/X
zp9v6EmMnTZtjbFzJ90rc+zo/EU4dqIi6Lzjfu++A99On66OnUceUcdOa90X
Xh3/efLkpvSZM8xzD6S75fL918//9ff9X//7eur/wA+c/v/mq9n/IYOHkBx5
8+cX3/OX4Msvv6RxVrr0XcaY15/nWFsaNmwY5Re/tTjt58U9+gPefw9y5c5F
89gftedkSfH1l+49e2r2/0HX/rdo0YJ4f4n5VXr8/WU+89M7X1//Dwfftaq/
ZMUtQftXAddziy0l/F9B4HvXZz7zQ893O7s7Kb4enxH38uL/3637W+8S71/v
2pV8b6z8RVrcmlmzLHaNCwLXHjt36QL33lPOiDeCdhqeJ2zdN2sV8eyZs5SP
ewh1X2Fcy8b1/0sXLrr2f9bs2eSPkEs7rxjjp9wj5gpzv/vOtf/op165cmWI
yhyl+SVnEjbfnWTv2P0bL1+5Aq+//joULFhQkyeCbElcm4+NtcQbtlTDM7Ia
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
CQZVsWYrUoLPw/8nKTmDxZfVy3zmh5fv8/D/CRZ/A9n/ETB8+PCA+j937neQ
J08eGDp0aFD4aUX/2bNnh8ZNm6Qa33xJn/zGjRpBzhw5U40vte/Cj4uLg6ee
fAoixNy11J2loGvX16Fd+7aQL39+Gv/9+/dP1/pnPvOZz3w3vi82RrWjQ81P
1mUXWk4y4/9bi5mSQopF8s93KcV85oeNb8b/Dw1/48YNtJ4/Qtj/abH/4eLn
EPZ/k8ZNUo0vvU2H/EaNhf2fM6e9Wtj4SV2DBw8mOz86OhquXbtmpP/77zEo
VqwYzQvWrF4TMr739d+4/8xnPvPTJl/aQxgyvgIuifRWATnNDeP1PjbG4+xT
R1Jo+F4pzGd+OPixMR7P7m6Cn0jzdne+6f8z3LvptK5/a/8C5CuK/MQzWw5h
/zdpkjw+tZd4U3xHF/zSFPBcS7InaHxFMT/b+YmKPSXl479Ro4aq/Z9E/616
D4hvG7veInnf/+vXr0OhWwqSv89ff/3l4H/11VeQKSITNGjQwL3ptD7+mc98
5jPfg++z2RCh4Lu16V48Kaoi/a/OFxvr2ZZ77eDy3dpjPvPDxcfx77p3Jwk+
rnH26dMHqlevDlmzZiU/h+ia0bBgwXyplm7/Dx8+zEjT+WgXVahUCVq2bGnU
2LJ5C1SoWAnmzJ0j8Z97/nkqh7bl5MlToEqVKpAjRw6499574Y033oDt27c7
pF69ZhVUrFgR1q1bB/v374PnnnsOihUrCnny5IWnmzaFKVOmQFxCAtgvbOFG
3A2YNHkyPPvss1CgQAEoceut0KpVKyHXXEd5vc76deuhS5fOUKpUKZLt/geq
w/Tp0yk/e/Zsmv0f+P3fvGUL9O7dm/qaRej4scceg/7vvQeHDx+Rynfp0gWq
VqsGK39cCfa7durUKXj00Uehbt06kEB9VfnXrl6FYcOGkf5RVvS5iq5ZEwZ/
NFjoWJZj9erV4p6oepwxcybUr9+A/JlKlixJYwB9XxISE2HC+AlQoUJ5soPv
vvtuaNuuDVy6dAmsra1evUqUqSh0hfdkP7QQ9xXXx/PmVe/J1ClTIS4+waGb
ho3U9X83fW0Renqz95tQtUpVMRazkJ7eQz0dOeSiVQWuXr0GfbWxmyVbNsgv
xm5N0feFCxbYSgKcO3cO9uzZ4/f7h2MPx3j7du0d+qd/hcLvu68S9TGtff+Z
z3zmMz8lfLQffMYewtDwPQslUVKxvFFcctS4RS5yKrbPIeKrL8xnfurwnXt3
kuZfvXIFqlWtRjZP7dp1yAYkO7lgAUqbNHmSURb9/9H3Yfiw4VJLk0UZ3COJ
NtupUyeNdLTZca100oSJEr9q1Srw4IMPQps2bai9isKGfOWVV6Bs2XLERBv9
771/S3IuEPYc5o0aNQpy58oNuYWN+8wzzVVf8pw5KK/r613BTf+tW7Yif47b
b78NWgu7H+vlJ1/uTMJGneLQ//r16yGbsPExv3KVymKu0gruuusu+ty/Xz/I
ni07NNbW/516dvK3btkKuXPnIXu2dq1a0KFDe5oHoM7KiznPubPnjBq7du0i
G/42ISvaq9arhZjzoL5mzZwlUVq3bkWy3X7b7fDii/+DZs2aQc5cOUn3L/zf
C9L9R7s4QqT36tULsmTJArWio4Wt/jS9Rx2hbJQnZH388ccFs4WQJye1Hy1k
T8R5hzb+Fi5cSPKMGjVS9C835BF9bN68GTTCe6Lxu3br6hh/je3+P1r+1q3b
RDu5aA5aq3YtaN9e6Kkq6imS5oZndX1o/Kti3lO9mj52a0Oft3HsPkPjh8bd
5IlG+XgxDylRojjJu3z5MkmvVmXOmTOb2vv0s0/BfunF2rzWhsocP/5vQPc/
o/z+MJ/5zE/ffLQfvPb/BovvnDM4Eoy2nBJ768fN/99N3lDxPUswn/lh4Ku+
e7E3xZ89Zw7Zg++8847U/L69+yBv3jxQuEgRba1Z8/+J0Pz/tQvtcbSFHn74
YcNe1ZvHtWaaQwj738qvXLkq2ZuRkZHww5KlUp8++/QzwUC7uDxcuXLZyNHt
/6zZVBsa/TT06+LFi1ChQgWy7b784kuJhTGIMP3/XnwREjW/G+w/rqWXLVsW
ojJnhl9/XW2UP3rkKBQrXhyiIqNg5cofpbYw7mdU5khqr4lk/zvUbVzH/v0X
bitxK+QS85U/N/wp6f/jjz+mPtWv/4RUGZ9VYHqrVi2NtmbNmkVprV9uJbFm
z1bt1Tp16oCSmGjw8ZkOxqvBvL8tY0LVYwSlz5w50xh/J0+ehOLF0T6OEDrO
Bj8s/gH08XfhwgV69oJ1dvy13WAvWLBQvSdor4t7ckO7J4rlnmD+l59/Iemk
YcPGhv2v8/8Verr11ltpbkd6sox/XU/16tWTtDtHjF1MN8audu3dt4/W54vo
Y1dUwWdDxYX9j+V/+GGp7V6ZbQ76YBCNv19+/gW8vn8fffghtbNmza+OXLk1
MyEj/P4wn/nMT9/8GOn83xDx/bah2F69khVLlvo+0NgnoeKbCcxnfvj5ZP/H
+m6KP2DAALJllixZ4gDFxsbC2rVr1fbEfxs36f4/wyn/gw8+0NaFoy2+IWDw
V69R7f+JEyeC9cI1dZxzYH036dq0aUv1fvzxRyN14fwFNPcoVrQY2ar2/qOs
uG7+yKOPSP1HmxbtfPRrsfd/h+br0a1bNyNv0qSJZB8PHvyRXSy6Xnn5FarT
pEljV31a+4/X1KlTqTz6R7mVb968OeWfOXNGAmH7mD5v3jw4cfw4FCp4C5S+
qzRcvCD74OwTtu6SpUvg1OnTDv7YcePUtexPzbVsfR6Fz0DsF/peYV6LFs+B
ffx98P5A0j/Oz3S+3lbRYkXhxEnzuY/Oj/37b/WePPKI1FbDRg0hVy55/6+p
py+l/unXM82aE//MaVNP+tj9YckPckcE/28cu+vWmnsbxHX69CnYuXOn3+8f
zrnw/h84sN/WpvmKfmDI/eSTT7SktPH9Zz7zmc/8lPB9tP4fG1K+Ux7/CYpL
ouJSDp9bWJOsv/2BaDylfLsmmM/8cPLp7G7L2X2B8Hfs2EG2TIXy5WH+vPmQ
kJjgyTf9/4fD2336aGvX9eHa1WtGSWvVVatW0Vr5xEny+r/q+5KJbFc32VYs
X0H56NOu5+u2Jvrte/W/Ro2HIWeuXJCorYMfPXqU+N17dPfs/y233AKPPvaY
8bltO3XuYbX/rPpfuXIl5ZP/TwD3v0P79hAZFSlsz7Ou/PHjx1N7P//0k7UZ
8qNCX/oiRYrCE/XqQebMUfD777/LMiXB//XXX6n/GM9GT1+o6XHMmNG2/gEs
XbqUbOxRI0fZWgUxD/xNjf00YoSRtmC+2lbrVq09+/9IjRqQK3cuMa7MHPQP
str/mIO+Pvg86MzZM67jb/x49RnAT5qeMG3Hdn3sVoD588XYTYhP8ffvueef
ozYx1o+cb5b67rvvqMy4seMcLWXk3x/mM5/56ZsfE+s8/zckfMX5XooVhP+6
CK14zi0U295HF0CI+UkCmM/8EPLV879ijc+B8nu/2Zt82tGmKVSoEDzdrBlM
nToFrl+7LlXZpNn/uh8F/uGeAHeGovr/ROD6/wQpB+3/fHnzOWTR+//v8ePU
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
kb377rvvwrfCLpwwYQLUqFFDi7fT2uBb4/9YL7RdMY5OlsxZYM2vZkz0Nast
8T8tfPT/KV26NMWFxDjtL7zwfzBkyBB6loB+4bimjefTWvs/X/M1x3OD8RXn
EHhW2Vu9e9NZAWSTN25CzySsF56Ni2fm6udX4fxg8OAh0LhxY7Kx0d48ccKM
XYm1cW0cy+M5yC+++BKdd9C02dM0L3jxxRcprry0/zeJ+482N/oA4VkKbdu2
pf0QnTp1ojN3kYN+VPp1+uwZKFGiBJ1hdfTYUaONuIR4eraBMuMcSb/Gas8X
MM4p+siPHTuWzlJDWxptYLL/hW512fT4/9hH+7XC5v9v1f+fG/X1/xFGeX1O
1vIl7Z5UVu8JnnNcvnx59ZwEoWd6NmHRDfn/2Ox/o72oSNIv6mmCGDedOnWG
knfcQXJhvE/rhWM3KjKSzh3DsTv9W3ns4llv+vjHvex4Zpx67sEsB9t6K/Es
Ajz3Gcvi/Z8zezbtl8CziPWYV9IcIo18/5nPfOYzPyV8n2UNMVR817asmYpX
IUtBF5nk+P/eEoeKbxZhPvPDzzfW/2+Sj37i6CODa6n6eu6dJUvBsGFDpa0/
uH6Kdhj6yNj5q1avonX7IsKePq2tuWL8SWxryuTJEq+ysN1xPRf9K1599VXt
7NlM5K/doH4DWLRwkUNI67o1njtbWrPP0JbFuQSeM4vnVOm6sTaA+5PRNi5T
poz2DCETzTtwLnFSj1tv0/9nn36uPhsRcxqskytXLrIxr12/SjF7nm7a9Kbu
P57T1aBBA8iVUz1LF+MOlStXDubOnSvxW7VUz/L95utvHc3ieQV4/tntt99O
9qxOQJu/WHE1jhDJKhjo+4PnuNN8zbJ3eLGwmTEN18Flmc3Ypp9+8qlD/5s2
baI8POtX7+N8y1xi4aKFdB90/ZYuXQq6drXcE8uFsVPxvGA7n/Q0azaNgZw5
cml6ioJ7rHqyjf/Vq9dA5cpi7GaOMvp/p5hXqWPX7AS+f+ihh8RcIbdxDpsb
X7//+/buJzsf+6f3Cb8f7dq1hcuXL6fJ7z/zmc985qeET+v/fvcQppzvLYSZ
oXgVUzw+KOBY+5TbUNwSg8q3l2U+88PJ98XI6/83y8czdffs2UV7VUPZf1y7
L1umrFEOz+bC+JBXrlyxlzZe9b2mM6bPNOqdPHXCOEMgUP7hQ4fh0KFDAev/
7Llz5GOemGjTn/1DgHz089+1axdcuXzFlZ6QEEf68NJ/fFwCxBlrzzL/yNGj
cPDgQUPWUI+/BQvnG3sJ9P7jfGqf5suUEv71Gzdgt9DT5StX3LIdH3A+tGv3
bjhz9qwj1+CL//S94YH2f7+493jmAM4z6IyzNPz9Zz7zmc/8lPDVGIIxIebb
ZPFq3jXF/KzYhDTOLfBu3l0XQeLbX5nP/HDy5bO7027/q1SpDGXLlb0pvpvf
elrTf0bjzzfmZDNShZ/a/Wc+85nP/P8SH32I8Qyw0PLtee6pXnXVN86yzvg/
2nuX5kPBl9thPvPDy9fn7mm9/1WrVIEyZct61HO/9PX/mTNnpFn9ZzS+fiaD
uZcgY/Wf+cxnPvP/S3z7/t9Q8ZPqs2KZXNireckhz1tc5PaUNTh8r4v5zA8H
H8c/nYGRSnyvy16iRYvnoHHjRjfFX7VqFZQvXwGWLV2WZvWf0firflkFFSrc
C8uWLU8Vfmr3n/nMZz7z/0t8/fzf0PNtUigqSbEX9q8mKdnw/wlAplDwbYph
PvPDysfxH2us/4efn9r9Zz7zmc985jOf+cnjY8wI044OPd+jJUeaov3jLxKR
z2L7WMU26jiUG1y+4viX+cwPH1+N3eVLNX5q95/5zGc+85nPfOYnjy+fIRQ6
vv5WsRb202rSl2KJ/2mrq9iSQ8R3vmU+88PHp2d3UuyujNV/5jOf+cxnPvOZ
nzw+2f8+f/t/g8FXnPL4QdlLu5ZVwDX2YWAtBofvaI/5zA8j3/XsjjDyU7v/
zGc+85nPfOYzP3l8ef0/VHx/JfzVVFzL6J+c+5YVU3ZH1eDz3cozn/nh4uP4
j/X5pJyM1H/mM5/5zGc+85mfPD76D8fE+lzzgsm3t6DIH+UPeh2H7IpULqn9
v4rH+2Dxk9It85kfSr5xdl8G7T/zmc985jOf+cxPHt8X43P6/4SA71HEkSyT
FNcyeorp+2DW8sCEhG9+Yj7zw8/Xn91l1P4zn/nMZz7zmc/85PHJ/nfxow86
X68nbUSwtqd4yiiVNKpb1v8dsUst/9o5QeQ7EpnP/DDyzfN/M2b/mc985jOf
+cxnfvL4MTGxWgzB0PGdcoCtvDXf2q5nRbp8+vm/1jhDDumUkPHNcsxnfvj5
Pjr/NzbD9p/5zGc+85nPfOYnj+8z1hBDx3drT3G07KzhTVbbd43/o9hrhY6v
SCnMZ354+T7a/2uL/5OB+s985jOf+cxnPvOTx4+hNUR5D2HI+F5Jrp9tUii2
ooot/o9jDuKODiZfrsN85oeXL8XuyoD9Zz7zmc985jOf+cnjO+P/h5avSO26
Cyjh3YTWWDE+59mnNlFCyrfnMJ/54eTj+Ff3/6YO357DfOYzn/nMZz7z0wff
2EMYcr4z0Y+YUiHFo6Tst+TSqOKVERy+ayPMZ36Y+Orc3ecoHy6+ayPMZz7z
mc985jM/zfNV+98r/n8Q+YrtrX2SoEiZYFAVa7YiJfg8/H+SkjNYfFm9zGd+
ePk+D/+fcPFTu//MZz7zmc985jM/eXxfbIxqR4ean6zLLrScZMb/txYzJYUU
i+Sf71KK+cwPG9+M/586fJdSzGc+85nPfOYzPx3wpT2EIeMr4JJIbxWQ09ww
Xu9jYzzOPnUkhYbvlcJ85oeDHxvj8ewug/Sf+cxnPvOZz3zmJ4/vs9kQoeC7
telePCmqIj1m8MXGerblXju4fLf2mM/8cPFx/Lvu3QkTP7X7z3zmM5/5zGc+
85PHR/vBZ+whDA3fs1ASJRXLG8UlR41b5CKnYvscIr76wnzmpw7fuXcnY/Wf
+cxnPvOZz3zmJ4+P9oPX/t9g8Z1zBkeC0ZZTYm/9uPn/u8kbKr5nCeYzPwx8
1XcvNsP2n/nMZz7zmc985iePHyOd/xsivt82FNurV7JiyVLfBxr7JFR8M4H5
aZ3/22+/wrx580RRe9nw9j8xMZHk+O2331LMJ/s/1pcu9M98//y4uBvwyy+/
wKVLl0LG37t3L2zbts2Vn9r9v1n+yVOnYNy4cbB125Z0df9P6XJv3Rp2flxc
nDzGwsz3ytVfr1y5Qr+PN8OPT4iH69euBYXvLxm/n1evXnVvLx2NP+Yz33r5
aP0/NqR8pzz+ExSXRMWlHD63sCZZbbtANJ5Svl0TzE+7/BEjR0D79u1BEf9/
Sc3+JyQkQDshx8iRI1PMp7O7LWf3JVf//fv1h1q1omH16tV++YM/GgzR0dFQ
K7oWvUZH14ToWrXg2Wefhe49usPixYshUfQvUP7+/ftF/Wh4ufXLLvlmC8eO
HYOagtfwqYYQHx8vlfTS/4WLl6BOnTpQW8in/3/bq/9pYfx/+OEgyJQpE7z0
UsuQ8K9duwp58uQhRuzff/sVKD18/zdu3Eh9GTZ8eKrw9dSb7b8u93CL3OHi
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
PO7cqTP5jJXTBPcPk23gIn/+7t+3j959/ktcP/u1qHDjTfTe5bC5f142e/4z
/9Lky/P/fvFDSYRKqSllzG/udctasOyupNHnq+SZH33++fPnyNbn7NlzEfFR
3rLHjWL9cSyAa0kvpP6nTp2mfa7sawQyyneGYv9PkfTtnHn9M5OfmpYKmzf/
RTYhXvzJpP/HkS8q80CdZ8uWvyLmY/88efJUyNpcCu2/W+jTO3futGIyysff
Cdp6N2zU8IL49uPs2TNirLgtIj6+F0hOToFjx5z7LalI+qd5zUK1/+49e8kX
T1b0f6z/nxs36XuRZSJ/l9UHMn790acA7s2G+6PgHn8XwrfHuO6/J09Dntx5
hF7ewDON96HHoV3a/PkLaD0ajm8z6/e3f/8+WLp0CfmgjSzFpX//ZX7m8tF+
ODlFNWcXXb4zB03+Kn8x07jKrkly4db/ah7n0eKHa1vmM99PvrV3X4zWP6v4
uFed/n5ivCM+c/hOuZzAX7FihdGmY2Oy/sz3h2/2q7HGu8TM5qslmM/87MHX
/dM67H984HuIuIJlkqaUMUOCtg/BVB4YX/jBb8xnfubzzXd3sVr/rOJPmTJZ
11WN+f9Yq78ffLQDwT1f9yvWlsdC/ZnvD1/vV3FwcH9ofzx+8T1BzGd+NuCT
/q+wo48630wnLUSw56d5llGStJLb5v9dvktt/zs5UeS7ApnP/EzkB/f/jc36
ZxUfbQFuqXxL0O93jNXfD/6IEcOhYYOGWcbP6voz3x/+iOFf2GzKYq/+zGd+
KD7aQOo+BP3ju8sBDnl7vD1fz4R0BMz9f+1+Nlyl03zjB+WYz/zM5wdo/9+U
mK0/85nPfOYzn/nMzxg/YM0h+sdX5ae5cnan8Cbr+Sv9/2jOVP7xNSmE+czP
XH6A1v86/P/EUP2Zz3zmM5/5zGd+xvjJNIcoryH0je8VpPzuKIXmENUc/n9c
YxA1Opp8OQ3zmZ+5fMl3VwzWn/nMZz7zmc985meM7/b/7y9fk/JVF1DCqwpt
sJID7r1PHUXxle+MYT7zM5OP/V9f/5s1fGcM85nPfOYzn/nMvzT41hpC3/nu
wBDFlIQ0D0nZbkmRqeYVER2+MhPmMz+T+PrYPeCSzyy+MhPmM5/5zGc+85mf
7fm6/u/l/z+KfM1x6hwkaFIkWFTNHq1JAQEP+59w5YwWX25e5jM/c/kBD/uf
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
oNt770G+fPn1shrlxXcKo0ePhkiuvxncvn07Sjto0KCI2794ieJQp3ZtWL1q
DdxW7TaLj384jn243kNw5MgRFx/X1Zvr681gvN9cdlkZes81avRXFD/+2/Eh
+eGPnH3/Zz7zme8/n/T/QKj1v9Hga+7yhEA5pZWyGih9H0aWY3T4rvyYHzU+
2lCg/t+vf3+l7KyZs2gN7ZSpU5X8SZMm0jzpHKHzm7HB+f91yjxx/h+ZaC9s
RuJ7COR88tHHsrBR/4Gff268M9htRc0Q+g2GBccLcv2HDRtGeQbXI7rrH2n/
d+3dESZHc/6f1v8aiVAHRJ0kMbG3Q1o//vfRRzRPPBLnZI2j+/vdKY2pm9v5
KSmbybbEtCk8d+4s2WbfUauWq044B4r7IGzfvt1V2r+FDon2Fxnpf7juEud7
sdwTJk5wyajyxLELyjds1AhCtT/Ol19V/ipPvtv+J+O/P/PafPPV1y4hlHj6
macp/vDff1tR1atXJ/5v1jsbmY/z/5jmmaefUfKHGcw+iYnKsn4k+oM1R28j
EFfo97/95rS90xMfOnQY/jTsabzqj78/zPu5554lmyW0tZs8ZQosmDef/CmV
vqw02Wd9JfToSO4/s2bOpHW21apVk8ajodp/z969VIaH69WD4sWLwy2VK8Nn
/QfQnMTX33wNjz/+OMXXvP12OHrsqMTHdxQYh3P82P7TxP0JfQh99913tAYY
/Ufdeded5KsUE6GN4Keffkp2VmhjGMwrtu//zGc+8/3ny/P/fvFDSYRKqSll
zG/udctasOyupNHnq+SZHx0+PmtxLn4W6ZduPtrfoI69x6Z32/moT+IcO/rp
NuPmzPmJ1t2uW7fekZt+WPY/u3ZbcWY5JkyYqCzxxAkTKM3GjZss/pAhg2mO
f6fhp9yZCt9P6P7/+4ZoF3sa7/6fEpB9B4Zr/1WrVrv8/2M7od5m18HtaVJS
kim+efPmVijqeJhPFaEbTZ482Vg/6s1/9tlnyJdKhw4dYceOHYraXHj9VfIY
h2tdX33lVdKB327VOkyqYDj6ZME02EdC8dEvTKlSpT35y5Yt1W1APux50b+/
BHFtcueOg7//PqJMMUiMP5GFNuUmv3r1auSjUpNu0sFUaK+mv3P5XMnH+mP8
9u3blGVMTkmR+oN5ILf0ZWX0tcYZ/P0/9vhjlDe+Yxg9epRLZo347ZQoWVLE
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
TuFN1vNX+v/RnKn842tSCPOjyV9u+N1R690a7BA6D9k+NG1KerCdj+s40T97
yxYtJF+eBw4cJFv+li1bCB3xuFTPr0aPIp2c7P9375LKgTZD9M5AUX/074Fj
io2bNlp8XEfbtHkzKpt9XQAmWLx4Edn+YN1k/58Z6/8pAYf/nzDtj/v/xhn2
/2YM7gFSpHAh8nWSHAhIfPS/U7RoMfI/uXnzX1bMfQ88ALnz5LH2BTDTpKWm
Qp06dchnqL63qQbz5s0j5gu0p5N8/TEOdaE2OP/vKPHqNWvIb0pqqnN/Nbn/
zZg5A/Lkywu3VrnV2k/Vq/7md8z7W8o7VZLbIa5d3nz5oGDBgrB12zYpp2nT
plNZb7rxBjjvsAuxt7/p/+dDQ/938pGB49vjJ06ocpDaH332ow//speXJdsR
e/0PHDxIPv7zF8gPW7Zttfhkh1+poitfkz/VmP8fN97ugzIot0n8nlAHLyb6
QyAgrw1D/z3FihaBIqI/pGzeLKWugXZHFSqAfATzXbMar+e31EdC/f47dOxI
5WvZqhU4j4kTJ0I+0bdKli4F586ft8L/OXsG6tapq+89MdSmQ4e5/6xZs5r6
WFrqeUnsoGjbwkWKkF2cObY3j9OnTsK9992n7wNn+PDy+v2hzwGUG9C/v8V/
FMeQImyJbc+6JeK+cM0118C5s2ezxf2X+cxnfs7nJ9McoryG0De+V5Dyu6MU
mkNUc/j/cY1B1Oho8uU0zI8m3zXvruCj77wEoZujrv/pp5/Qvlz4iT758d06
6hvOg2x84hOgfbv2MG7sWJrzxn1UUcfvRp9NjPl/nbTcsv9ZqKwbrkHU/f/8
KVVn0aJF9P4Cy9arVy9aW4DzwSg76PNB0KJFS8u/4sX0/+AeGJG1v77+Nw4S
ewfXi6Lc9OkzyEahVKlS8PJLr1A7vvTSS1CyZAnydz571mwpS6w3zn+if31c
Y41tif7V7777btJt0IbEzse9YzEcxwbDh42AsWPGkv12wYKFaJ+p9es3SOU5
K/Q5zJvmqb/91rP/YR/ANZ4o9/TTT9O666biDz9xfXgz4xx9VprH2TPnaI8C
Pe/vXO3U61PdhzvuVzVw4GcwVYzx0N9pUaH3ol34L7/8GrL/LzXW//b8wL3/
Lx7PPfu8GA/FBf1zhrn+aK+TOy43XHHF5fDmW2/B4MFDqG7XXXed/q6ie3eJ
X81ch+vx+5syeSrxcd9iL/706dOM/lASXn75Zfj0k0/F50u0Lhj3iTD7g73+
rnXHtnxxbbV1Pcd/p6hv8Dh08DCtb9b7S23o27ev6DPDyU4Nx2YlSpSEpBVJ
Uprnnn3W2h9Adf3NP/KxqdnLZOsHjvbH/oxr1XFte/NmzeGbb76G97p1E2W7
1VoDkmau8Vf8/nBdL66RuPHGG+HcuXNW/MDPPqf2b9OmDe05sXDBQrj88itg
xowZEl/KLcbu/8xnPvP957v9//vL16R81QWU8KpCG6zkgHvvU0dRfOU7Y5gf
Pf7KpJU0R75kyeKQ/KQVK6D/gAG03xbKt2rVEgaI7ytXrVTmjX7hv/hiBNmb
47sA1MfR1hhtCaYac/no/9vErVyZRDLBcsj8mTNnEBd/Q876z583Hz4Vuj+O
AXCcgu8jfpjwA5w9d1aUsxX069/Ps/6R9n99/a8sEar9V6/R1//26ZPogkya
NAkef+JxKFJU3wcY9bUnn3jCsHVx8xcuWEB+1fE9gLmW9/p/XS/GDr1Ac+T9
z+l/6BqVKl3KkkUfMrj2F/dRc9YUbT/uuusu8pmCOr7X9Tf941t/ccHPOAqL
o+/Vbqtm5C3+aZj3naTP63m7WxrHibhXsT1v9PuPa0jC9f/ly1cQ/yPTPl2S
1Sgf9Al/Ib+/77//jmyPcF5e96GUm/b4nTBhgotfo0ZNuPmWmz3y1shnFeaB
c/Gh+BNFf3ji8cfpGpj94QnsD9I+eDZuTZ2r7H8iDK9nEavNQ//+cf0GjiFx
LYbZ/rimBPdmW5mU5JLX9xbzvv5xxmdw/3DsB+miTP+mvZXt/cDe/j/PmQPX
Xnut1A+uveYaumdoDt9Szt/fd2Lcinx8ZxHMW6N1Feg/Sv8NFKHrONXYx8TJ
d7cyhO1/OeH+z3zmM99/vrWG0He+OzBEMSUhpy5hHrLdkiJTzSsiOnxlJszP
En5aahocPHSQPiPhow64b99+OHb0aFT4yu/G+alTp2k/1HQtPWTSC+XrY/eA
S14NiLz90SYG/SeSbUwE9cfxDO57RGtUI+Dv27cPUpJTyI96qAOvEe6r7Ev/
00CyH1Edp0+fhlUrV8Gsn2bBH7//YbMVyjj/tOgLqLs3atgoQ9cf55H/3Pgn
lS0j/NAhav75tPPw1+a/Lrr++C/1fKo62uPAtbU4lsc9ldHn5sXwVUmpj4Xq
B0b7792zl/ZY2Lp1a9T4uFZ5t7R/iTc/VHxG+Tnp/s985jP/wvm6/u/l/z+K
fM1x6hwkaFIkWFTNHq1JAQEP+59w5YwWX25e5jM/c/kBD/ufzOJndf0vRf6K
5Um67f3YsVnCDyJis/2Zz3zmM5/5ekAgJVnXo/3mZ+hwFloOCvr/t4sFSwoX
XaTQfIUU85mfafyg//+s4SukmB+Gj/ZK6M/z4IEDWcK/sIP5zGc+85mfU/nS
GkLf+BooAulUAzlMhfE6T0n22PvUFeQP3yuE+czPDH5Ksse7uxip/6XI/2LE
cGjYsGGW8bO6/sxnPvOZz/zswQ84dAg/+Ko81eLhqJr0miHgWDfoxfKLr8qP
+czPLD72f+XanUziZ3X9mc985jOf+cxnfsb4qD8EfTz7w/cUCiOp2U40RYzu
t0hRTs3x3Se+/sF85mcN3712J7bqz3zmM5/5zGc+8zPGR/3Ba/1vtPjuMYMr
wMrLXWLv9lHZ/6vK6xffU4L5zM8Evm67lxKz9Wc+85nPfOYzn/kZ4ydL+//6
xA+Zh+b49ArWbFH6eaS+T/ziBwOYz/zM55P+nxKI2fozn/nMZz7zmc/8jPED
NP+f4ivfXZ7QAZoiUFPI4XsLe5CmabK8z3xnSzCf+ZnJp727bXv3xVr9mc98
5jOf+cxnfsb4ySnu/X994Wvuc8lXEP6vKLTmObbQHGsfFQCf+WEBzGe+j3x9
/68U63tm88MCmM985jOf+cxnfrbk0/pf04+mj3wtAhkrWMU0y2yL09ctaA6Z
IMlNiy7fRWE+8zORT/P/9rU7MVZ/5jOf+cxnPvOZnzG+y/+/T3xnVprji5eN
kh6tZgTQbikUyF5wH/haUID5zM90PvZ/encXo/VnPvOZz3zmM5/5GeMHAqhD
BDKFr9nSOtPY28NhVWR9OjFBv0UaSAVRI6LOt8cxn/mZzdd9d5k+cGOv/sxn
PvOZz3zmMz9jfHP+PzP4yqShgjVVgPG/Bsp9i20SoY8o8L3TM5/5/vNVe3fH
Uv2Zz3zmM5/5zGd+xviW/8/M5it41rnm9TZCFkTfJy450z5Ji6wUF8NXMpjP
/EziY/8POMfAMVR/5jOf+cxnPvOZnzF+wDaH6BdfmZc9UvMSsgkqyiT7//cu
sV/8oAjzmZ/5fGv+P0brz3zmM5/5zGc+8zPGp/n/kGsIL57vXYhghOYlpnl8
0cA19ynnoakCo8p3yjKf+cxnPvOZz3zmM5/52Z2v+xBM9pnvKItX9sqQ4HfN
UUhr3wLv7NVtESW+85P5zGc+85nPfOYzn/nMz+58tCHGPcD85Tvj1KFeafUT
t6zb/49xrsjeD76cD/OZz3zmM5/5zGc+85mf/fnO9b9+8cPVWbMNLpzJvMoh
j1sU5fYsa3T4Xgfzmc985jOf+cxnPvOZn1355v6//vMdpdB0kuYUDt1MUrBl
/xNBmfzgOxqG+cxnPvOZz3zmM5/5zM/2/EAgYNOj/ed75OQK04z/QnkiClh7
H8nFttK4Gje6fM31P/OZz3zmM5/5zGc+85mfvfnyHkL+8c1TzS4cItfwh2bz
/+lIqzmCfeK7T5nPfOYzn/nMZz7zmc/87M0n/T8Qav1vNPiauzwhUE5ppawm
+/8MXWp/+K78mM985jOf+cxnPvOZz/xszpfn//3ih5IIlVJTypjf3OuWtWDZ
XUmjz1fJM5/5zGc+85nPfOYzn/nZmY8+NJNTAsq4aPKdOWjyV/mLmcZVdk2S
C7f+V/M4jxY/XNsyn/nMZz7zmc985jOf+dmNH0gOuO1/fOB7iLiCZZKmlDFD
zPl/zZbKA+MLP/iN+cxnPvOZz3zmM5/5zL80+KT/K+zoo84300kLEez5aZ5l
lCSt5Lb5f5fvUtv/Tk4U+a5A5jOf+cxnPvOZz3zmMz+b85OTU4x9dP3ju8sB
Dnl7vD1fz4R0BMz9f+1+hlyl03zjB+WYz3zmM5/5zGc+85nP/EuDHzD3//WR
r8pPc+XsTuFN1vNX+v/RnKn842tSCPOZz3zmM5/5zGc+85mf/fk492/fR8tX
vleQ8rujFJpDVHP4/3GNQdToaPLlNMxnPvOZz3zmM5/5zGd+9ue7/f/7y9ek
fNUFlPCqQhus5EBAitHkaI+8o8d3xjCf+cxnPvOZz3zmM5/52Z2fHPDw/x91
vjswRDElIc1DUrZbUmSqeUVEh6/MhPnMZz7zmc985jOf+czPxnxd//fy/x9F
vuY4dQ4SNCkSLKpmj9akgICH/U+4ckaLLzcv85nPfOYzn/nMZz7zmZ/9+YGU
ZF2P9pufocNZaDko6P/fLhYsKVx0kULzFVLMZz7zmc985jOf+cxnfrbmk/2/
w/4n+nwNFIF0qoEcpsJ4nac41i0rhXzke4Uwn/nMZz7zmc985jOf+dmVH0iW
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
T0xMhC1btkigX37+hcKPHTtK3//c+Cd9X7Z0KXw1+ivo2KETNG/eDHr37g37
9u2V6q9p6TBr1ix4r1s3mvPv3KULvN+9hziPh3Xr1lrsjRs3Qv/+/aBd+3bw
9ttvw4c9P4SJEybA2bNnIq6/PTYWrz/zmc/8nMe3/H9mNl/Bs841r7cRsmAg
kOyWM+2TtMhKcTF8JYP5zGc+83MYf/DgIWRX365tW5pfb9WqFSQIXR91/0GD
Pqe4jz76CL779lv45JNPSKZv375W+vkL5uvz8uvWSfmOHT+O0u4/cICYSUkr
hVw8xCc0IV19wIABpK9j2mHDhkkFHS3GB/EibZcunWHkqJEwRJQRy4X5rV2j
z/9v27YVmjVtBm3atoFRI0fCV19/De+/351kDh46dMm0P/OZz3zmR5sfsNn/
+8VX5mWP1LyEbIKKMsn+/71L7Bc/KMJ85jOf+TmXP2TwYNK1hw4dBnuNefg0
oftv2rSJ9HV8F5CeHizr4CGDScfesGE95bBggb4ud605L2+Ijhs7jnT7A/sP
0PekpCRIaKLr+qdPnyZBXHP2sRhbtGzZEs6fTyW5bdu3U37dunWDM2f+sTJE
+x9Mv3btGvo+ZcpkKjfyg82lwW8bNsDZs2cvmfZnPvOZz/xo82n+P5DsK9+7
EMEIzUtM8/iigeG3yB0r5eiZ8cXznbLMZz7zmZ8T+UOGDIEmCfG6zmzjT58x
XejXCfDbbxukPDYFNpFNzqSJkyhs/nyH/m8c48eP1ef/9++n7yuE/o/fly5d
JvG/++474m8Xej8eP8/5mfT6ST/+KBUV9f94w/8PHkkrVlB+73d7HxYtWgR7
9+5V+LDI/u3PfOYzn/nR5uMa2oDN/t8fvqMsXtkrQ4LfNUchrX0LvLNXt0WU
+M5P5jOf+czPiXya/49PCM6ZG1Fff/01zd+jnY095c5du0gP/3LklySI8+8J
Ir1T/x87bpzQ65vAgQPm/P8KQ/9fIvEnT/6R+Nu2baegsWPHEhdt++3VW4jr
f0n/1zlnz52D0aNGQYJgIB/L1KlTJ+t9wKXS/sxnPvOZH20+2tDjHmD+8p1x
6lCvtPqJW9bt/8c4V2TvB1/Oh/nMZz7zcyYf9X/Uq635fyPix8mTRXg8zJs3
V+IvXbqU9PPvvvuWQs35/1WrVkn8ceN0+3+7/Y+u/y+V+Kj/Y/i27dsoCN8r
4DrfxUuWSPVfYK4zQP3fVr2Dhw7CiuUr4Jsx38DbrVrROGDnzh0R1z+r25/5
zGc+86PNd67/9Ysfrs6abXDhTOZVDnncoii3Z1mjw/c6mM985jM/J/EHo/2P
0KvPnZN95qxcuYr08kGfD5JII0aMoPDFSxZTGK0TEN9nTJ9uyaWmppIfIZz/
N+1/ViatoLW/qP/b+TTOEPzthv6/ZPESSvfFF19K5Zk4YaJk/4P2Qv/8c0aq
/+zZs0VZEuDXX3+NuP7BpovN68985jM/5/HN/X/95ztKoekkzSkcupmkYMv+
J4Iy+cF3NAzzmc985udIvun/58yZs5Kslp4O3Xvo/nS++eYbob8nwfjx30JC
QgK89957kJqmr9dFubZt20GLVi1hstDlJwg9ves7XSFe6PQ0/2/a/6xYqc//
L1ki8X/8cbI+/79tG30/e+YM+SLCtb49e35AeaKPUPxO6wwM+x8sU5s2bWDC
9z/AsmXLYc4vP0OXLl2gefMWsG//vkum/ZnPfOYzP9r8QCBg06P953vk5ArT
jP9CeSLS1/9qUkoNbGlcjRtdvub6n/nMZz7zcx5/2NChxvz/ORf/yJEj0KdP
X5qPx7XA8U3ioVevXnDo4CEp97lz50LTpk1JDm13UF/v16+f4YvzIOW1avVq
+r4E5/9t/GlTp+rz/zu2W/mlbN4M7du3J3nkdurcCQYNGkz89ehnVNR/xYok
6Ny1CzFRrnnz5jDgswG0H8GF1N+7BWPj+jOf+czPefzkZLv9j39881SzC4fI
Nfyh2fx/OtJqjmCf+O5T5jOf+cyPTf6pkydh69atcPLECU/+yVOnYeuWrXDi
xPGo8NHn6O5du3X7IS1dysKe08mTp2DXzp1w9tz5HNv+zGc+85l/IXzS/wOh
1v9Gg6+5yxMC5ZRWymqy/8/QpfaH78qP+cxnPvOZz3zmM5/5zM/mfHn+3y9+
KIlQKTWljPnNvW5ZC5bdlTT6fJU885nPfOYzn/nMZz7zmZ+d+ehDMzkloIyL
Jt+ZgyZ/lb+YaVxl1yS5cOt/NY/zaPHDtS3zmc985jOf+cxnPvOZn934geSA
2/7HB76HiCtYJmlKGTPEnP/XbKk8ML7wg9+Yz3zmM5/5zGc+85nP/EuDT/q/
wo4+6nwznbQQwZ6f5llGSdJKbpv/d/kutf3v5ESR7wpkPvOZz3zmM5/5zGc+
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
inX2Obi1c7PE733k4NqGP/vzB1cX7xSfNcpP8hbUtv4No7ocr4dU65R2uPOH
W/uSf/qW79J5S/Weebhy248ov7rmZxEDG3pBj07xObqPMg73H/BHm0+/P3Is
P/CBD/zk/KHrH5ENz54v+//aN/5xfBbfVO//mxY/PGcIFYi2wj02j4/O/l/X
36z4xhoW8cn9aYv8xAeg5TyDa5svxVNLzqE2PN2PD0TyGy/dJvYAiJ5P9xT4
3OGaL7Ln7nyA5CjufnoYVzdd6tnfz/XW4OfQ+cPUsvNx99TBkPxE55++/Udu
nTm4cusPcK96SpwjMTzJHkV50dm4+8l7kfKj6ZPevGYObr54B64/u5LxF56B
e7WyVDdu/KkNlTvvQd2WbnS1fLXAlvsP+KPNF/57Q+IPW37gAx/4yfk26R9Z
8FX7/0HztTVmwBfxP7PkR7aBlEdTMQqcYs+F30KM73FWfL8gPf6uXTvx3Xfd
jd8rMb341KnTePUdd+A///kSvGLFCvf1qRnxJwox8fuGJD9q1TBq12L5qN3E
0yu/ydbyxf7BHJqPmPgKk7V98np6xb8wuxu+5r/oTFx/5O+49fZG5pPs/lVu
/h5GzaqPaFbw9OqfiPkFi130HYzKJ3Drlbvc685gcwe3vHLXr0SndPK3dz8s
+tI9/g61V+Jttt55LHJ0go9kD6S8+DN4yp2PtN9/aeD3n7kY+Hnk+/57+ZQf
+MAHfnK+rfpHWnwa39Ti8Y/jO3T9v5QpP9yf6AKkKUSaemTfIliEEJLrZ8xX
RyIN/oKFC/Hvfv97XJmepq9Xr74Dz5s3D//6N7/B8y6Yh1euXDkjvm7/zWb5
dfz2O48H7H3mUjsiNP0JrVN/eoVn4zOHruGXXZ299vBVuDt5XFzf2HGzp5vP
xdX7foNb+x7HvY/248raX7I1emJfdNO3KIPaJS3/vGQ7xH0SfDujsPz1h/7G
+O61GPUw6nbdds6j19Yeuqpv+ZtvbxL5lOuPLZSrDGn8gZ9fPl//z6v8wAc+
8JPzx0H/iOIH4xvZOP5x/GIpnP83Ez4KP5diBZH/mk4j49wCKXGLNICM+bGA
GfIJ66KLLsK33XYbLWk06vjCCy/Ef/3rFbjT6eIN69fji373O9zutPvm+/mp
4/nDlt/MR15c/TlUX2++drffSLeDK3f8hOrM1XV/9Ox01A9UD1cfuFjkLJZi
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
33aepjkiKqv/i76Xg+Tr7FvT5rd2qntQ6jWj/fkbFr/+zHUiPjD1AXruhoHy
5cr5G3/gj7/+URD+zcPhq/VnyicxNIslR3suTb7aApJfyi/4NaG+I6lenP8v
MjxPix83tkn4e/fsdvX9C2nOrwULFuJVN63Cy5cvxxdddBGdB2zcuNG/qA++
fn5qr/zAz4Zfo7GAvLzAi89mNsF8bXD+HNx44TbcmzyGy0vPYT6xns1A+Zov
UZ15tvyk8neP7WUxTNz+Nl9eM2t+86U7RHtkHtTa9xjLpeaORffjYogvXz2c
95/EfZ1cyHI5NF+/b6D84PpdFvKjToPuw7R2b9Xy5atH9/M3DH7toasCuUFY
/OBB8octP/CHzx93/WNiwuz/a8P4x/GdohO2/8mAb6gSKpZJSFuHl/D1/8Cv
iQmTCd9/lR6ffF4uvvgP+ODBgxJ/ulzG8+fPpzGBTp8+rbRh5ov56YjID/xs
+KjyKZ5adp5Y2ycxQVu7H8LTt36f5RJbdDaurP4pO+++rj91LS57foP17cuM
/F7lkzC/18O1TX9xmR+bBTUUq/K3XH130tNh6q4+k1R+fmL6th9R+Su3/5C+
Jjo/lZ/EANr3uJXvf/nGfxN5n2ubLh0on/i3ZSl/h+S+I+PvzkmJ34mN4z+q
/OoDFwndn8xxq/f9ZqD8SBDwc8Efd/2D6Gs2j38cn+r/Gjv61Pn8OskRIdge
MvZRqikuD6z/h2KXBv6rnBT5ocJZ8uvVGl33X7dunZa9d+8efMEF8/Cu3Xv6
5hck/z275Qd+tvwGWfuez9b/286ztKz7kUNjgzMdgen+tUf+Qc8Rv4FJnj/g
kw9C/NZbm3Dl1v/ASOQsZvzWq3eynEM3fRujqRN+BxLIX9tyhZizVNb8dFby
96ZPUvknabyfW1idTovmSKJlz94Y7oByDPr975U/8udsxJfzuq8NlK/G/0lb
/tbOzUJHLV/7ZVfe4P0SPkb58zdo/jTxbZlP/H7Y/TN9y/dyJT/wh88fd/2D
xv+xePzj+MViycujmx0/3A+s1A+eD7ZrvJAeDs//G4wzFOodyozv10uH32q1
qL3/hvUbtPx33tlLcwPs3r2rbz7xvx8V+YGfLZ/YtxMdoPP+S9K55vO3UFsf
omeWr/1/wt6H2JqXaf5Qb+0Q9USrvZPv4akln6XXNB5f7JdPf4ynln1O6KzT
N3wDdyePJZZ/Wqx9u3/LzpVk7br9a737pB+7P0b+1u4tbK2ZxDY6vlecq6z6
dyp/deOfQ/xhv//tPQ/78nt6MrHTGhRftm81HLPg1x9fwuzQvPtv+rb/dIVu
BBobn8/foPnlFV/z83+Ruf3y8wbKlxg5HH/g6/WPuvt7MX3DN3F19X+NvPzU
vsni8Y/jOzz/b4Z8XXso1HL4CjOZta+N/4PUq7LjI6kkHf7ExFX44j9ejI8e
PSqd//jkx3jhgoVU/z99+lTffOn3ewTkB362fNSuh/io18GVO35E9YT23kck
fv2xhbSc2J83nr6enXDbIHZDk1wvdc+133uRnqpt/IsXa8idS/A165Vfx71T
h2Ysf6826fkozBX+CmjqIyF/5c5fefy5uDf1Yaz8tY2XeuvMX3Kr9cSZ6sZL
WD9v/o50hQ3vf/2Rv3vy+3sAZE4wKH6hoIv/mZ78lbt+xe4Vugczl/mob/qz
YOiP0f38DZJfXnQW+3y483Tq4+7OAVCrOjB+qJWcjf8g+L0TJdw5/Abunjo0
FH7o6j70D557ZXLpOZnzs5afyzeq9x9Z+w/m0cqUbyrSvlZ6gZSqSIn/E5qD
6NFp8uVr0uHv3bMHXziPxf0hecBuvnkVvvzyy/G8C+bheW7ZA+vWz4ivzd9j
sfzAHw6frKVXH/h9iI9aFeYjMJ/pZs1dW3F92z/Ya6qvnSFsN9p7tvm+hluu
wI1nbxB+q+UVX8Wo+umM5O+894K8fknnGS+zOr0enlr6OT+2yUt3RMvvznHK
V3+e2dBv/quEo/2kspyJcadl1fs/fdO/0b5V7/0tLi8/lz6vP7pgYHye36Zf
+ck8r2++e015+fn0vSX+6dX7f8f0Vfd1a89DcuUx//ylzSfxsqitm/uZqaz5
mdg/6n16MBfy54GPmtN+/pL1fxw4X75GL79O/6is/aVYy0AdfWzzURh/cgj7
phG9/8Lx/7PlI6ldfQclvK7THqvoONIZJJ82tJ0eXz2TFn/vO3vxP//xT+oL
QNb7yd9f/vJn/OSTT+Futzsjfjj/tv3yA384fNTtaPm9yePULojqyIvO9OLl
uL85d19A16K5fy5fv51adr6r639Cr228cKuwBaqtu3hG8jd2rPLb9R6br91L
BeyePBCwiZlLcxVEyd89slPE/SF5kYJ8Yj/E5y2k3djx73XFOmrwTNrvP7Wl
4nK/vAZX7v0Ns6m6+XvanmVx/wn9v8/7r7b1r7jr+YrE8XtTx4Qe0HprA0aN
aXc+cB59H+qPLtT1KpavOW3k2/b5S5Pf/eR9ce+QPTyxdyRy+o23/Hng904U
xXtM5tHIs8+0SX6d/iH2jt3v4l75Y6weozL+5AjGRxjF+6/oGOL/p84PF0Z0
U6pk2gmW7ZY0jSLTiXT42kZS5Hc6bXzixAlcrVXNlWL42t/vPvm80rDkB749
/O7R3Xhq8Wc82545dD5AYv+Q87Utl4t1KBI7tPX6/RKgtuWv4vu+9faDoule
s8ps9724/upRvf+3zI/41u/ROKQ0BtC2f9JzLWIXT2xi6Bonm190T75nlL/+
7Eo2N1lwBka109JpkgeZ2xcFfQmC8vOj88GrePq271OZtIOY4vi3924T4909
/g5uPn+zsK1CjXLmfHIUJgozuv/KK7+B6w8XNOfCbbSKz4o5XOcY82mqrP0F
fV8rd/63uGwm/OYbD+D2zs24+9G+sfr8zZTfOfS6P7d6e7P4/LX3PDIzPs3/
N3ry54HfLj0nff91ju22Tn6d/jHtfkdwu87ex6VM+eaK6cgf8o+ybPzj+Ez/
N8X/T5GPlKfqJAFJJ7GgouBpJBU4BvufuH6mxZeHNxm/3mzgw4cP48OHDuMj
3uPhw4fw4SOH8CH6+gg9f+iIV+7+dTvdvvkTyv69yg/1b8DyA390+K13tnn6
2hm4c+BF/5LGNJ6+/uteXM0fUZ1BOpr++aml5+Hu6SO4tWsrnr7uy2wucdO3
cXv/0yH+FLHXmT+X6pOVu/6b5Sq78xe0GvEbpfsCi8/2bEbmUDse01HhcT9X
/ywkP40BRPKjEV/m527Syk/6XF3/JxGHk/Da778cGL/0x5/mbCA5GJad61bv
0rkH57dLz8/o/SfxX2fKJ//5/nY/9x+Nr+S9J8h9rm0/wKd+5wuZ/oJaNXqu
tm0+88W4+vwZ3//EB4Tnu6reMy+W34/8Nn3+ZsJvv/M4s/knNj8fvSvum8aL
q2fEr637E5uD3/CvM+KHjpyN/yD4jdfv82MDeDlcBsnvR36d/kG+13lOauK7
kCU/JB9OV34/vulo3n9Oqcj06Kz5iQ6103KRH/8/WM3vKZ51l6L5mloz5u/d
u1fY+PC/C+njhTTfl3h9gXf+ggvxyU/k39Yo/sSEzn+v3yN7+YE/WvzGc6tw
/elrQrU6h9+kcUI7x3dp+Z2Dr3rrVO73/tJzhJ4W/Ku6Oj7LweVOIT49JPa2
W29vxHVXL2T73F+k5ytrf85skO78JZ6+85dMZ3R1FFcLDPF71U8om8Yq2rFK
K+n0Tf/O2tt4SUj+9s4HaX4E7ofA9grm0NhEuNPoa/y53/VMjulV36bM2v0X
se9bt42phWcxX+xnrld6Gc2fXvXvuLrhf3Hv9NEZ9AD5+/d93H/td7eLfZT6
09fG3n8k/zK1Z3Lnf/xovvmA5zc+l8Y+DUEi+M2X1wp++aZvjeXnr19+8/V7
hY8O2SuauvoLzBbo8UUz4pN4YczH/kwc/tE384ct/3D5iH6PED+jVmC/JXSd
+760dm6hOdZ7pw7PmF/fvlyso9O1Eff70w75o/UPakPqfcbb+5/KlD+7I55f
oPH/h8dXi2bKp/b/iv1P+nyENYWBrxOElZpKm/rnJcVvWVspQ76pZCb8j06c
wA9u2og3btqEN7l/JL8vffRe0+cPBp67f7VqNdy2gc/id9grP/BHkN/raM92
jrwdyW88vszV7Xx7/vL1/0Ltcqav/ZJYD5oi8Ucrn9DfTf4bQeYErdfuE791
yNULSUwToifWty+lv5+TXrskh5TKJ3sNPL9B7/hurfxEN6Z64yo5BhDJjzC5
5Gzh61x75O+4SX0a5lB+4+nrVGHD8ve6uLL6J67ufQz3O/69ykkhf+Pl1eL8
9B0/8fZBfoXJmgvJWVa57Ye4+8l7Rn73w3eE/OXFZ+G6O3eg6+06fo/5F9Hl
HPcfs/8xixYsIXniuP9umfiANCtyHeX+I/M1Or+h8X7Y0T70hnif2wdeDDGj
+HxsqN67+DPYj1cb5PekS0fy89cHv/HMSnY/Lz6bvo/Tt/6A+Vlv+FP/fHf8
yDiK2FuN6ZGRf5j87vF94rNboznX9Pz2+6+I78KGl9t8Jnwyf+bfmyxPy9ni
c63t4xDGP6R/dBq+P9f8Obj59qZM+VJBBvJP6OIjWzT+cXynKNv/ZMHXtamv
HkdF0jaDUwrbjkX1P22+rj3b+CL+7pD4pjLg55DfbuLpm7/r6u6fYXY2Xpx3
olc0nrxa2CiQvGP1xxawOcLSz1H9uUN/Kz3/gtfuETExiT1zr3YKlxeyNSVi
FxRkEh/ayj3z2O/xNV/Cun1KUtJ89gbGX3QmzZNAZXV/S8m6+ZSXA43YVHO9
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
+v0B30Tud8D2LIjuwuZyLv+e/wm126R20Z4Nz6cfRI4/KWq+cBsbf5ePPj2M
yzzWzROLRc0KtRmb6zHNsUH9l/3d/x2ag2mu4HeP7dE1GYVz9bVTuHfqII1f
2i+/seMWXL3vN3RfQ9QR9z+ivg50ruPFiSK5tLn8neN7IjvE+cQ+bEq8h3Oo
vYpak9Sl+3ZXn0/lrz/yzxnLP6jvH5ZPj92HNHZXBvw6scWh8/Azxf3f2r1V
0z6m9nh0j8DbA2h5uUf64beLO3y/jOPvuPfdLjr+lPfOttmPf6dJ5xE0ZzvJ
d9in/GqTqv7RKe3w91jp988vB/L+kxgDnKvaG86GH4xvNIq/v8VSOP9vJnwU
fi7FCiL/NZ1GxrkFUuIWaQAZ82MBFvD9/NTD4UedBj7wTfzquj9SW+Ugv/XK
nez30lvnIrY1WfFpCfn960N+8vtLfJrp78vVn8etNx6gOnrllu8zO51rv+zq
SMzXufbwhNAL6NqX2PN3dcnj+3B50Rks/9W9v2GlMxj/9oHnhc3B9Krv4Pau
rUJ38/dR2KXNZ1Z6frZnsPVzknfX1R9qD14qqlGf6/lsjbEj2cwrfLeP5WuY
zl176Eo2su06nqY52zybLGKrTH205+Dyjd/CZXeeQe2bti8LjX/3o3dFjJBW
YA5k4vN8osRuib6+7T/Z2ve6P4r+TS35nL8m6+05xL3/RFepbvwzjZnTU9ZU
eWUyRwvuSZE530zvP5rnwZs/4Jac61H3/lPf6YDPZ4/mWw789pJ4n3xP6rV7
aFn3o6Lv/+DFXIyTn+z78Pef2plsD9qi+ZWbr98n5Ce+LsFznQMv0HuC+N4Q
326d/IP6/mnt3CzeK5oHsFlNl4+I78qX2br2uj+ImASNHTdpu0f2KIP+9nX3
M9kvv/nGfeL9J/uTqNfx7PX4ZzCiu32Mf8ubg9M5LY/rFie/5rmqf5A5TjBm
EYkHMYj3v3LXBf6ep5efMo37z5/fjObvL/X/5XE0M+SjPuqIYh2T9zlwjvkt
IKWOTwrT0uWHKBbyef6NvMoP/NHkkxy9ZC08WN5573lvjcvbG3D1Vlvkb+/b
TnUKritNLjpT+A80X73L57t6cWXNz4UMJMcxkZXEp6H+DfNZHL8ula1/Pn9J
Yo/w31a6Bkn64+oFPKYRP3onS2LdmvSHx9ynedg8BtUzuZ8ezYum5/dOfcDq
zfdtoMgZogs3d26keZnJb03r5TUBHwvPNmL3lrCc7Ybntz2X+jdEyd8uPiPG
vPnSGlpWXfcnplt4PpUkL5nIPeHx0dQxrD0C739tyxVCfqIP6fgNkpOZ2zPP
J324XffORN5/lTt/6ec8+ORg7P3XevVuYUNB3t8W92fw7n/SBvcRb+1jc+Se
e4/J+k/M/d/rern1fPuf2tYrNO9/z51rfkvIT8aC5Jrj8lc3sPxhLFbXw1r5
tfwI+ZXKSh3z55/MbYP3X9A/vF9+j9gC0s9SmNI9/q5/L+58EJdXfpP5D229
Mvz+d1vMft+LTUDef+Kz3a/89SevYe/n0s+KKjXiB7SQxfaa7fcf9f/x/AtI
Xo+k46/qH623Nkif//J1/0/Lj5O/Xz4/pm/7gbj/609dGyt/v3yR3yyGb+vv
byj+f0Z8tSmkvDDZKLHTeoZD7JaiQMGOZ8BHfgVr+aH81APmD1t+4I8un6xp
Bfk0HqGnY0yR+PIZ8/3T/cnfIr/51H/Aj8szfa37++at/YsmWlVcufsCXxfh
eroXf8iPh5lk/BGu0VwGfJ0z7L/LL2Hr5nPpnIrmYXbnCb5uw4735rNcncQn
18QnOYy0Nsx+LXHUNv5FrBXT+h/u144/8RugdlIbLjHL32kJ31viu8zXlxuP
L/HW+c+ndTuH3vTzgnlzo5bzjDQYuve/vPIbQo+ub/mrVv7ag/8n68jb/hEp
fwApXpB7mb//Ih+qVDfQRg/h6Zv+1Y+hQvJjP7ZYuqZL47iyfnN7NNLK1GIv
Z8YzK2Lvf+rPy+eRfK5630Uh+ZkdSiBm1EKy1/Sk10iX7isx/X8Ofe918g/i
+4fkzyZ2YWUhkzdXnSGfzIPLyz5H78vmrq24Vzkl+CT/rsiVQOIOe5/xytpf
hdrs0lzV8uef3G/9yk/2pdh+y/f87x+iW3v8nohxm+z7r/7ofPH+N709pCBf
ehox/qr+0XrlLunzP7nwLMxiOGT7/hNfKv75r266NLX7j9r/WPL7k4TvOCVc
dJyB8FHgWvWa4HgoVkXiUcX4cYsQljqiR6TOD56zlR/8/OVRfuCPEZ/acZxD
deQqteG2UH7E9E2y5jfp6gktEcNe4bebuHr/RcImlfxuk1iNnYOvz3r8UbPG
/I69NW8SA0gnf/Pl1RK//tBVIflf/Oe/Mz9oV4+T1n5oPmP2mvhUUh9jom+j
XuT4k7kPzQExn8UfIjq8VNfjE12Rxk8neXwN8jdfuFnouUT34a00X77T2/+Y
S32emd0Ht7PwdJodN2tHkvMR1c88u373GjKPC++FIy/ukD/XovflDO4/4j/C
x3/Ks2mT/CUPvY75e0v+t4vP+jFaFzN7qsrq/8LB97+1b7uQv3fSzwtXvoH5
ttfIXCbm/u+8/7KQn9i0lel+yg9D8lfvudCz7zqf2sDR+aaXg6NzbI9vc7WA
xdRCnaZ2cLL+/uke3e3HBlvAYucGcyH3yydjJ8bf07XJPhOxuSF5rKnt3a0/
oFfUvJizxD+IthB4/7tHdgr9n+Q95+8/y7EWLz/xHSB8kteBy96bPIp5TC3i
+z6b77/aA78XMpL5YpDf3v0Qbr1+H92P9a/Wj7+qfzSeu1GMv9iLC+Qtyer9
p3nsvPe/suanqd1/TD6Lfn9myOfr/4Pgay+NKka6Au8/wtq8xYEa0UcKfPP1
9vAnCobYfTmRH/jjxSf+oJ0P9+He6aND4Yv/fchP7IuFvqOr2G3RPXvii0vy
fbHv3nT4vVOHqD5OdQ9NzjFSsVf+UFq77bz3cgi34e+/EvsSfG2/5eqgxKeh
vWszpjGObvkeWx9+4Hd9jX/PfQ/LS8919aT/MPQfU/2cxmBa4M4R2g3pLPlP
fGXLS8+h3ModP+Y/bvRc+90nhF0F6XPj6RVMhsVne/nc5lL/EvP4efnX5s/x
4t948p/Y79fx/tH5KB9DMk+ifqX933/Er8KPhzIXN169S6oz5Y4zsV1ol3bQ
AuK7zOZan/dy5Hm5jr08C6TZ1hv3C/mJbRk/Kq6eSecod18Qe/+TnNpcfjJP
pbJd/zVJ/t7HJd8+7Klrvb6578dtTP+lftl83uWNIfFRkUAGvniR0vdPc8dN
nr2N2z9PTxfxw2bAr6z9uaS/BuMRcB93nhPcl38u9acNHsxe0LPHeukO0Vbn
yM4gzih/+eovsrnWYwuldmn8ZDIvuPdC/QBpBQ0XV4gPjff+17b+VTpL4gsQ
+av3XGC43qx/sBzhwfhIc6Tv8izef/L9we8/Oj8jeUlSuv9U+Wz6/emHL+J/
Dpqv4YnnyLQbIVd0nGK4Hl+jUX9LM+BrGZbxJfu0IfDjDuADP9d81PVs89Pn
E52xLsW6DB8k/g+LSfolam+l8q//+yVCNyH2TcQ2n9g1c11nmqxDemuqxIeh
X/nb+5+keoVp/FvOk0J3JP7Vqvw8ngeJOU9inwTlp+vOXs4qom/WuK3Equ/i
6mZmr1Ne+XWZqfBrQrc+S8jffOVOqSKxRxO2zNyX0+0PnW/1+f4T3xC+f8Bi
k14jxp/oLUJ3Jnr17SzfK7HXIjom8Y3m/M7xvaLvxEaFyk9j/fcEi9gq0b0M
L0YTF4XMEYi81YeuZH7eJI7Nk56e5s6x2PzJm2cE5GexZb08ElPHqa8G8xc+
A6N62dWv/4fpW0TfXvJZ2gbxdVbeSu34I8UPWnsRGeNWXTmnv//Imi9dq3fn
ivVt8719jS/M+PNP4viyOEcF3Dm6m441nR/x99891yHxPt0GWnseEe+d6s/T
fO1uzHOYk3ml8Nd4c0Ps55/H/qdzjcD+IjmIzxR9rxadTX3w4w6T/FPXfEF8
/sgej9/xqvceu5+hm/59xvoHz0vNcnR78nv3blbfv6h8IrDP6flMd5uR8vfL
n1DjK47Y748TsP/PbPxj2hB/UTBNn+T4/+YeZ8X3q9jL1+anGCAfm84AH/jA
z57faUXyib5BdMXGY4t0tWh8axLbkawFEjsfsn/P7bz99U/Pdv2D17RtmPg0
3qVB/t6nhzDPjUrylgXlJ/kLOL++9aqQ/IjmSPPmLG+tp34OPB4Qs3nia+OT
Rv70Lewaso46verbVP4KidkaOIJr97WtfxM6BpqUfYujxr/+0IS3luy1s+WK
wBh8INbx2V6IN95E3y5/SG30+XUk5hQ/Gl5uBeIHGuQT/VzYXNCcFuxke/cj
op2qJyPPH0xybZNY+ZyPvBwSqFmm8wGq02+8hDZE3n9uY93e95g4X9++FNfW
X8zOufozCtiImca/9rASV0V3/3fbNJZ/3OeP+j4Tf3KiLz+7EjfdsRJrzyQX
Qr+fP1ef5uPUeCkQC9Xj96Y/oXk0sDeP7hzZJXRoEn81eJAcFLQPS86hiPKy
87Xr+Tr5yZ6WsBfbt12Sn8SsKnt9bB94IdiCZ7MnN6sdfyon37Nx74Fbviv4
3U/eF59/Ess3KD99Wg/k1sJh/YPEIfbntN73xoGXkn//ud9vNIaYOg8MVjnh
SN9VNAeG+/1ilH8GfBr/x+bv/xg+Xf93ipnyzZ3wTyBTNWR4gbAXtyh8VmrR
2PDs+WpdG/na+J8D5A9bfuADH/hmPqqfprlHO4ff0lYj61uV+3/H1k5XfEXE
hKms/hluPL+Krg/TuP7Elr9VmzHfKL+rI9I1Y2Kn/dQ10tkaWcP38oMF43KK
Nsj6pdvPMrVLuY71kazZujqXsGsnthbUNzbMJ/EzyTo+XY/fcbO/prrkM64O
6NuvN1+/V/gytvc9LtZw24F2284zbF/FIH9lzX8JP0vSX7Jmzo826et8tmZZ
e/Ay6ndK5wgkl4P3/pN1Z5rr4KErBYLmlSL+JCQeakCwztFdfkx6EYsHUZt2
zmc5fE/QvRKWy/lSmtOLr9n2Th+hV3WP7PLlpbZJmOrHk+69RPdabvs+00Pn
k3jrz0s+GMQWP+r9J/NCuq/zcSny/m+XnmXteT4OpvufxKHisfFJ/inmH+3d
A54Nez+fPxYzy4tb9c7jsZ8/Ej94ysu93XxjnVSX+40TezRy8BhQ0+6jic9f
dNzx5POxYC4Heu+6n0Fy75P3v/HEMnF998N33bndb1Tp1NGij2SvQuRSJ3PT
QI4+Mefl88HAPg25z6vufRpsUdU/6F4J+b64+gvinmq982ji7z/up078hNoH
Xw9LhJgPDX//+f3PfaJm+/0b3N8Yxe9/4kPrBOz/s+ErfTE1ry3xXyOlkyJv
gbl5/VikxFcfbeRPCP+U4fCHLT/wgQ/8aD6xIw83yg6y/k9jXC6Yg/099DNo
jH5SlehqxFeX6Jppy0/s+ukaNLGpJ7Gg3FNUp3J1TGJ/UCNr/4bmyzd9m/7W
V+78lVjHJHsdvdopoXc0X7lLyyc2Q/6exivM59aTn8wf+EX1R5mNELHFR54e
wuykNvsyuPzmK2u1wtJ5Conjv3COiNtCciTzg+Tb9depP8S96mm61ilsxBGm
cebpfOzm74jmSW41aodPYssGwT1i1/FFtma/+TLRB2L7xfnUHv3FO4TdU+OZ
Fa7MLwn5aX4zt7n23kfEvgWNWepRqjS27Vw/dpD7XpE9A+SOe9nLiUXsiaLe
fz7etU2XSjXU+7+2ienQtYeuCrWFSF4Ndz7Sc9m1LZezuJgkZhi5j0h+BM/+
pEFjxsp80+t28Tl/DvPhO/GfPxqv4LNsHJ++VqpQpXZ3ZL7HctFxXw7iZ2/i
c/np/oWXN4zm51L4zCd7LvUFIGW904fpvgsZ/1590tC6X0JiEATX5+leWbtB
+eTe5n70hE/8jHgjXRKfjdwj3loCOVT9o3LnLzD32eExrJpv3B/Ro+jvv+6R
t8R9S76XGo8uFHkdeFUSv5S+/wH9n+4pGuSfCZ/sb4zy9z+xoSc5wLLlq+f0
paZr2ZNw3XD8H++5pvks+HI7dvLJ7zfP8cB9PUi8J/LacR/9Mvbo8Nf0GgeX
RJkjlRe9MmY/5sjPlTaBD3zg28sv7dsTyT+4Y33AHmAu/vD+y0L8A7teSV3+
w4/d6OoszKb6yGM30LJjWxaJ3/APXtlmlP/krT8VtjJcZzv4/Ebaxumrv0T1
jo/u+p2Wf3xjQcxzDuzbjUvv7PLsR+bg4xuuEuP/ya0/oe18suoH7ut3qb09
0TOOb/w7bau0522XfwaeXHIOPrDz5ZD8B97aIdaTTy85lz0uPkfIf2zTP5j8
C86g7eve/2ObF4r5TWnv27Ts1LVfo2Uf3f3H0PifuPt39Nzppefh4v59dAxV
/9XTy33b76NP3ILff+Ux8f4feu4+yj/24EKhc5X2vyPG//jGqwJ6ozs2t/xQ
8E/e/CPaz09XfDPy/T+2eYGYQ3zwxtPa+7/0zm48uZjl3CO5NoL333vuWE96
tkciH4fbnxNrLhTjf+qaL7Mycg/0+fk7+si1In7Ugd1v9PX5O3U9i097Yu2v
pff/U/c9ovy7/0DLjmxbKWQ+sPOlyM//8Q1XsrqLz/bKZP6xrUvF+H/w8sP4
1HX/Ij4zh5+8I/bzd/iJW8WY8c/fe+69Stmb5/t2aO7jBy9uFvwPXtjM3t8b
v+u2t1/7+f/0hm/R606smSfsgI4/uCDx99/hJ9eI+23Se79PXfMVel/zNo8+
dqPfZ89u6tiD84X8B9zPzYE9b+LSu3v65r//6uPuNW94/r/26n9xfNX/Nyt+
nMzB3OXqZaZ+yPMWTb+NfU2Hbzps4k+I+Fv5lB/4wAd+cj6x/yFrqFT/nU9i
Z/w/GqNwIHwSP/6Gf2PxR1d+ndo2THtxvFnMSzOf5FkO6gXU5pf4G2AS2/AP
LA7MLd/T8qfv+iUWcTW98Sd+0tQHwIttQw6ypkpzHnu26iz3wxxc3cxs+GkM
IY9f3fTnkPydkreeTOK1rP+j0Kl6nk0FjSE735X9hm8GLpXHr33gRcWeCdM1
Z7rOTvMcBUfFrb/nEaHrk7yuxGd7cqGX44DaOcm+HcQujMYoXchsPmjMJ943
sqZ6/dfl/pSe921HqP3UKsEn/tO83Z7iDxsc/8qGP4p6NG+wJAJ7RXxrJxf6
e1KNZ64XbfF4tOr7T/ZT+PXUv4HYSN3y/RDf9PmrP77U1Yfn0Dx9UUfw+uoD
v/f85H/on/Xs0wif97tz2F/HFjGSFD6Xn+yL0H0xYpevObonir78nn3epBjP
y/V9DsjfePE2Mf6Tnv1Zh+QAdqvUuf+ud5+09j4m2mjRfONebgVvfV3VP6ZX
foNeX3c/n2XPx7j+xOLE339kD4/f/9zfnNrDCZtBjBsvrRbyl72c5PWHr2JN
Tn3k3/+Pzu+PT9+/z9DrQv6/oR6qpXZ9//O5WfZ8pReIkZBaOXqYpGJh/9NH
n7LgKwNjJV8fnyo/8gMf+MBPzuffH9M3/4e0bz4oPrFT57pI9Z5f+3FSXF0j
it94/hahF9B1TFff4j5sNAb5fLa+78cW9Y5Oy/NbnUNtbdT26Dyi8gmNb0P0
Yepj8PIaWof4zpI4+cT+hhw0Vryw7Z+DO++/KslPfEi5XTKJt8l1WeqbiHi8
ThYfXispeVGfFLoeiSPZfnuj0O+bwVii3sF9YYn8JK779Fpmj0Fi1rNcBGcI
/W7KkxV3GmIsiS5FDmpX5fad9S3QK3duOEX3Qbw5CdEbOfvUEWFn1Hj+NuP7
T+YU/n7TGdJcgVev3v97Mf48HirxAe2dPCD4RB8kPhrEXqb91kbq782vrz99
PeY5sokfcQiguaWr6y7GwbzS/dz/ZE4lcmN4NUkO4UkvPhXLxYzpnJq//8T+
KurzT/KE0Hkmycem45MxJL46wft/KdtfIvZfxLcm6vPH7Npk//72vifo6cq9
v/HnFu74t2hMLNYIzY3G9ewVX6X2V6r+weMK1R9fhsurvk3vf2lOMsPvv8aT
yz35mC9yxcu/GPSjJ7mSab+WfI76V9C5wl3zqPytvY+KcSJxqvrh8zwLRP6C
WP/v77Dt+5/vgQyKb2gpVIa8f1GRiJj/L5KuRDhwTWhw0+Wj0H/7+Lr56SD5
5gP4wAe+7Xzu31Z/5O+4svaX4TpZy4+6LF9YwKac5vrtNCP5bbIWyX3+6Dqv
v1badp7GPA4ItWcPUIm+ytcQ2+8+JWRh+aPminVyErOQx95sl56jteqP/pOV
kZzPvZ7wcaQ6L4mjQnw9ha6JxPxg+vp/YT6K3Mfg8Ju0vemV32Q+uDz3sHa0
EPWPoGvMN3yD6rN0jK7+Iu598oH2OhLDnsYHuulbnn2UZ5+OSX6BC4X8RKfi
8pPnbF2VxZMluQDY3sdVofEna93MX9rVybpy7gmWt4rsvYRzP5Cre/Up35bD
05HrW6+Ua7lzHuKfwPLfflfYLTXfuE/o6GQOYJKfHCTPGl8T1uXK1X3+yByY
vh8bLpHGX5U/eP+T9Wn+/hO/A3KQeJ/8/uvwPNSY7R/RvaL7fhv5+adr2MT/
5VHfb0flkzHj93/1wUtxe/cWodN3j+2WZA2MLP1PfEro2F7/DaHrt7wcwPyz
KOKPuvo3v7L20N+kvYbGMzeE9A/uu9N89gbvPmT5JfoZf11va65sNBbpKvb5
JjmXaczSuy4Q3z+1RybY52/lN+h+0hSNgfuv9FzD2/Oa8vYAeuWPYvnUB9qT
v+B9P47q9z+3acqaz5+iYOWIVuMP5Pcb+WWah8z44af28fn+W17lBz7wgZ+c
z3+/W3u2unqLo6+Xsfzt/dslmxRm1xLNJz6MfF+f2DDzfF+kRu/0MeH/KXxz
vUPkYiL6Go+RSY+eWI+newOeDcZkwJal+dLtQsfqvP+K4Ffv/IXII0bjRnrd
JPl0uf7TdXVVsdb6zmOYrNGWia5E5H3uhshx4rFkOLu87Dzqn20a/8bztwr5
RXxKz3aotXurkJ/GD/KO8o3/inmcU5LLqszte56/NTT+JJ8TmR91SPwehU/i
1VO9dKEftyd4dA6+KvjcVoTGO530c0SRmK6c3zn8tjuv+g5bc776fDEGZA07
6v4jsXyEv/bebdpx7YoYMayc5zBoUNuS/u7/9v6nPBv6ue57sp+VFXeI8Q/m
tqg/toj1f/Fn3Pmtsi/FCS0Wm7NM93tWG/nkHqLzXhK7351z9iqnxBy68eyN
2rb5xSSnNelfzZ1LTS3+LMsN/gzLaUb91T0+vR8evFxgq3f+MrBv47Lc8bq6
cClrlQre8OZ1xPd+je+7fsdPtOMffbB6fB+KyumWkb0Eaht107dFSzUSD2v+
XHo/159dye4/d/5IbF7IXo6fv3suvf/jjubr9wn56ffjCH//c9+PbPko3J8I
lFpbWxfJ8T+je50NP9SehXwWfyu/8gMf+MBPzie/b/RZrxeqNDD5kaeTeHoF
zRcawycxT4L2D0RnC9Yh65g0/opnq8OP6tpfsLXPVX4cHt5X4j8wtdzXMaku
Q+yKSEwZjGkMUG73wnUbur5cOUnXxOlcZMk5bjvHXPW+K+yMyHwGNSr+/ObV
uxnLYzTf2hT5/pP4/JNeblOyTi/lkNWMaPejfWKvgc0XyDq9l/uN5JYiOY1d
uer/v7178bakqO8F/j+BogYTb+K90SgkxnVvzIrR3LhizNubLPV6k2X2VocB
AR+gohIFoiAR0Ki8ZNAoIgLiIyBo780wwMygQR4z5/3+9d1V1VVdz+59+nT1
rtP93SzO6d1dXZ+qOvucqe6u+tXtH1DnrX7uLWLMyb/9db4nY8Cz/tKjt3vb
P+SzNdPkvdaNb1/lpNzi66EV1ySz/reIw8rGa79fpZExncS8CMq3fnyLqj9v
f/bcYvU5LVfP52/2M2NrZIlnHx9zSsuuQ5ZYP5yt4c32Lf9KXZfwtRbm/Pzv
/TIr+5Y/u1vU8cc3q/an5WdV2m05H4Q9e3q8XC9A/13ZfTZTnz8W1zTkszXd
+PyVzTV1dJmPG2JzZ/6o8vfv7Id/U/x87jw6a+MLRPt/9Z9mn9Gz5XoURfll
vFqWFXuOxe+tX/0Hat71Dz5Yroe9t/p8rmJv/fAmPodExPe6wGn/ef/+LRfX
pavsunT2Yr9L3Lj0FSrpihzzM7tG2PrRLerzt/vscTWvX13Xf+19pU/k9dV1
2uxvgRzfdFj//pv3/2P5VSmqziRvGvnOnbdMZdmdU9v3felT81X83YHWHz58
+M193/jWRdRfzitl8zbn8dn4ILnWJx9T/aObjZRiHbNivm3xzJ/FtldxIfk9
d7f9xbiRc1V/c+XT5RxiFotdrQfM+q1HxToJ/BgbVyRjfM7O2dXme8p7jvz+
MrvXOuvD7LI1zor+7M4T36tsMdbfF+NtXpZvnyjWHqhqfxbz82P/Q/mrN73T
zJ/HTySj/mJcjbhXy38WRf13T/2nfuZcP3/WJuIe7Ruc2qx97R/F2KMrXsOP
sbWbxT3xl/G+296ZX/B4SMyXc2fZmgxLfP1d+bP75Fyfv+Wr31Rc0/yNsZ/N
g1ji6yrMrkEm3+bn7vD1DsRnic259r/c+ovrumL+8QNi/Wh2/118Rs4Ta0XL
s2XsftbfvutDue/zt37HUfX5233+RKXP1//V6r95z1Xq96G8PrLahf3eqLke
n1X39Fnfmc0rltcnMq7pyid/V5y3u12OCfrup/l9ePn7t/uLx0TZzpwsn3H9
9PZ849jlRT86NJ+67u8f8Xk93OSfBZpdO1+vxlbx8VazxOx3lI/b+sp7+Pps
8vql/Dmcoz4/LL6AfK1++d358kd+k8cq1X9OK2weEvvdvvYts/7VKNj+ZmHT
/PvP4xpNM++xNn07BzLfmm/kOU7ZyUhXN/+XAttt+XVtm4Lvvz4dTv3hw4ff
3NefHy66/ivXvZX3Pef19T7u9pPmWI4dfh+1mIP5gBjbrNY5OHIOH9MTan8e
T/4isTbS6s3vUvvZeCH9XiK/h3rv1epM9gxCjY+Y9XmkL8eALH1SxEZkY5T5
+I0ivj5bc9XborKddtb5c4WdYh0uX6vY7c/HRMt+qbE2lb/9WTwl/vzi46/j
4+xl/fdWng+2f8gXzytEO7ExMfpBFpOJtT97fsL83V8WPyc5lutjv63uQe/+
11TlvlnMz2b9uNxYh85ff/ZerXt26StFOdhrZ2vW3/tj0Zdlc6T5uthsnuht
aiz8Hu93z//5X/rwq8Q8hmKNbTZnwoidpJ2+ev2f8/qz50/25489R+LPjI6K
9tnv7x+b66KeHejjXLSEey88LeakH2VjYW7j67/JWEPbj99Tjg1j88aPFHM8
Zhmw89Tv2sO38mtp+dyDfV64/8ufK5+t3bZ577+INDNPrpm8n79/tHpGPU/Y
KuZR82dwRTnk+DJ5LcfGhO0+dzyXsYuWWWwxXp6X8DnX8ue7+9yTYl2xoy8t
8+Jj2YS/9PHXit/Tr76vGB95eP/+y1iqsf1AEme3KZE3jdwj7/+TdlaAieKX
79L11fXpQOsPHz785j6b35ZK/fn8A/6P0nw+u15Q9wJ57E/zxdYMFePz/7R4
/wbxjOGaN1e2P7uvKMams3uInzD8M5edrz0DOIevu6oyIeKxQuX8SdEPOXfW
aVnnSVgsHe5f/3YeZ2dJzhu1YxR56r9z6hGn/hWn8Nif67OysFiZVDz/0JPZ
9WdjZM4W9303jl1WjLH4NeXn1laVv7f8rKr/uj72ht17LuYjr3+7fP7C1lNe
/sTr1b1rft+5iNspVRbbZ+lDL+exfuapP8/3598U96jZ/FE2X/rZx/O12z+g
PjOs/dlnhJ0qry/Ycx1WTjPr6vovsznP7JrmRvGcgc3v5XOgr32rk36jiJHK
P7NnThpFVz+Di8x563O3P1tTu4h/ye6F+5pl+6mHlL/71IOzn/Wl4nnM5b8h
xs4U/sbdH1bXunubyzy2lexX87XEeYxMuYbclRxi++Wzhd2nfpBv/fAm9YxL
zrXZz98/9vdAXhtu//xbfD97ziZ//9jafezF57gfKX5X+fwJ7ffvIjHPRYxp
E88vWCyu9bsuU79/fDzWI7cVDbSh6r0xu35h91cP89//rFjXILovzzMmIuj5
UbCMRkp1unb/34ldqn21nRZ9Z2eC/tiYfz+8+sOHD7+5r69vvwjffu3HX2Vz
dPk9ypfn6rpB81m/5EzRF9jOvinSstgkD95Q6++wftKsL8jWwdV9Pvb5ojIG
olPPvd187cvvVvf2l/j4CVE2vp4tGz/9qd/n9yp52Vi8xob1b7P9Zex+Po/y
hneIOJiyD97AX/lXMZeajS+X/u7pR1W/jPXNjTM31/L1O4+WY3++91mn/qyM
xO8jz1//Td6nLfr7Hzpf+ex5ilo34sXTfI1hvv+K3zFqOk/9V7/ybtHnvPzX
eT93mT/jOJevm10WRrT/LotfWtyH3tSey7B4s0uXvVK0//XvaPzzXy+eeZy9
7FXamJbSZ3OhVZygF57ON75/TTkeaHbdxz+3F7+Mr78g772zuevbP/6KGn9F
S+Jamz0rYr9TMkYUf35wpIh79MzP8u3Hjqm+On/Gtc/f/x229sVR8fxAXA/N
PkNnTqvfv62Hv87HsslxSDweLhv7Nvudkr9/+lirZf5sSbQveyak1rBmaY6J
uFc7bD5HsQYcKz+P/5Po3795/Mlkmot1dOP5bjlyK71+XM83eCJ/ZXL9Xz3O
kFM6iuaX6dL1WfyfIdcfPnz4zX1zfGv3/kHqT+tn+TiE3TPPeLPZ+8Wjqm+z
9NH/XlwLvKSM+1Pjr3/rinyHjW3W/NWb/l71g1jMVG/997b5mPOli8S6X9Ja
P1bEMr/s1/m6UWeLmCVN65/r2wds/+1ZX0r1ky97ZTFv4O8b++we61LRTrzv
Nju++eMvlzE5Zz8334ksrhOLd0qzPnlb9d/6wReLePxFfNkrXpNvP3GfuB5k
Y2V+dDN/NsOfO/zr2zzZVPvbx0VerN+4fvv7+b103p+e9Tt97b985e/wtKv/
9k51YFOOTWN9Z2Ms2/7qz9ekk+Pyizizus+uq84W8wvYve5ttf7GOTxeJ7/u
+8Tr8t3Z9a+KV3viwXyDxdVh7y9m62zs8uxknNmVL/4Vz3/rsTuFfVSsccHi
K8nfPxbHyWqI2t+/rZ98RcUTYnM2eGq2fkdRrs1ZXfg4notELNmtR77O07Dx
/Px3vkjH+vGMkePBZP3ZOWxuPP+sX/92YT52lzb+bCLGVyf6928eX653HNP3
5UdOzu4ZYVnk743/Q/ZZ8Xwy9qTpG/9+D7D+8OHDb+6Px771Q/pTfzau5Iwa
C3Buvjbrl8/ts1j+xVgQmXbjrstU/2En+1bY397ksVNYv0ke5GM/jooxFOze
KS9PEWs+Vv196Xz13z5+rxr7Icct6euj7dfna2AVY33WeHx/ytfuvEj0rfh8
0IqxBLtbrdd/6/7rxDiXS87Ld079hB89W8wfYXM8xJjvWZ2//s95k/Zfu+md
6hpDxT8yYs+W54kxSCKOEZtXSxurat2slWve0siXm3ts7YSLXyLGw99zlZNu
4xtHxeePrbExe79T9NH5fI1LxJxfNl5u98Wn1Xh5FgNq9d9FDFp2babqMfvs
8rkDV4vnRFs/Kq7vjop15Xb+K1OfpZ3Jfzglrvv9k/N1+PghOX9A3t9nz4jY
Oh2z63NxzXEOj7vKP2c3/4MR/2pv+Vd8P1vbUP7+8br8y5tm1/AfEOk+/Cqe
/SaLncvLLNYOlP2rw/r3j93719fRiuqHdnnfW6UgKylZ8X+caxA/3aZvnpOm
bz+/79r3vuDDh38ofLm+TV/rz+fkyn4Zuxf46B0H8ll/g60VzMYUiDg6YZ82
V8T8gOL91iO3q3m1sl/Dxl/vx69MEzzX996sP5ujrK8ZwO+nPnTjgfy1r/xf
NaafjeVeufZPiv7lnzl+F/Vnc0BlbE/2ha11IOM8yrEu69+9upHPYtaycWiy
7fhn7ad3ePPa/tm31M9//RsX50tXvLYYmzbra/N4RAerv4h7dC6fa2ynY8+j
+HOnYo3jveeOq/vn8ufPYvuocfTsPvv3r+NzGXieN/yFyo7Nd+Z96WIMGxt/
I+vP5ryIGLfFZ8lZV7z+579+xxFxH392nabXX4zBm5Xzpn/It0/cX87rLWJV
rRfX6CL26IUqUxlzVz33efjrs2uWL6n609Iz+WqxZt/Sla/j56jx1Yf0758b
/z+uT0a+/gIavK/QhTXJMuMImYcDebfn20dS9O31t4dWf/jw4Tf3Vf+/p/Vn
82ZVTJ7LXpnnOxsLa3+2BtfZYmyxvCbZevALnflGftYhNY6iGG/B51cWMeqb
+nssHmQRg3/1hnfw+cS8z3vXpUl8/uVYeHmfmI8VYWuFNfTZ/NMzak4pmyf7
kN+fXRey2KC6W449ogPXX8yjYJ/38424luzFxsbwOfH/9nci/cZZqxxy/b2c
j5Hnc7WPXa7Gz7E1I6Qv4vuIzzF7jrFxz6dE/S9+iSjJ9prqh+vr8M37+7fG
xsixPjyLz6mlWLnxr/nnaPWat/A1EmS5eUyv2X+bs98p+RxizVpbWsYEWPrY
a/jzPXbNoNb5zv6Dr6nA53J/8S95ej0+wmH8+zfJAvH/W/fdnRXFNBKFngSa
45Y8mVLoQDu+N5PEfO+/3x36VRp8+PDT9sejcb/rz8YLXPla3i+x+wKd+Npr
t1hXS47P5mMWfvbNNNq/WHdWxlvh/annThzY35j19WXcGHs9BMOvKN9B/KoX
i5Gv15df8xjrHezPZ/H42dh+2Y67L54M2nx+dOGydc54/BnacxM2qP92MXeX
z72Q8amK19JHf0tcg91xkTrtzKUv18Z+sXie4rkPW0OP94Vvemeu1tm7t5yX
vfWTr6pz2PXj+t2Xi/pc/huqRHINvPVvX+lviIqfP5sbI309PYtrxccwXfEa
Ps9Elo3WxLweNrdcxfr58S1Gnuz6hT93+97nikqs52cuLq57Ztcv7FkQXw/5
G5fww878qEP290/0/0Px/1v0ydq0LxLIOJgrlfTDZOzIAuN/6srZlm82b5r+
yHp+37Xv5A8fPvxD48vn232u/zqPZynWm11o+2+sFHFJynvEu8881p1fHsx9
9ZdrPqk1pPQ4mA19Ph5draksYu6LWPxpfP5Xrv7Dcj4o60Ou/OpA/tajd6l5
xkYcUcvfvO+zPFbn5gM3zNJtt1r/Xf4sx+zL8+M7W+rzt3nfv6imYGNk1PrK
7Pck+zbfv3L9n/P3Syym6JFzyvFzxYutW1eOvXmYz4fncyw+/juqvEtX/nYx
V/4DRv3n+fmfLdbs4tcqWv03vnOVKOvFLxV99qIM8lkHuw7beean/Pd9b+Os
9fP5hlg/erZf1f9Tv1+s5ffH5TXQD24s/j6O9t3+Kf39y6YT0Y+O7Td62YU2
d5Xx//VkZUnzAxep2vekSs4fjXzz97rzD/aCDx/+In01frDH9Wex8Pl6s879
1e7bn42BWZLjbNjcRCMWUXw/mPNsk92HFnFszhGxTVvyN++7RtX3zCUv42NF
fL6DteSHX8TXJxBjws8R6x204K984e18jmqlPPu509aKi7RU/+XZz0+sA/Be
tW/vzCnRP2f9+IdvVRnwNYCPnKPGwe/+UlyTrhVj4fXxQTun/1P5u7+cqGsn
ds99lc/3OIfHP1VtUYzVX73lXb5WCNafjc2R16EsDr9efxaviT+zYbFHv/we
ce1SPHOoe7Hftw0eD7TE1tncZq3+fI2DJ77Pj415/H+9mIfr7x8f/2+N/2nf
p9yzk29Sbu7zMaHtqTVv2Zsooh/ak5Iv4ncMt/7w4cNv7ovxP4vzq7Zb82f9
fh4bfFG+tm/pkxeWfaoPvSJn99VSaX92/7Mci/6n7fk7G3wMloi58odB36/F
rT+Pf1OMw1n5zP9sxWdrybJx9ov8/K99+V18nV+xBrHYJ9bnKu7jn3hQnb36
lfeovjaP77/6PN+/+c2PlfEyZex/Fkun4PbWXiiuZc/h67Kt3vi3POYmmyss
y8Ouhfjn6Qt/tq/67515hufN4/Drc4dZPSb3qPKusDFK7BmFmudb//OnjWXD
ZHGa9Prz6/IzIv7syBcf+RD9/csm5vifGL4vT3/yOpWMxwzZdJrbr6ryt+37
8kvNV/H/F+SH9sGHDz9937h/0Of684wX3/4rn3+bmpvIxh107ftzF9urN/41
7zPy+8Zfe1+rvlxfgK2PXJVD5/Vn8eQ/9HKxLvOX/q41f7uYO13rWzm05W8+
cH05Nr9Y/3mbz3cu1jx7/oRKy+Zjq7WwWHz/4rXx4PVan5jFTn2FKp/4ndrL
XyyOb3znE/kye47A5uUWc2fZi62BxtfgvfoP9lX/nZP/qdb1Yms16CnZ8wl5
XXL26Eu5v6LW9A63Wchn9/pV/dk1E78u3+MpxiM7vkpV6Zv5MT//7N5/lmWe
FO35wUQ1KUnbIM8REbfIU06y3kfyiw950r79+ezar84YPnz4Kfv878eA69+1
X8bEnPWJbvjLzn3vkcJnse/lPdeNez7dsj+79rn6TfnWQ18M+n4nfv1Z7E4e
I94el3SIP387px9Rn7Ptx77Bd2/ed62ae87ic8qzN++7rrgmnfWjr/pdle/2
o3flck0y9oxk+dNvcPzTR84XcVNvHRVjfc7h6ynI1/odH+THl658zb7qv/2z
u1Wczt1nHzfOoOXnjPnKLP/VG//Kk3FFG2lH9lZfVPVnn3+5ngFLYM7/PTw/
f/li9/5D83/b8t1rBmeHysstcbh9fOP/feWN5QdTJOSzz+eQ6w8fPvzmvnf9
kA79Rde/a1/MRRb3TNf4nMh06r/+zY+qcRA8Hk3L/s7x72nrwAZzryjhwfwU
fv6d+bNrmSX2XOMIW8ft0px2tsU8V3Yf/6OvNjIT8YLE+B45Toe9dk/+yLj/
v3Lj3zj+5MhvcWN1dozNH+FzfW/9Z5XHxreuFNcc/LnC/PXffPAGda2yt75k
Htzby89cfF65rh+bB/Dv/2jW386+pv3ZfBdZz7Uvv1sdtcf/2/Xnb1P8+Rev
ibH+byS/Mg+yvod2k3ZIbKt5CzVzj2P55Y50/dG4Jn5fz+sPHz785n4ZP2CY
9e/a3/z+tWq+6cb3rk6q/mydJ3m/d+fkT+L4Mh79QH/+XfpyrNnK597M59Cq
+KsPXG/4OyceVDF01r/6Tyq/vRdPqjhV7L44W1fAfv3oyOuE8dk3iXV5WR5q
fm3O4/5Ll8Xlmbf+fF42m5dx6cu99RfzScq5CRt3XRJsHTt/3+7VL/1t2QZq
ze4ivvoh/fmzV8bv/0+j+m55qneQZyd50rHnFvouIjLTR/btlkjR943/GVL9
4cOH39yX9/+HWv+u/a1HblMxE7ceubVzv3zr1n/3l1m+ee/V+eZ3rsqJ33Pt
X/sPyWf33vk98qMvzZcufQX/3LH517S3Y+Sw+6sn1Jp0G1rfl/XX1Zpws774
xn3XOsa9H3gjT7P8sVfnZy8+j6dd/84nVLrtn91VrC18br5drG08T/3Z/Xwx
r/d3vfVfvuat2tzkc/PN73463DZztD8rs1q3+eFbVUo9vuJh+/mz12Tqrv8b
xSd324gVxL56Ck3Bawuy4hZ5gMh+LZCAX65PvRi/6jB8+PDT9r3xLTr0F13/
rv29Zyezvs17eazEvf+aDK7+8LvztyffUffHxX38c/Pd0w+7/qyfv/G9z/Jr
PxY3X89k6fJXqWdCWz875mB3fuCP1LxZef9cXiew+tP2hlj/4Wi55vA89Wfj
kHjc0M/L8UhmBddu/gcVR5f5mw9+UT+s/PJtdfvvnLh/Zr0tX7nhHbProcfV
WWPP89HD8vNnPp//K+NoRvRpjjRqt8+UZdaOiXkLZKUpJVdr13eUBH3j/t0A
6w8fPvzmvn3/YGj1hw+/rz6xtdeOij45H79z+5F9+8ufeaNap3j39KOOf8sH
/9RYP43HAv3hTUZZ1u+8WPTVj56X7y09O5e/fNUbRLyor/4/b/3XvnGxmpfM
/K1Hb/e2iNfZR/2N+VGH7OfPXk78/0i+nRVZb0JjlMRhv5GxcUtVkF7wCD6V
CZL1nfWpO/YXXX/48OE399m/b0OuP3z4ffaXP/VGcW/+Y6+eXQ+c3be/ev07
yvWg1150zv/X9/9F0f8X/XDWz9/66W1G/dl6z2eK65CNe6+eyz/7oV8Tc4nv
/oi3/pv3fU6No+Njdo6b8Vbbav9RER8t/Er7559l03ySZZ34pJ1rn6O3hzWq
SH23mTJuEeVGQfxE675+LFVf7/8Psf7w4cNv7o/V/a1h1h8+/D77a7e9X9wf
l3NN9umzdSB4P/vS873+Ve//P8Y8XB5vlI3ztzJbvubNYm3gj79+dmjPMGyf
NpfVnAO2joGv/lsPf9145rD7zE+jtL/oXx3en7+8/9+F7z21ajf5dhRfKfeu
W6ylqH614IfPT8cfjT3x/zv0gy/48OEn74+M+AHDqz98+H32t37y7/mqFtOz
sU9kp+CvS8fvLe/DF/3x3ad+4Jy/9eNb1DUCW2+ryt/91XEV+3/7sbs81aJ8
98kHjOuOvRee9tbffu23/nb/6rD9/FX8z659j6e2KfQ0wkyYZRM3nRyfRPOV
4iC+10jMr4vf3ff6w4cPv7nv/fsxoPrDh99nf3fWL9597olo/vvH/8zH9cs4
Qeye/O4zj7lZba3kZy47X8TXv+VdlT67PmDXEixPIw6t5quYRXKN440lT04H
b/+RHV/xkP38M238fyzfm5d+kEKJtISeMpnx/8MljuWXSdL1vetTdOjnoSPw
4cNP3lfjfwZaf/jw4Tf3Wf/j7BW/Xa7Fy+7/P/+k11+/bSzmCFzyspxWXwj6
Ww9/Tc0XoDOnvb4aI8SvOV4y27GXmwnaqb9YHz3d9q/z+f3/bBLVDxeiPECh
ZBR4Q3kRt8g9auQYzPjgvp02Rd8b/7NDf9H1hw8ffnPfN/6nS3/R9YcPH35z
n/U/lj/35iL+pxiLQyvPef2904+ImD0sRtBDXwr6G3d/mK+Pd+aS83La3Qr6
S5eeL8YJfeQ3o9Vffz6aYvvX+WwObaaN/4/jW2UJZe/dU74nq5Bq3YJw9v62
aMm3v6foj9T8lMX4i64/fPjwm/tj/d+3AdYfPnz4zX3W/1j70jv5XN0l2f/f
Wgtqy594vYjrf8M7gj67nmDjf1au+9+V/tJVvyfWNPvU7wULeND6s+cbKbd/
nc/G0LM1wOL69jH/3tC5YsNN68b/KbY92cfwzXzS9MdG/P/ufScv+PDhHxq/
/PdtmPWHDx9+c5/1P9bvOKLW4mX9drcjWb7Wj10u0l18Xr4n45FqPm2t5meO
vpSn2fj2lZX++h1H+dzmjTsvjlZ/Mf833fav8+35v7H8ujqT9pmwTwuVw7xu
8ZQ7WNZ2/NArJb9cv3OY9YcPH35zn43/GXL94cOH39xn/Y+N735G9f+XLntl
pb/79A/V2H4ek9Tyd47fq+YRbD9xX63v7m23/s783479KmkeX67/G9+3SkFC
IjtxdTMZu9X4nznKFMO3GiZJ3x+fajj1hw8ffnM/9PejKz90Pnz48NP32d+P
zR/dki/J/v/HX1vt7+3lSx95Ne/fr978905+69+6QlxLHH1pnm/KcUSLq/9Y
3f9fjF+ZeA4/yzKtHx3fD+Tk7KPiS1UkIjH/l4wzKdfOcRq3XZ+cr+n5vuvT
Lv3wCz58+Kn7VfGDh1B/+PDhN/dZ/2P78Xv4+H++vten31jrszXJWGzPpQ/9
Wk7bG0aKlev+hF9HrFz71iTqb4+vTq396/zJRB//E8+Xm6Qnrsi1/kVa/E/r
XLJ2R/LdzfR8Of5nqPWHDx9+c3+u+wc9rj98+PCb+6z/sffLx/IzxXpdy7N+
e52/8/h3xfXC0XPz7ezb5ZHtdT4vgOWz8c2PzOWrI5Hqz/8+Jtz+dT7v/2dV
83/b8MktTwVlp/amJTP+Z3Wp4/hOfgn6Iv7ncOsPHz785r4a/z/Q+sOHD7+5
z/ofe8vPqtifqzf8Rb2/s5WfZbE7Z+nXvvY+lXbnxAPqOcL29J4k6i/HR6ba
/nW+ef8/ll+VoupM8qaR79x5y1SW3Tm1fd+XPjVfxf8faP3hw4ff3PeNbx1S
/eHDh9/c5/2PvV2+Bhfru7O1fefx1778Hn69sPSR/zY7f4fv2/jOJ9V6XrS5
Mpcfu/5jFV9lMb6dfr8+i6E5mWbeY236dg5kvjXfyHOcspORrm7+LwW22/Lr
2jYF3399Opz6w4cPv7mvPz8cYv3hw4ff3Jf9j5UvvD1fueYt+ca9V8/lbz92
ZzFm6Nx858T9Io/Pv43f+1/57B/O7ftTtFf/0Sg8/zeF9q/zs0nmjv+J4AeS
OLtNibxp5B55/5+0swJMFL98l66vrk8HWn/48OE399n8tiHXHz58+M39pv2P
vc2VfOmS88S6YR9/fb77zE/zs5e8XMT9P3bZ3H4QqvHnrT+7vkm5/et83v/3
jKNv3ZfnGRMR9PwoWEYjpTpdu//vxC7VvtpOi76zM0F/bMzfG1794cOH39y3
4/8Mrf7w4cNv7h+k/7F+94f5GKAzxXpg7N4/eyawnf1HMvXn8X8Sbv86fzKZ
FuvoxvPdcuRWev24nm/wRP7K5Pq/epwhp3QUzS/Tpeuz+fdDrj98+PCb++b4
1u79RdcfPnz4zf2D9j+2Hvh8fpbNHbhIzPtl1wK0fmZuP3b9+fimhNu/zs/k
+r8RfV9+5OTsnhGWRf7e+D9knxXPJ2NPmr7x7/cA6w8fPvzm/njsi/85nPrD
hw+/ud9G/2N78p387GXni7j/n/lf+/Jj11/WL9X2r/PZvX99Ha2ofmiX971V
CrKSkhX/x7kG8dNt+uY5afre9XsGVH/48OE39+X6NkOtP3z48Jv7bfU/dn/x
83z5ytfka9+4ZF++99Vi/dX4pkTbv8534//H9cnI119Ag/cVurAmWWYcIfNw
IO/2fPtIiv7Iun83tPrDhw+/ua/6/wOtP3z48Jv7bfY/9paezXefeSSp+uvx
EVJs/zp/kgXi/7fuuzsrimkkokBKc9ySJ1MKHWjH92aSmO/997tDv0qDDx9+
2v54NB50/eHDh4/+R+jlzI9KrP3rfNH/D8X/b9Ena9O+SCDjYK5U0g+TsSML
jP+pK2dbvtm8afoj6/l9176TP3z48A+NL59vD7X+8OHDb+73vf9RxjdNs/3r
/Gw6Ef3o2H6jl11oc1cZ/19PVpY0P3CRqn1PquT80cg3f687/2Av+PDhL9JX
z+8HWn/48OE39/ve/xjz+P+L8+1d+/X5+H9r/E/7PuWenXyTcnOfjwltT615
y95EEf3QnpR8Eb9juPWHDx9+c1+M/1mcX7UNHz78tP2+9z9GvvjICbV/nZ9N
zPE/MXxfnv7kdSoZjxmy6TSYl//sdn1ffqn5Kv7ugvzQPvjw4afvG/9+D7D+
8OHDb+73vf8xHtnzm7v1Q3nN67N7/1mWeVK05wcT1aQkbYM8R0TcIk85yXof
yRff0vbtz2fXfnXG8OHDT9nnfz8GXH/48OE39/ve/zDn/6bX/nU+u/cfmv/b
lu9eMzg7VF5uicPt4xv/7ytvLD+YIiGffT6HXH/48OE3973xuzv0F11/+PDh
N/f73v+wx/937XtT7MOfGOv/RvIr8yDre2g3aYfEtpq3UDP3OJZf7kjXH41r
4vf1vP7w4cNv7pfz94ZZf/jw4Tf3+97/4PFNE27/Oj/j9/+nUX23PNU7yLOT
POnYcwt9FxGZ6SP7dkuk6Puevw2p/vDhw2/uy/v/Q60/fPjwm/t973/o8Y1S
bP86fzJ11/+N4pO7bcQKYl89habgtQVZcYs8QGS/FkjAL9enXoxfdRg+fPhp
+974Fh36i64/fPjwm/t973+MPc9HU2r/Op/P/5VxNCP6NEcatdtnyjJrx8S8
BbLSlJKrtes7SoK+cf9ugPWHDx9+c9/+93to9YcPH35zv+/9D2N+VILtX+c7
8f8j+XZWZL0JjVESh/1GxsYtVUF6wSP4VCZI1nfWp+7YX3T94cOH39xn/74N
uf7w4cNv7ve9/zEq4qMtyj9o/bNsmk+yrBOftHPtc/T2sEYVqe82U8Ytotwo
iJ9o3dePperrv39DrD98+PCb+2N1f2uY9YcPH35zv+/9D1G/dNu/zpf3/7vw
vadW7SbfjuIr5d51i7UU1a8W/PD56fijcWD97YHUHz58+M39kTF/b3j1hw8f
fnO/7/0Pu36ptX+dr+J/du17PLVNoacRZsIsm7jp5Pgkmq8UB/G9RmJ+Xfzu
vtcfPnz4zX3v348B1R8+fPjN/b73P0Z2fKPE2r/ulWnj/2P53rz0gxRKpCX0
lMmM/x8ucSy/TJKu712fokM/Dx2BDx9+8r4a/zPQ+sOHD7+53/f+h1gfPd32
r/P5/f9sEtUPF6I8QKFkFHhDeRG3yD1q5BjM+OC+nTZF3xt/q0N/0fWHDx9+
c983/qdLf9H1hw8ffnO/7/0P/flGiu1f57M5tJk2/j+Ob5UllL13T/merEKq
dQvC2fvboiXf/p6iP1LzUxbjL7r+8OHDb+6P9X/fBlh/+PDhN/f73v9gzzdS
bv86n42hZ2uAxfXtY/69oXPFhpvWjf9TbHuyj+Gb+aTpj434u937Tl7w4cM/
NH7579sw6w8fPvzmft/7H2L+b7rtX+fb839j+XV1Ju3iwj4tVA7zusVT7mBZ
2/FDr5T8cv3OYdYfPnz4zX02/mfI9YcPH35zv+/9D2f+b8d+lTSPL9f/je9b
pSAhkZ24upmM3Wr8zxxliuFbDZOk749PNZz6w4cPv7kf+vvRlR86Hz58+On7
fe9/jNX9/8X4lYnn8LMs0/rR8f1ATs4+Kr5URSIS83/JOJNy7Ryncdv1yfma
nu+7Pu3SD7/gw4eful8Vv28I9YcPH35zv+/9D3t8U2rtX+dPJvr4n3i+3CQ9
cUWu9S/S4n9a55K1O5Lvbqbny+dvQ60/fPjwm/tz/fvd4/rDhw+/ud/3/gf/
+5hw+9f5vP+fVc3/bcMntzwVlJ3am5bM+J/VpY7jO/kl6Iv4W8OtP3z48Jv7
avz/QOsPHz785n7f+x9yfFOq7V/nm/f/Y/lVKarOJG8a+c6dt0xl2Z1T2/d9
6VPzVfzdgdYfPnz4zX3f+NYh1R8+fPjN/b73P8ZqfvNifDv9fn0WQ3MyzbzH
2vTtHMh8a76R5zhlJyNd3fxfCmy35de1bQq+//rUM8d7hm1vb+fFxJDWfH+K
4bQ/fPiH2dfv3w2x/vDhw2/uz9v/iOX7U7Tnj0bh+b8ptH+dn00yd/xPBD+Q
xNltSuRNI/fI+/+knRVgovjlu3R9dX1a4z/4wIP8Xt/JU6da9QOnBHf3rf3h
wz/MPpvfNuT6w4cPv7k/b/8jlh+EWvLZ9U3K7V/n8/6/Zxx96748z5iIoOdH
wTIaKdXp2v1/J3ap9tV2WvSdnQn6Y2P+nus/+thj+V133ZV/8MgHeVrZ/2/L
X3T94cOH39y34/8Mrf7w4cNv7tf1P2L7sevP4/8k3P51/mQyLdbRjee75cit
9PpxPd/gifyVyfV/9ThDTukoml+mS9dn8++r/A8eOcLv+7PnWOxa9uTTT7fq
L7r+8OHDb+6b41u79xddf/jw4Tf36/ofh73+fHxTwu1f52dy/d+Ivi8/cnJ2
zwjLIn9v/B+yz4rnk7EnTd/499vjnzx5Mn/yqafym2++iX+WT83e96n+8OHD
b+6Px774n8OpP3z48Jv7df2P2H7s+sv6pdr+dT6796+voxXVD+3yvrdKQVZS
suL/ONcgfrpN3zwnTd+7fo/HO3bsbjH+Z9b/71P94cOH39yX69sMtf7w4cNv
7s/b/4jle18t+mp8U6LtX+e78f/j+mTk6y+gwfsKXViTLDOOkHk4kHd7vn0k
Rd9df9vvHzt2jD+rO3nqZK/qDx8+/Oa+6v8PtP7w4cNv7s/b/4jlu7m06+vx
EVJs/zp/kgXi/7fuuzsrimkkokBKc9ySJ1MKHWjH92aSmO/999uz59jdx/gc
AH7/v0U/nHAY7Q8f/mH2x6PxoOsPHz78+P2PWH6V1obvzI9KrP3rfNH/D8X/
b9Ena9O+SCDjYK5U0g+TsSMLjP+pK2dbvtm8afoj6/l9yD921zER//Ppk636
Jhr2+9r+8OEfZl8+3x5q/eHDh9/cn7f/cVjrX8Y3TbP96/xsOhH96Nh+o5dd
aHNXGf9fT1aWND9wkap9T6rk/NHIN3/PffHx/7PfVfP+/+GvP3z48Jv76vn9
QOsPHz785v68/Y9Y/sFe9f6Yx/9fnG/v2q/Px/9b43/a9yn37OSblJv7fExo
e2rNW/YmiuiH9qTki/gd9T4f/z9L+3TR/+9L/eHDh9/cF+N/FudXbcOHDz9t
f97+Ryzf2BHBH/niIyfU/nV+NjHH/8TwfXn6k9epZDxmyKbTYF7+s9v1ffml
5qv4u4H0Dz30UH7//ffn1117HX+Wdccdd+T3P3B//uRTJ1rxQ/t85/Sx/eHD
P8y+8e/3AOsPHz785n5d/yO2H9rXlj8e2fObu/VDec3rs3v/WZZ5UrTnBxPV
pCRtgzxHRNwiTznJeh/JF9/S9u3Pp00ePXoRH/fD7v2ztOPi+2233tqL+sOH
D7+5z/9+DLj+8OHDb+7X9T8Oe/3N+b/ptX+dz+79h+b/tuW71wzODpWXW+Jw
+/jG//vKG8sPpkjIZ5/PIdcfPnz4zX1v/O4O/UXXHz58+M39vvc/7PH/Xfve
FPvwJ8b6v5H8yjzI+h7aTdohsa3mLdTMPY7llzvS9Ufjmvh9Pa8/fPjwm/vl
/L1h1h8+fPjN/b73P3h804Tbv87P+P3/aVTfLU/1DvLsJE869txC30VEZvrI
vt0SKfq+529Dqj98+PCb+/L+/1DrDx8+/OZ+3/sfenyjFNu/zp9M3fV/o/jk
bhuxgthXT6EpeG1BVtwiDxDZrwUS8Mv1qRfjVx2GDx9+2r43vkWH/qLrDx8+
/OZ+3/sfY8/z0ZTav87n839lHM2IPs2RRu32mbLM2jExb4GsNKXkau36jpKg
z+7fXXDhhfz/Cy+8gP9fbovvF1ww275glmb2/4V8u9jHjrN9Fxb7VdoLRFqe
l5ZnsY/ndaFIc0FxDD58+PDhw4cPvy++MT8qwf5fne/E/4/k21mR9SY0Rkkc
9hsZG7dUBekFj+BTmSBZ31mfumN/0fWHDx9+c5/9+zbk+sOHD7+53/f+x6iI
j7Yo/6D1z7JpPsmyTnzSzrXP0dvDGlWkvttMGbeIcqMgfqJ1Xz+Wqq///g2x
/vDhw2/uj9X9rWHWHz58+M39vvc/RP3Sbf86X97/78L3nlq1m3w7iq+Ue9ct
1lJUv1rww+en44/GgfW3B1J/+PDhN/dHxvy94dUfPnz4zf2+9z/s+qXW/nW+
iv/Zte/x1DaFnkaYCbNs4qaT45NovlIcxPcaifl18bv7Xn/48OE3971/PwZU
f/jw4Tf3+97/GNnxjRJr/7pXpo3/j+V789IPUiiRltBTJjP+f7jEsfwySbq+
d32KDv08dAQ+fPjJ+2r8z0DrDx8+/OZ+3/sfYn30dNu/zuf3/7NJVD9ciPIA
hZJR4A3lRdwi96iRYzDjg/t22hR9b/ytDv1F1x8+fPjNfd/4ny79RdcfPnz4
zf2+9z/05xsptn+dz+bQZtr4/zi+VZZQ9t495XuyCqnWLQhn72+Llnz7e4r+
SM1PWYy/6PrDhw+/uT/W/30bYP3hw4ff3O97/4M930i5/et8NoaerQEW17eP
+feGzhUbblo3/k+x7ck+hm/mk6Y/1tfvXIDv5AUfPvxD45f/vg2z/vDhw2/u
973/Ieb/ptv+db49/zeWX1dn0i4u7NNC5TCvWzzlDpa1HT/0Sskv1+8cZv3h
w4ff3Gfjf4Zcf/jw4Tf3+97/cOb/duxXSfP4cv3f+L5VChIS2Ymrm8nYrcb/
zFGmGL7VMEn6/vhUw6k/fPjwm/uhvx9d+aHz4cOHn77f9/7HWN3/X4xfmXgO
P8syrR8d3w/k5Oyj4ktVJCIx/5eMMynXznEat12fnK/p+b7r0y798As+fPip
+1Xx+4ZQf/jw4Tf3+97/sMc3pdb+df5koo//iefLTdITV+Ra/yIt/qd1Llm7
I/nuZnq+fP421PrDhw+/uT/Xv989rj98+PCb+33vf/C/jwm3f53P+/9Z1fzf
Nnxyy1NB2am9acmM/1ld6ji+k1+Cvoi/Ndz6w4cPv7mvxv8PtP7w4cNv7ve9
/yHHN6Xa/nW+ef8/ll+VoupM8qaR79x5y1SW3Tm1fd+XPjWf/f7xOR5snNd0
oq73WOykyWQqvk+zYh24TM0HEd+zfDrR04pzs2LOOPt/mmUqvYglK/JkaTJl
wYcPHz58+PDh98cfq/nNafb/6nxZ/9i+nQOZb8038hyn7OYVR9383/D1STt+
Xdum4PuvT4dTf/jw4Tf39ft3Q6w/fPjwm/t973+MRuH5vym0f53PrnGc8T8R
/EASZ7cpkTeN3MOuv8S78qwAE8Uv36Xrq+vTgdYfPnz4zX02v23I9YcPH35z
v+/9D3Z9k3L71/lZ8cwjui/PMyYi6PlRsIxGSnW6dv/fiV2qfbWdFn1nZ4L+
2Ji/N7z6w4cPv7lvx/8ZWv3hw4ff3O97/4PH/0m4/et8OQYqpu+WI7fS68f1
fIMn8lc2ySy/lPU9sfwyXbo+m38/5PrDhw+/uW+Ob+3eX3T94cOH39zve/+D
j29KuP3rfDmXIabvy4+cnN0zwrLI3xv/h+yz4vlk7EnTN/79HmD94cOH39wf
j33xP4dTf/jw4Tf3+97/kPVLtf3rfDFnepJ34od2ed9bpSArKVnxf5xrED/d
pm+ek6bvXb9nQPWHDx9+c1+ubzPU+sOHD7+53/f+hxrflGj71/kyplFXPhn5
+gto8L5CF9Yky4wjZB4O5N2ebx9J0XfX3x5W/eHDh9/cV/3/gdYfPnz4zf2+
9z/0+Agptn+dL+OjxvfdnRXFNBJRIKU5bsmTKYUOtON7M0nM9/773aFfpcGH
Dz9tfzwaD7r+8OHDR/8j9HLmRyXW/nW+XAshuk/Wpn2RQMbBXKmkHyZjRxYY
/1NXzrZ8s3nT9EfW8/uufSd/+PDhHxpfPt8eav3hw4ff3O97/6OMb5pm+9f5
2VSsdxbdb/SyC23uKuP/68nKkuYHLlK170mVnD8a+ebvdecf7AUfPvxF+ur5
/UDrDx8+/OZ+3/sfYx7/f3G+vWu/vlzHOK5PuWcn36Tc3OdjQttTa96yN1FE
P7QnJV/E7xhu/eHDh9/cF+N/FudXbcOHDz9tv+/9j5EvPnJC7V/nZxNz/E8M
35enP3mdSsZjhmw6DeblP7td35dfar6Kv7sgP7QPPnz46fvGv98DrD98+PCb
+33vf4xH9vzmbv1QXvP67N5/lmWeFO35wUQ1KUnbIM8REbfIU06y3kfyxbe0
ffvz2bVfnTF8+PBT9vnfjwHXHz58+M39vvc/zPm/6bV/nc/u/Yfm/7blu9cM
zg6Vl1vicPv4xv/7yhvLD6ZIyGefzyHXHz58+M19b/zuDv1F1x8+fPjN/b73
P+zx/1373hT78CfG+r+R/Mo8yPoe2k3aIbGt5i3UzD2O5Zc70vVH45r4fT2v
P3z48Jv75fy9YdYfPnz4zf2+9z94fNOE27/Oz/j9/2lU3y1P9Q7y7CRPOvbc
Qt9FRGb6yL7dEin67Pkbm+MxZXGeimu9rJjzza/9puX3bCL/z4rnQhP1PZPp
9XPZ2tHaPjaObCqNrMgnm8CHDx8+fPjw4ffK1+Mbpdj/q/Nl/aP75G4bsYLY
V0+hKXhtQfznUAlE9muBBPxyferF+FWH4cOHn7bvjW/Rob/o+sOHD7+53/f+
x9jzfDSl9q/z5bVNbJ/mSKN2+0xZZu2YmLdAVppScrV2fUdJ0Jfjd4daf/jw
4Tf37X+/h1Z/+PDhN/f73v8w5kcl2P51vnyeEdu3syLrTWiMkjjsNzI2bqkK
0gsewacyQbK+sz51x/6i6w8fPvzmPvv3bcj1hw8ffnO/7/2PUREfbVH+Qeuf
ZdN8kmWd+KSda5+jt4c1qkh9t5kybhHlRkH8ROu+fixVX//9G2L94cOH39wf
q/tbw6w/fPjwm/t973+I+qXb/nW+vP/fhe89tWo3+XYUXym3xv87KapfLfjh
89PxR+PA+tsDqT98+PCb+yMjfvfw6g8fPvzmft/7H3b9Umv/Ol/F/+za93hq
m6ojJsmDbD63k06OT6L5SnEQ32sk5tfF7+57/eHDh9/c9/79GFD94cOH39zv
e/9jZK9vllj7170ybfx/LN+bl36QQom0hJ4yqesWqswgml8mSdf3rk/RoZ+H
jsCHDz95X43/GWj94cOH39zve/9DrI+ebvvX+fz+fzaJ6ocLUR6gUDIKvKG8
iFvkHjVyDGZ8cN9Om6Lvjb/Vob/o+sOHD7+57xv/06W/6PrDhw+/ud/3/of+
fCPF9q/z+RoK2vj/OL5VllD23j3le7IKqdYtCGfvb4uWfPt7iv5IzU9ZjL/o
+sOHD7+5P9b/fRtg/eHDh9/c73v/gz3fSLn96/ysWPssrm8f8+8NnSs23LRu
/J9i25N9DN/MJ01/bMTf7d538oIPH/6h8ct/34ZZf/jw4Tf3+97/EPN/023/
Ot+e/xvLr6szaRcX9mmhcpjXLZ5yB8vajh96peSX63cOs/7w4cNv7rPxP0Ou
P3z48Jv7fe9/OPN/O/arpHl8uf5vfN8qBQmJ7MTVzWTsVuN/5ihTDN9qmCR9
f3yq4dQfPnz4zf3Q34+u/ND58OHDT9/ve/9jrO7/L8avTDyHn2WZ1o+O7wdy
cvZR8aUqEpGY/0vGmZRr5ziN265Pztf0fN/1aZd++AUfPvzU/ar4fUOoP3z4
8Jv7fe9/2OObUmv/On8y0cf/xPPlJumJK3Ktf5EW/9M6l6zdkXx3Mz1fPn8b
av3hw4ff3J/r3+8e1x8+fPjN/b73P/jfx4Tbv87n/f+sav5vGz655amg7NTe
tGTG/6wudRzfyS9BX8TfGm794cOH39xX4/8HWn/48OE39/ve/5Djm1Jt/zrf
vP8fy69KUXUmedPId+68ZSrL7pzavu9Ln5rPfv/4HA82zms6Udd7LHbSZDIV
36dZsQ5cpuaDiO9ZPp3oacW5WTFnnP0/zTKVXsSSFXmyNJmy4MOHDx8+fPjw
++OP1fzmNPt/db6sf2zfzoHMt+YbeY5TdvOKo27+b/j6pB2/rm1T8P3Xp8Op
P3z48Jv7+v27IdYfPnz4zf2+9z9Go/D83xTav85n1zjO+J8IfiCJs9uUyJtG
7mHXX+JdeVaAieKX79L11fXpQOsPHz785j6b3zbk+sOHD7+53/f+B7u+Sbn9
6/yseOYR3ZfnGRMR9PwoWEYjpTpdu//vxC7VvtpOi76zM0F/bMzfG1794cOH
39y34/8Mrf7w4cNv7ve9/8Hj/yTc/nW+HAMV03fLkVvp9eN6vsET+SubZJZf
yvqeWH6ZLl2fzb8fcv3hw4ff3DfHt3bvL7r+8OHDb+73vf/Bxzcl3P51vpzL
ENP35UdOzu4ZYVnk743/Q/ZZ8Xwy9qTpG/9+D7D+8OHDb+6Px774n8OpP3z4
8Jv7fe9/yPql2v51vpgzPck78UO7vO+tUpCVlKz4P841iJ9u0zfPSdP3rt8z
oPrDhw+/uS/Xtxlq/eHDh9/c73v/Q41vSrT963wZ06grn4x8/QU0eF+hC2uS
ZcYRMg8H8m7Pt4+k6Lvrbw+r/vDhw2/uq/7/QOsPHz785n7f+x96fIQU27/O
l/FR4/vuzopiGokokNIct+TJlEIH2vG9mSTme//97tCv0uDDh5+2Px6NB11/
+PDho/8RejnzoxJr/zpfroUQ3Sdr075IIONgrlTSD5OxIwuM/6krZ1u+2bxp
+iPr+X3XvpM/fPjwD40vn28Ptf7w4cNv7ve9/1HGN02z/ev8bCrWO4vuN3rZ
hTZ3lfH/9WRlSfMDF6na96RKzh+NfPP3uvMP9oIPH/4iffX8fqD1hw8ffnO/
7/2PMY//vzjf3rVfX65jHNen3LOTb1Ju7vMxoe2pNW/ZmyiiH9qTki/idwy3
/vDhw2/ui/E/i/OrtuHDh5+23/f+x8gXHzmh9q/zs4k5/ieG78vTn7xOJeMx
QzadBvPyn92u78svNV/F312QH9oHHz789H3j3+8B1h8+fPjN/b73P8Yje35z
t34or3l9du8/yzJPivb8YKKalKRtkOeIiFvkKSdZ7yP54lvavv357Nqvzhg+
fPgp+/zvx4DrDx8+/OZ+3/sf5vzf9Nq/zmf3/kPzf9vy3WsGZ4fKyy1xuH18
4/995Y3lB1Mk5LPP55DrDx8+/Oa+N353h/6i6w8fPvzmft/7H/b4/659b4p9
+BNj/d9IfmUeZH0P7SbtkNhW8xZq5h7H8ssd6fqjcU38vp7XHz58+M39cv7e
MOsPHz785n7f+x88vmnC7V/nZ/z+/zSq75anegd5dpInHXtuoe8iIjN9ZN9u
iRR93/O3IdUfPnz4zX15/3+o9YcPH35zv+/9Dz2+UYrtX+dPpu76v1F8creN
WEHsq6fQFLy2ICtukQeI7NcCCfjl+tSL8asOw4cPP23fG9+iQ3/R9YcPH35z
v+/9j7Hn+WhK7V/n8/m/Mo5mRJ/mSKN2+0xZZu2YmLdAVppScrV2fUdJ0Gf3
79gzOPY/e1bFxuOp7eI7+zeefY5H/P8izag4Phrz7+L9SDtenDsu9qu0RV5F
Wvjw4cOHDx8+/D76Kff/6nwn/n8k386KrDehMUrisN/I2LilKkgveASfygTw
4cOHDx8+fPjw4R8KP8um+STLOvFJO9c+R28Pa1SR+m4zZdwiyo2C+InWff0Y
fPjw4cOHDx8+fPiHwZf3/7vwvadW7SbfjuIr5d51i7UU1a8W/PD58OHDhw8f
Pnz48OGn6av4n137Hk9tU+hphJkwyyZuOjk+ieYrxUF8rwEfPnz48OHDhw8f
fsJ+po3/j+V789IPUiiRltBTJjP+f7jEsfwyCXz48OHDhw8fPnz4h8Pn9/+z
SVQ/XIjyAIWSUeAN5UXcIveokWMw44P7dlr48OHDhw8fPnz48FP32RzaTBv/
H8e3yhLK3runfE9WIdW6BeHs/W3Rkm9/hw8fPnz48OHDhw8/dZ+NoWdrgMX1
7WP+vaFzxYab1o3/U2x7so/hm/nAhw8fPnz48OHDh5++b8//jeXX1Zm0iwv7
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
Dx9+PP//A/r0BQg=
    "], {{0, 436.}, {384., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
xr9M8EqoSVhIDEg8lihKCk9qTsYnRyefE8gIEgU9KaopOSmDqYapRaljaXZp
+9LmhL7Co+lQ+pr09gwa8vPty9TL/CpzPMsxqyrrXXZY9tkc6RxBTl+uQe72
3Kk8j7xv16PXc9Z356vnb8kf3+CyoXYjtDFmY/cmzU2FmyY3e24+voW4JXHL
jwWmBaUFb7aGb+0oVCncXDjxledXjUUSRcKi0W3222q+Rn8d/3X/dovtB7Z/
LuYW3ygxLSkv+biDs+PGN2bfVHwj2hm7s3+X9a5Du7G7BbtH9jjtOV4qXZpX
OrHXf29rGaOsuOzNvnX7rpdbltfsJ+7P3D9W4VfRfkDrwO4DHyvjKoerXKua
q5Wrt1cvHOQeHDrkfKipRqWmpObD4fjDd2s9a1vrdOrK67H1WfVPj4Qd6f2W
+W3DUcWjJUc/HRMcGzsedLynwaah4YTyiV2NcGNm48zJqJMDp9xOtTcZNdU2
05tLToPTmaeffRf93cgZ3zPdZ5lnm77X/r66hdpS3Aq15rbOtcW1jbVHtA+e
8znX3WHf0fKD8Q/HOtU7q87Lnt91gXih8ILoYt7F+a7UrtlL/EsT3eu6H1xe
dflOz8qe/iu+V65d9bh6udel9+I1h2ud1+2un7vBvNF20/pma59VX8uPVj+2
9Fv3t96yudU+YDvQMbh88MKQ09Cl2263r97xvnNzeMXw4EjoyN3RqNGxu9y7
0/eS7r28n3V/8cHmh5iHxY+kHpU/Vn5c95P+T81j1mPnx93G+54EP3kwwZl4
/nP6zx8nC59SnpZPqU01TJtPd854zAw8W/1s8nnq88XZol+kf6l+offi+1+d
f+2bWzU3+VL4UvRqx2uF18feWL7png+cf/w2+e3iQvE7hXfH3zPf934I/zC1
mP0R97Hik/6njs++nx+KkkWiVLaQ/cUKoJCEY2MBeHUMAEoEANQBxD9ILHm2
3z0O9De38x94ydd9CWsAmpAmSOxuugA4jaQOkhQkxZYxxBnAFhZ/5u+RHmth
vqRFFiLW5J1I9FoFAFwHAJ+EItHiQZHoE+IfUfcA6Epb8oriwCIO+vAXjSF6
9uF/9Wm/AcHH0Ts=
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> XMPTools`Wrappers`ReadProcessed["Exif"][
       "/var/folders/8x/m8gt0ghs6y32_4ydyhlc2xyc0000gn/T/TemporaryItems/(A \
Document Being Saved By screencaptureui 2)/Screen Shot 2020-07-12 at 2.41.26 \
PM.png"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{384., 436.},
  PlotRange->{{0, 384.}, {0, 436.}}]], "Input",ExpressionUUID->"dffd264c-edd8-\
4313-9891-99bb720eed39"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"baselineChemicalRNN", " ", "=", " ", 
    RowBox[{
    "Import", "[", "\"\</Users/sumansigdel/BaselineChemicalRNN.wlnet\>\"", 
     "]"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Chemicalnet", "=", 
    RowBox[{"NetReplacePart", "[", 
     RowBox[{
      RowBox[{"NetExtract", "[", 
       RowBox[{"baselineChemicalRNN", ",", "\"\<predict\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Characters\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"vocabulary", ",", "EndOfString"}], "}"}], ",", 
            RowBox[{"\"\<TargetLength\>\"", "\[Rule]", "1"}]}], "}"}], 
          "]"}]}], ",", 
        RowBox[{"\"\<Output\>\"", "\[Rule]", 
         RowBox[{"NetDecoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Append", "[", 
             RowBox[{"vocabulary", ",", "\"\<\>\""}], "]"}]}], "}"}], 
          "]"}]}]}], "}"}]}], "]"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"randomChemical", "[", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"obj", "=", 
        RowBox[{"NetStateObject", "[", "Chemicalnet", "]"}]}], "}"}], ",", 
      RowBox[{"StringJoin", "@", 
       RowBox[{"NestWhileList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"obj", "[", 
           RowBox[{
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<RandomSample\>\""}], 
           "]"}], "&"}], ",", 
         RowBox[{"Sequence", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{"#", "=!=", 
             RowBox[{"{", "\"\<\>\"", "}"}]}], "&"}], ",", "1", ",", "100"}], 
          "]"}]}], "]"}]}]}], "]"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"newChemicals", "=", 
    RowBox[{"Sort", "@", 
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"randomChemical", "[", "]"}], ",", "5000"}], "]"}], ",", " ",
        "normalizedChemicalNames"}], "]"}]}]}], ";"}], "Code"]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8035682766123657`*^9, 3.803568287228902*^9}, 
   3.803568390777598*^9, {3.803568845849339*^9, 3.80356887233718*^9}, {
   3.803569094146893*^9, 3.803569096597722*^9}, 
   3.803569477974367*^9},ExpressionUUID->"d66da0d2-7f7c-4526-8bda-\
dfb5e25bbc46"],

Cell["\<\
Here are some chemical names that were generated by the RNN model.\
\>", "Text",
 CellChangeTimes->{{3.803568941452784*^9, 
  3.803568962192225*^9}},ExpressionUUID->"6caeaea7-5ac6-47bd-bd78-\
dc23a552c606"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"newChemicals", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.803568926558592*^9, 3.803568935251005*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"9c2955e8-4123-45b0-bddd-4d27a0e75fda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"dopaquinox\"\>", ",", "\<\"lecalein\"\>", 
   ",", "\<\"esopiulfon\"\>", ",", "\<\"methiocarbazide\"\>", 
   ",", "\<\"bitosnan\"\>", ",", "\<\"mephoxybenzone\"\>", 
   ",", "\<\"hexyldimethyloctylsilane\"\>", ",", "\<\"spiropentylbenzene\"\>",
    ",", "\<\"damuscinol\"\>", ",", "\<\"tetrachlorocyclodecane\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.803568936761797*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"05100554-02ca-4080-8164-fa229a41f837"]
}, Open  ]],

Cell["\<\
The performance of the RNN model is now calculated using the performance \
metric of euclidean distance between the n-grams.\
\>", "Text",
 CellChangeTimes->{{3.803568982085411*^9, 
  3.80356904052174*^9}},ExpressionUUID->"50b55436-ed22-4272-809f-\
5b8937f2e1e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ngramDistance", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"findEuclideanDistance", "[", 
     RowBox[{
      RowBox[{"computeNGrams", "[", 
       RowBox[{
        RowBox[{"RandomChoice", "[", 
         RowBox[{"newChemicals", ",", "500"}], "]"}], ",", "n"}], "]"}], ",", 
      " ", 
      RowBox[{"computeNGrams", "[", 
       RowBox[{
        RowBox[{"RandomChoice", "[", 
         RowBox[{"normalizedChemicalNames", ",", "500"}], "]"}], ",", "n"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.803569456188614*^9, 3.8035694941709843`*^9}, {
  3.803569534676566*^9, 3.8035695502500267`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"003f0d52-a941-47dd-82c0-66101f64fb9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02066730778922169`", ",", "0.018936139793824656`", ",", 
   "0.02110177576283456`", ",", "0.020980033292970258`", ",", 
   "0.02459244698329909`"}], "}"}]], "Output",
 CellChangeTimes->{{3.803569550793816*^9, 3.8035695833617907`*^9}, 
   3.803569847673588*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"86e1028b-3516-4809-b6a5-c87aaddfce16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.02066730778922169`", ",", "0.018936139793824656`", ",", 
     "0.02110177576283456`", ",", "0.020980033292970258`", ",", 
     "0.02459244698329909`"}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ",", " ", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<RNN\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803569864543564*^9, 3.803569893959132*^9}, {
  3.803570307049217*^9, 3.803570313982971*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"ea5bb249-bf52-44fa-bd65-f28beee30d84"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6649999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                0.02066730778922169}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.02066730778922169]& ,
             TagBoxNote -> "0.02066730778922169"], 
           StyleBox["0.02066730778922169`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.02066730778922169, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                0.018936139793824656`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.018936139793824656`]& , TagBoxNote -> 
            "0.018936139793824656"], 
           StyleBox["0.018936139793824656`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.018936139793824656`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                0.02110177576283456}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.02110177576283456]& ,
             TagBoxNote -> "0.02110177576283456"], 
           StyleBox["0.02110177576283456`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.02110177576283456, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.020980033292970258`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.020980033292970258`]& , TagBoxNote -> 
            "0.020980033292970258"], 
           StyleBox["0.020980033292970258`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.020980033292970258`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.02459244698329909}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.02459244698329909]& ,
             TagBoxNote -> "0.02459244698329909"], 
           StyleBox["0.02459244698329909`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.02459244698329909, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.45075018208302986`, 0.}, {5.551210779315368, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{5.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {5.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {
             LineBox[{{1.4512017479970867`, 0.}, 
               Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                0.}]}], 
             LineBox[{{1.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                0.}]}], 
             LineBox[{{2.4512017479970867`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
                0.}]}], 
             LineBox[{{2.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
                0.}]}], 
             LineBox[{{3.4512017479970867`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
                0.}]}], 
             LineBox[{{3.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
                0.}]}], 
             LineBox[{{4.451201747997087, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
                0.}]}], 
             LineBox[{{4.548798252002913, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
                0.}]}]}, {}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{0, -2}, {1., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{0, -2}, {2., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{0, -2}, {3., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{0, -2}, {4., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{0, -2}, {5., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, StripOnInput -> 
             False]}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.45075018208302986`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"RNN\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6649999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6649999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6649999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6649999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6649999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6649999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.803569881367622*^9, 3.8035698945156183`*^9}, 
   3.8035703146089287`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"b2e82df9-f46a-4520-b05f-87269f6d46d2"]
}, Open  ]],

Cell["\<\
In the above bar chart, we see that the euclidean distance for all the 5 \
n-grams are quite close to the actual dataset. In addition, the example that \
were generated are also plausible examples.\
\>", "Text",
 CellChangeTimes->{{3.803571840335161*^9, 3.803571858700158*^9}, {
  3.803571936378414*^9, 
  3.803571976099392*^9}},ExpressionUUID->"22ef2bc9-454b-41e7-a3fb-\
40e2254caccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Company Names", "Subsection",
 CellChangeTimes->{{3.803571999629032*^9, 
  3.803572014201737*^9}},ExpressionUUID->"3fc42dfe-605e-44ea-884f-\
793281e4d3f6"],

Cell[TextData[{
 "<",
 StyleBox["one-line text, explaining the code only",
  FontSlant->"Italic"],
 "> Plot several functions with a legend:"
}], "CodeText",
 CellChangeTimes->{{3.802186292108103*^9, 3.802186294360371*^9}, {
  3.8021865517803793`*^9, 3.802186579280602*^9}, {3.802186616084752*^9, 
  3.802186616372116*^9}, {3.802186713252631*^9, 
  3.802186721292982*^9}},ExpressionUUID->"b6cf8fe9-f994-4c80-b699-\
4acc808ada53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.802186311848963*^9, 3.802186317409884*^9}, {
   3.802186504598793*^9, 3.802186537669526*^9}, 3.802186633589818*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"67fcfee9-b5f6-4707-8cd4-267a0ba5567d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5154#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk4VN8fxxkq2QaZsaa0IJUWqXyj80mopJIsLUSkVYpKi61FaBNCkSKl
ZF+iIo5QpMiWrNnHjFkOspT1d3//zHlez733ue/P+7Pce+4z6k5nLV1oQkJC
BdTP/1cRLF7VrXd9c1Xh/9fQzUs5hZvUHjqgH2aLVJUenkXjGauONoWdRSww
ZZWG+aFe+RN/c6l12bZpYZewB6jZ1L84gVqXq//h24fGop8OYZpPw2IRvfDQ
XN/76cjSVan5cVg62pm8/vgCX4xCh+yyI8Mwirtq96kDfqBNn83Ejc5Xo/VN
bzNPX25HMvWvfmx4WI2uBecEiGa0o54uWsTK7GrkZPoH+/S1o2Ch/AVKf6pR
z4YxEFvegbo2Ldcb8KhBO5esim183IGCsiQcn3nUIgsVCZ6teydqiP2eM+5e
jy56Xt/MYHSj5DQtr4HQeiR6QCc8W6cbXSvwB1ZmPer4cqps8/ZutKzF4FvN
YD1KH/vgqOLVjbyZqR2J7j8RCZyJ6m/vRovv35ewdW9AnZd6t3xL6EHnru4+
kn2uEfUOuB/pV2chMzeDRLGQRmT+dq7M9Y0stNhJm9inNyIJ0ZJztD0s1LBj
to+YoBFl/XIYKvViIUOlwsf2p5uQ3DztWNN6FhJ/v7J6zrFm5DH4XFv7eh9K
GJFEdoda0aJlRZ+7vrKRL2f8VubVVhR+POXG6zY22t/G/j47uhWVjV8/YTXI
RpKfSw9mNraivz53nY8pcpBHuLfnbJs2ZHE6RPKkCweBLi81w+I3eqtgs6hp
nIPOvHcJpi3uQAE3vUbYclyks2PvQuF1HejHrS/af5dw0UCTQdaMcQeif/cr
Yq/nogsT8xomj3Wg8xKnP545yEVXNxfPH0vqQPnbp8tE47gooFQtlbu2E61M
LF5ls5SHtluLo/6tnWjc7vUmDz0emssaqWZbdaKNzuEX3Ex46N6cyuFez07k
HxW0dI4LDz008zLoyOtEo3c+P3wXz0Nx1b++1Rt1oa3jco9nKfKR05ES+7p9
XSjqVMoeVQ0+WjyURmqOdqErf78tkVvHR6/mBcz7EdCFFiwqYUfv4aNUm3WH
vlZ0IV1OoeaCW3yU1xrSX2DZjczD9H17OXzkfcbb+6NzNzL4JTXNGuEjw+nj
0vkXupHM6ETGF2EBKlqA1r6P7EY7GnOvLlQSoDIn/pWs5m7E/jK5ysBUgOrZ
O+a+dupB+oUP1s6NFiASpWVy06MHpSbeOQovBEh855zrDjd60CHWa68DKQIE
qaV/FeJ7ED/mpd6aQgFKdkfsoM4elLQgvvdihwB9WaS2xGWwB53+02Kezxag
jrpJhy3CvSjKZ8iqa0CAmOvzfv1b2Is6n5Vr/hQi6Mb4urJTjr1IY77WjPkC
gp4mzxPZdq4XiY7devhMg6D3dkObF1/rRaN44G7NSoL4hem5LbG96HwQvtey
iaD9N7Vfmbf3osol0XQ/G4LOr5vbpUV60RazXtEWO4KCe/vmz5rpRe12Q1qK
zgSVbkuIKFBjobtq3B69swStklx4S+cwC3kaaQZN3yLIrGC6SNyNhbpW+O52
vkvQUbe2SZYPC2m2tzHehBAUXR19IfYpC+1qVn34K5qg2RGMozJtLKSUMrcQ
pxKkbjocy+OxkIaREW1FFkEGY7Ut5ZMs5B92XP1KLkHuB0L2XVftQ7NU0ttz
CglqnS+xdehQH/I/cZT/vpKgsSqOb9XpPnR3l0PU8hqC5K6V5yV59aGgfTXC
fvUEbe+6tdb5SR+KkNecKGsmyPnhUTeU3IeKq9tuFbQR5Gu8NUklvw+tzs0s
ethBUPYroUX1zX1opd2bTV29BFXZtttn9Pch9S2RngfZBLHFCqPujfch9HSt
bXY/QSJ5MT9PiLNRMW11C49HkNppL1kTZTbqrz8sNIcQpK96cJe6NhvNN0sr
FR4kyKpy4+0pfTb6c2aFRtsQQXdWjQrlHmCj9UsDP+iNEnT10o7lrFNsNB2x
2KVmjKCTOMaa6c1GTkOHV2z/R+VvzoCf6X024r8Pkooep+LbszXJ8xl1/ZTy
nLIJgjY+iqx/lc5Gr0/mKfyYJEirnTPdUMRGElvWb86aIkhR03DZnFpKn0PQ
lXPTBM05G7JvQzcbfTL8WT53hqDR3G6f48NsNMw/vdyXYtb0+sRHszjo5cIv
cZUUN5jeqS1jcpDx4iCtvxR/CW6bHNPkINHOa8VTFOc2rNbU0ucgie43br8p
TlDz37vfjIP8LDRXRlMcfuyXV9AhDtov2Da9mmL/NO1X7105aM6CW13xlJ4L
oz7VbB8O4nbeaCaUXufNNeOKDzgovJbep0CxZcCSpTviOKhac+lcFSo+o6pL
e65kclBoFmvLP8qPtcxvV94Uc1B0a3xYFuXXosNqL5vqOGjyVe2k6V+qPl65
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
5SS54zWb3uycUFeCqdX3////3cL/AY29SDo=
          "]]}, Annotation[#, "Charting`Private`Tag$5154#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
y/8ASBmK2w==
          "]]}, Annotation[#, "Charting`Private`Tag$5154#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         TagBox["x", HoldForm], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"3", " ", 
           TagBox["x", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802186540462332*^9, 3.802186634333634*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c2e29358-141a-4437-bbff-6b1981baf6d7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["3. GANs for text generation", "Section",
 CellChangeTimes->{{3.803572048469149*^9, 
  3.803572063203541*^9}},ExpressionUUID->"a36998d4-065e-45fa-bdcd-\
cd1ad3d8672f"],

Cell[CellGroupData[{

Cell["Complete project work", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}, {3.802187387379855*^9, 
  3.802187429405521*^9}},ExpressionUUID->"caacebfb-419d-440c-b7aa-\
51a88439c458"],

Cell["\<\
<describe ideas or arguments in a clear narrative format. explain how the \
topic/idea is studied and how it is implemented in the Wolfram language codes>\
\>", "Text",
 CellChangeTimes->{{3.8021862859717093`*^9, 3.8021862866993*^9}, {
  3.802186780928506*^9, 
  3.802186861789569*^9}},ExpressionUUID->"aaaa7627-b177-492c-9708-\
ecc8c98df024"],

Cell[TextData[{
 "<",
 StyleBox["one-line text, explaining the code only",
  FontSlant->"Italic"],
 "> Plot several functions with a legend:"
}], "CodeText",
 CellChangeTimes->{{3.802186292108103*^9, 3.802186294360371*^9}, {
  3.8021865517803793`*^9, 3.802186579280602*^9}, {3.802186616084752*^9, 
  3.802186616372116*^9}, {3.802186713252631*^9, 
  3.802186721292982*^9}},ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-\
36eca977b547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.802186311848963*^9, 3.802186317409884*^9}, {
   3.802186504598793*^9, 3.802186537669526*^9}, 3.802186633589818*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5154#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk4VN8fxxkq2QaZsaa0IJUWqXyj80mopJIsLUSkVYpKi61FaBNCkSKl
ZF+iIo5QpMiWrNnHjFkOspT1d3//zHlez733ue/P+7Pce+4z6k5nLV1oQkJC
BdTP/1cRLF7VrXd9c1Xh/9fQzUs5hZvUHjqgH2aLVJUenkXjGauONoWdRSww
ZZWG+aFe+RN/c6l12bZpYZewB6jZ1L84gVqXq//h24fGop8OYZpPw2IRvfDQ
XN/76cjSVan5cVg62pm8/vgCX4xCh+yyI8Mwirtq96kDfqBNn83Ejc5Xo/VN
bzNPX25HMvWvfmx4WI2uBecEiGa0o54uWsTK7GrkZPoH+/S1o2Ch/AVKf6pR
z4YxEFvegbo2Ldcb8KhBO5esim183IGCsiQcn3nUIgsVCZ6teydqiP2eM+5e
jy56Xt/MYHSj5DQtr4HQeiR6QCc8W6cbXSvwB1ZmPer4cqps8/ZutKzF4FvN
YD1KH/vgqOLVjbyZqR2J7j8RCZyJ6m/vRovv35ewdW9AnZd6t3xL6EHnru4+
kn2uEfUOuB/pV2chMzeDRLGQRmT+dq7M9Y0stNhJm9inNyIJ0ZJztD0s1LBj
to+YoBFl/XIYKvViIUOlwsf2p5uQ3DztWNN6FhJ/v7J6zrFm5DH4XFv7eh9K
GJFEdoda0aJlRZ+7vrKRL2f8VubVVhR+POXG6zY22t/G/j47uhWVjV8/YTXI
RpKfSw9mNraivz53nY8pcpBHuLfnbJs2ZHE6RPKkCweBLi81w+I3eqtgs6hp
nIPOvHcJpi3uQAE3vUbYclyks2PvQuF1HejHrS/af5dw0UCTQdaMcQeif/cr
Yq/nogsT8xomj3Wg8xKnP545yEVXNxfPH0vqQPnbp8tE47gooFQtlbu2E61M
LF5ls5SHtluLo/6tnWjc7vUmDz0emssaqWZbdaKNzuEX3Ex46N6cyuFez07k
HxW0dI4LDz008zLoyOtEo3c+P3wXz0Nx1b++1Rt1oa3jco9nKfKR05ES+7p9
XSjqVMoeVQ0+WjyURmqOdqErf78tkVvHR6/mBcz7EdCFFiwqYUfv4aNUm3WH
vlZ0IV1OoeaCW3yU1xrSX2DZjczD9H17OXzkfcbb+6NzNzL4JTXNGuEjw+nj
0vkXupHM6ETGF2EBKlqA1r6P7EY7GnOvLlQSoDIn/pWs5m7E/jK5ysBUgOrZ
O+a+dupB+oUP1s6NFiASpWVy06MHpSbeOQovBEh855zrDjd60CHWa68DKQIE
qaV/FeJ7ED/mpd6aQgFKdkfsoM4elLQgvvdihwB9WaS2xGWwB53+02Kezxag
jrpJhy3CvSjKZ8iqa0CAmOvzfv1b2Is6n5Vr/hQi6Mb4urJTjr1IY77WjPkC
gp4mzxPZdq4XiY7devhMg6D3dkObF1/rRaN44G7NSoL4hem5LbG96HwQvtey
iaD9N7Vfmbf3osol0XQ/G4LOr5vbpUV60RazXtEWO4KCe/vmz5rpRe12Q1qK
zgSVbkuIKFBjobtq3B69swStklx4S+cwC3kaaQZN3yLIrGC6SNyNhbpW+O52
vkvQUbe2SZYPC2m2tzHehBAUXR19IfYpC+1qVn34K5qg2RGMozJtLKSUMrcQ
pxKkbjocy+OxkIaREW1FFkEGY7Ut5ZMs5B92XP1KLkHuB0L2XVftQ7NU0ttz
CglqnS+xdehQH/I/cZT/vpKgsSqOb9XpPnR3l0PU8hqC5K6V5yV59aGgfTXC
fvUEbe+6tdb5SR+KkNecKGsmyPnhUTeU3IeKq9tuFbQR5Gu8NUklvw+tzs0s
ethBUPYroUX1zX1opd2bTV29BFXZtttn9Pch9S2RngfZBLHFCqPujfch9HSt
bXY/QSJ5MT9PiLNRMW11C49HkNppL1kTZTbqrz8sNIcQpK96cJe6NhvNN0sr
FR4kyKpy4+0pfTb6c2aFRtsQQXdWjQrlHmCj9UsDP+iNEnT10o7lrFNsNB2x
2KVmjKCTOMaa6c1GTkOHV2z/R+VvzoCf6X024r8Pkooep+LbszXJ8xl1/ZTy
nLIJgjY+iqx/lc5Gr0/mKfyYJEirnTPdUMRGElvWb86aIkhR03DZnFpKn0PQ
lXPTBM05G7JvQzcbfTL8WT53hqDR3G6f48NsNMw/vdyXYtb0+sRHszjo5cIv
cZUUN5jeqS1jcpDx4iCtvxR/CW6bHNPkINHOa8VTFOc2rNbU0ucgie43br8p
TlDz37vfjIP8LDRXRlMcfuyXV9AhDtov2Da9mmL/NO1X7105aM6CW13xlJ4L
oz7VbB8O4nbeaCaUXufNNeOKDzgovJbep0CxZcCSpTviOKhac+lcFSo+o6pL
e65kclBoFmvLP8qPtcxvV94Uc1B0a3xYFuXXosNqL5vqOGjyVe2k6V+qPl65
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
5SS54zWb3uycUFeCqdX3////3cL/AY29SDo=
          "]]}, Annotation[#, "Charting`Private`Tag$5154#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
y/8ASBmK2w==
          "]]}, Annotation[#, "Charting`Private`Tag$5154#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         TagBox["x", HoldForm], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"3", " ", 
           TagBox["x", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802186540462332*^9, 3.802186634333634*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6757ae53-b91e-4615-8826-3385e5058b27"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.80218634588871*^9}},
 CellTags->"Keywords",
 CellID->442466898,ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490"],

Cell[CellGroupData[{

Cell["<Keyword1>", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 
  3.80218672773493*^9}},ExpressionUUID->"5813e785-8d21-454e-ac75-\
5f3913597a2c"],

Cell["Keyword2", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 
  3.802186395898718*^9}},ExpressionUUID->"995c8064-6859-4e41-b6cd-\
65ce27221847"],

Cell["....", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 
  3.8021864027417173`*^9}},ExpressionUUID->"bedccd35-f9c3-46ac-ac87-\
d418e441e604"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acknowledgment", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186368848865*^9}},
 CellTags->"Keywords",
 CellID->1836614011,ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac"],

Cell[TextData[{
 StyleBox["Mentor",
  FontWeight->"Bold"],
 ": <Mentor first name and last name>"
}], "Text",
 CellChangeTimes->{{3.8021864691325283`*^9, 
  3.8021864869063177`*^9}},ExpressionUUID->"006d71ed-241c-4cf5-8ee6-\
00d91fa914f6"],

Cell["<text>", "Text",
 CellChangeTimes->{{3.802186374730517*^9, 3.802186375456683*^9}, {
  3.802186730191574*^9, 
  3.802186731523522*^9}},ExpressionUUID->"279e8012-b716-44b0-8c1c-\
3c37e92e2ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186360670889*^9}},
 CellTags->"Keywords",
 CellID->1137237116,ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c"],

Cell[CellGroupData[{

Cell["<Ref1>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186383585804*^9}, {
  3.802186733203268*^9, 
  3.8021867345244904`*^9}},ExpressionUUID->"bac34aab-5f3c-4c18-85c2-\
373b47cd99f0"],

Cell["<Ref2>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186385191455*^9}, {
  3.802186737059086*^9, 
  3.802186738383222*^9}},ExpressionUUID->"e5e467fd-9b3a-49e2-8d1e-\
d3011b1f02df"],

Cell["...", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 
  3.802186386161345*^9}},ExpressionUUID->"40a463f9-c8f1-43ba-810b-\
4f669ff2ca85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 92}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontWeight -> Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2020", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontSize -> 40]}], CellFrameMargins -> 10, 
   Background -> 
   RGBColor[0.3176470588235294, 0.49019607843137253`, 0.0784313725490196]]},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (June 30, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"74834422-4cdc-4ef9-b0b5-dd35f3bfcb5b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Keywords"->{
  Cell[415705, 7635, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
   CellTags->"Keywords",
   CellID->442466898],
  Cell[416473, 7662, 198, 3, 67, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
   CellTags->"Keywords",
   CellID->1836614011],
  Cell[417150, 7685, 194, 3, 67, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
   CellTags->"Keywords",
   CellID->1137237116]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Keywords", 418902, 7738}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 270, 4, 98, "Title",ExpressionUUID->"7f5a763c-439b-409d-85d9-b001eb779415"],
Cell[695, 21, 404, 6, 31, "Author",ExpressionUUID->"17c07b4e-577f-4fd8-bb63-78ea3b522bfe"],
Cell[1102, 29, 218, 4, 31, "Affiliation",ExpressionUUID->"96c2b484-c964-462d-9af7-4e5a7606bcb7"],
Cell[1323, 35, 1045, 19, 177, "Abstract",ExpressionUUID->"bd44fc5d-a918-4ecb-a444-9098256d0564"],
Cell[CellGroupData[{
Cell[2393, 58, 245, 4, 67, "Section",ExpressionUUID->"dde3b2d2-a587-4e33-b62b-89e06e4d8b0b"],
Cell[2641, 64, 2713, 42, 390, "Text",ExpressionUUID->"2c2380b2-0547-4128-a721-db738b29388d"],
Cell[5357, 108, 205, 4, 30, "Input",ExpressionUUID->"9e3689e3-6922-4c4d-9890-4ed26eecaa9f"],
Cell[5565, 114, 195, 3, 40, "Text",ExpressionUUID->"72ef97ee-fa33-410c-b8b5-1e4b801373cb"],
Cell[5763, 119, 638, 10, 84, "Text",ExpressionUUID->"f0607e75-b5d5-48b5-8f04-48e72c11868a"],
Cell[6404, 131, 3099, 67, 307, "Code",ExpressionUUID->"e4a17ea5-922c-40ac-8273-3ee490033136"],
Cell[9506, 200, 198, 3, 40, "Text",ExpressionUUID->"cb452640-fa04-4f58-aba2-e9f31892de70"],
Cell[9707, 205, 672, 12, 58, "Text",ExpressionUUID->"01814202-b98d-44a7-ba70-58f2061647ea"],
Cell[10382, 219, 764, 18, 91, "Code",ExpressionUUID->"0ce0e9c0-128d-4541-9363-6ee4237fcbaf"],
Cell[11149, 239, 566, 10, 58, "Text",ExpressionUUID->"62b8ff3e-4e9c-492c-b918-f8eafea12fec"],
Cell[11718, 251, 2366, 55, 319, "Code",ExpressionUUID->"10c395d8-e2dc-4999-a0f2-ad9d0371dd37"],
Cell[14087, 308, 188, 3, 40, "Text",ExpressionUUID->"00e7bd1e-1ade-4e78-9539-43b0e561ab35"],
Cell[14278, 313, 299, 4, 35, "Text",ExpressionUUID->"2c044039-ed39-4579-8851-f414913db1ad"],
Cell[CellGroupData[{
Cell[14602, 321, 1253, 31, 110, "Code",ExpressionUUID->"12447e7c-9567-42f5-adb8-bc6e2af1f34f"],
Cell[15858, 354, 556, 10, 34, "Output",ExpressionUUID->"8ab2b106-82bd-4513-b6e7-4ebdb4ddf63e"]
}, Open  ]],
Cell[16429, 367, 332, 7, 35, "Text",ExpressionUUID->"60ee787c-9893-4f22-aee8-b500e417a064"],
Cell[CellGroupData[{
Cell[16786, 378, 438, 10, 91, "Code",ExpressionUUID->"d33476e3-78ec-4e3a-b4ca-a4f29c467615"],
Cell[17227, 390, 10830, 220, 179, "Output",ExpressionUUID->"096e0d2b-0a0b-4875-a948-fa51886eecd7"],
Cell[28060, 612, 11331, 231, 179, "Output",ExpressionUUID->"954669e0-2a41-44bb-8ff7-7a5b85d47a14"]
}, Open  ]],
Cell[39406, 846, 279, 5, 40, "Text",ExpressionUUID->"39b915a9-0169-4b7b-aaae-10212a458ab2"],
Cell[39688, 853, 758, 13, 58, "Text",ExpressionUUID->"f3ae372d-2b11-444b-a309-93451b07ec2a"],
Cell[40449, 868, 1261, 32, 110, "Code",ExpressionUUID->"7e99eca6-3716-4d2a-aff6-71d529f2210a"],
Cell[41713, 902, 391, 10, 81, "Text",ExpressionUUID->"498a9a1a-807a-4a2d-bc32-f8c5518e4613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42141, 917, 597, 8, 65, "Subtitle",ExpressionUUID->"470235e8-9119-461d-9270-f9719c71d483"],
Cell[CellGroupData[{
Cell[42763, 929, 1740, 36, 128, "Section",ExpressionUUID->"c3bfde40-8d62-4960-aadc-b6e2debc5451"],
Cell[CellGroupData[{
Cell[44528, 969, 272, 5, 30, "Input",ExpressionUUID->"a98cd7f0-a563-4599-a52c-67c4d631848a"],
Cell[44803, 976, 37476, 721, 187, "Output",ExpressionUUID->"d9d88b17-8625-453b-9046-3f0630a404d2"]
}, Open  ]],
Cell[82294, 1700, 421, 8, 35, "Text",ExpressionUUID->"d2d47e6a-b7fa-42eb-abae-dccd454b56fd"],
Cell[CellGroupData[{
Cell[82740, 1712, 165, 3, 54, "Subsection",ExpressionUUID->"26554757-c4d6-46ef-9b02-b2bb84e620df"],
Cell[82908, 1717, 366, 7, 35, "Text",ExpressionUUID->"d6b8b247-d2bf-43c0-b8a2-efa2a7ebd587"],
Cell[83277, 1726, 1080, 28, 89, "Input",ExpressionUUID->"7e4e4dea-f6b9-457e-bf06-d5d4883b5a84",
 InitializationCell->True],
Cell[84360, 1756, 176770, 2904, 449, "Input",ExpressionUUID->"dffd264c-edd8-4313-9891-99bb720eed39"],
Cell[261133, 4662, 2657, 71, 110, "Input",ExpressionUUID->"d66da0d2-7f7c-4526-8bda-dfb5e25bbc46",
 InitializationCell->True],
Cell[263793, 4735, 216, 5, 35, "Text",ExpressionUUID->"6caeaea7-5ac6-47bd-bd78-dc23a552c606"],
Cell[CellGroupData[{
Cell[264034, 4744, 245, 4, 30, "Input",ExpressionUUID->"9c2955e8-4123-45b0-bddd-4d27a0e75fda"],
Cell[264282, 4750, 502, 9, 34, "Output",ExpressionUUID->"05100554-02ca-4080-8164-fa229a41f837"]
}, Open  ]],
Cell[264799, 4762, 273, 6, 35, "Text",ExpressionUUID->"50b55436-ed22-4272-809f-5b8937f2e1e3"],
Cell[CellGroupData[{
Cell[265097, 4772, 813, 20, 30, "Input",ExpressionUUID->"003f0d52-a941-47dd-82c0-66101f64fb9d"],
Cell[265913, 4794, 384, 8, 34, "Output",ExpressionUUID->"86e1028b-3516-4809-b6a5-c87aaddfce16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266334, 4807, 687, 16, 52, "Input",ExpressionUUID->"ea5bb249-bf52-44fa-bd65-f28beee30d84"],
Cell[267024, 4825, 27025, 592, 240, "Output",ExpressionUUID->"b2e82df9-f46a-4520-b05f-87269f6d46d2"]
}, Open  ]],
Cell[294064, 5420, 396, 8, 35, "Text",ExpressionUUID->"22ef2bc9-454b-41e7-a3fb-40e2254caccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294497, 5433, 164, 3, 54, "Subsection",ExpressionUUID->"3fc42dfe-605e-44ea-884f-793281e4d3f6"],
Cell[294664, 5438, 429, 10, 38, "CodeText",ExpressionUUID->"b6cf8fe9-f994-4c80-b699-4acc808ada53"],
Cell[CellGroupData[{
Cell[295118, 5452, 650, 17, 30, "Input",ExpressionUUID->"67fcfee9-b5f6-4707-8cd4-267a0ba5567d"],
Cell[295771, 5471, 58959, 1049, 233, "Output",ExpressionUUID->"c2e29358-141a-4437-bbff-6b1981baf6d7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[354769, 6525, 172, 3, 67, "Section",ExpressionUUID->"a36998d4-065e-45fa-bdcd-cd1ad3d8672f"],
Cell[CellGroupData[{
Cell[354966, 6532, 265, 4, 53, "Section",ExpressionUUID->"caacebfb-419d-440c-b7aa-51a88439c458"],
Cell[355234, 6538, 353, 7, 35, "Text",ExpressionUUID->"aaaa7627-b177-492c-9708-ecc8c98df024"],
Cell[355590, 6547, 429, 10, 38, "CodeText",ExpressionUUID->"07e2c6e1-5e20-4cf8-b6d9-36eca977b547"],
Cell[CellGroupData[{
Cell[356044, 6561, 650, 17, 30, "Input",ExpressionUUID->"0463416d-61d3-4c5a-84ec-bcb5d883417c"],
Cell[356697, 6580, 58959, 1049, 233, "Output",ExpressionUUID->"6757ae53-b91e-4615-8826-3385e5058b27"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415705, 7635, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
 CellTags->"Keywords",
 CellID->442466898],
Cell[CellGroupData[{
Cell[415920, 7642, 200, 4, 32, "Item",ExpressionUUID->"5813e785-8d21-454e-ac75-5f3913597a2c"],
Cell[416123, 7648, 150, 3, 32, "Item",ExpressionUUID->"995c8064-6859-4e41-b6cd-65ce27221847"],
Cell[416276, 7653, 148, 3, 32, "Item",ExpressionUUID->"bedccd35-f9c3-46ac-ac87-d418e441e604"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[416473, 7662, 198, 3, 67, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
 CellTags->"Keywords",
 CellID->1836614011],
Cell[416674, 7667, 239, 7, 35, "Text",ExpressionUUID->"006d71ed-241c-4cf5-8ee6-00d91fa914f6"],
Cell[416916, 7676, 197, 4, 35, "Text",ExpressionUUID->"279e8012-b716-44b0-8c1c-3c37e92e2ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417150, 7685, 194, 3, 67, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
 CellTags->"Keywords",
 CellID->1137237116],
Cell[CellGroupData[{
Cell[417369, 7692, 199, 4, 32, "Item",ExpressionUUID->"bac34aab-5f3c-4c18-85c2-373b47cd99f0"],
Cell[417571, 7698, 197, 4, 32, "Item",ExpressionUUID->"e5e467fd-9b3a-49e2-8d1e-d3011b1f02df"],
Cell[417771, 7704, 145, 3, 32, "Item",ExpressionUUID->"40a463f9-c8f1-43ba-810b-4f669ff2ca85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

