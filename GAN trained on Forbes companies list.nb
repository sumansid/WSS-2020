(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1002617,      19261]
NotebookOptionsPosition[    994310,      19129]
NotebookOutlinePosition[    994706,      19145]
CellTagsIndexPosition[    994663,      19142]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "**********************************)"}], 
  RowBox[{"(*", 
   RowBox[{"Hyper", "-", 
    RowBox[{"parameters", " ", 
     RowBox[{"(", 
      RowBox[{"to", " ", "be", " ", 
       RowBox[{"tuned", "!"}]}], ")"}]}]}], "*)"}], 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$jensen", "=", "True"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Jensen", " ", "or", " ", "Wasserstein"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$numposfeatures", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"$numlatent", "=", "16"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Dimension", " ", "of", " ", "the", " ", "latent", " ", "space"}], 
     "*)"}], 
    RowBox[{"$numhiddens", "=", "128"}], ";", 
    RowBox[{"(*", 
     RowBox[{"CNN", " ", "Hidden", " ", "Layers"}], "*)"}], 
    RowBox[{"$depth", "=", "2"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "CNN"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"$kernelSize", "=", "5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Look", " ", "at", " ", "five", " ", "grams", " ", "of", " ", 
      "characters"}], "*)"}], "\n", 
    RowBox[{"$batchsize", "=", "32"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"$discriminatorTerminalTokensQ", "=", "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"$generatorTerminalTokensQ", "=", "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"$updateDiscriminator", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"Other", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ngramInfo", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{3.803397223525634*^9},
 CellLabel->
  "In[3651]:=",ExpressionUUID->"cbb771cd-a064-4153-827d-36ae4a11a959"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "a", " ", "folder", " ", "name", " ", "to", " ", "dump", " ", 
    "intermediate", " ", "results", " ", "into", " ", "it"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$SAVEDIR", "=", "\"\</Users/sumansigdel/documents/Forbes\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$device", "=", "\"\<CPU\>\""}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8033972332040462`*^9, 3.803397234064693*^9}},
 CellLabel->
  "In[3659]:=",ExpressionUUID->"be28ed90-1b71-430c-b6af-f28e0bb0c45d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"companiesData", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/sumansigdel/Downloads/1521_2748_bundle_archive/Forbes Top2000 \
.csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"companyNames", " ", "=", " ", 
   RowBox[{"Flatten", "@", "companiesData"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.80339725734501*^9, 3.803397308616791*^9}},
 CellLabel->
  "In[3661]:=",ExpressionUUID->"99229ea1-c984-40c4-8ad7-d730be1b7aa7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalizeText", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"ToLowerCase", " ", "@", " ", 
    RowBox[{"RemoveDiacritics", " ", "@", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"s", ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"WordBoundary", "~~", 
           RowBox[{"(", 
            RowBox[{"WordCharacter", ".."}], ")"}], "~~", "\"\<.\>\""}], 
          "\[RuleDelayed]", "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Remove", " ", "\"\<mr.\>\""}], ",", "\"\<jr.\>\"", ",", 
           "..."}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<\[Mars]\>\"", "|", "\"\<\[Venus]\>\""}], "\[Rule]", 
          "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "gender", " ", "hints"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<\[Hyphen]\>\"", "|", "\"\<-\>\"", "|", "\"\<'\>\""}], 
          "\[Rule]", "\"\< \>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "very", " ", "rare", " ", "characters"}], 
          "*)"}], "\n", "\t", 
         RowBox[{"DigitCharacter", "\[Rule]", "\"\<\>\""}], " ", ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "very", " ", "rare", " ", "characters"}], 
          "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<(\>\"", "|", "\"\<)\>\""}], " ", "\[Rule]", " ", 
          "\"\<\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "Brackets"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"\"\<%\>\"", "|", "\"\<:\>\""}], " ", "\[Rule]", " ", 
          "\"\<\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<[\>\"", "|", "\"\<]\>\""}], "\[Rule]", "\"\<\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<!\>\"", "|", "\"\<&\>\""}], "\[Rule]", "\"\<\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\</\>\"", "|", "\"\<+\>\""}], "\[Rule]", "\"\<\>\""}]}], 
        "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"Remove", " ", "Colons", " ", "and", " ", "%"}], "*)"}], 
      "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.803398699298315*^9, 3.80339874763874*^9}},
 CellLabel->
  "In[3663]:=",ExpressionUUID->"64a4ec3e-a290-4efe-800b-30980c49e2e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizedCompanyNames", " ", "=", " ", 
   RowBox[{"normalizeText", "@", "companyNames"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8033973098483467`*^9, 3.803397328107749*^9}},
 CellLabel->
  "In[3666]:=",ExpressionUUID->"4bbf2ab3-b134-49ad-8992-dc7a2dfb77be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"counts", "=", 
   RowBox[{"Counts", "[", 
    RowBox[{"StringLength", "/@", "normalizedCompanyNames"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "will", " ", "use", " ", "this", " ", "to", " ", "generate", 
    " ", "a", " ", "realistic", " ", "length"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"characters", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Characters", "@", "normalizedCompanyNames"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"characters2", "=", 
   RowBox[{"If", "[", 
    RowBox[{"$discriminatorTerminalTokensQ", ",", 
     RowBox[{"Join", "[", 
      RowBox[{"characters", ",", 
       RowBox[{"{", 
        RowBox[{"StartOfString", ",", "EndOfString"}], "}"}]}], "]"}], ",", 
     "characters"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.803397352855475*^9, 3.803397353754939*^9}},
 CellLabel->
  "In[3664]:=",ExpressionUUID->"ffe8d753-2155-496a-b00d-500247e50b9f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.803401886434111*^9, 3.803401890435911*^9}, {
  3.803402011290935*^9, 3.803402014164019*^9}},
 CellLabel->
  "In[3620]:=",ExpressionUUID->"32894e20-86b2-43b7-8a94-97db7edd973e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netpreproc", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Characters\>\"", ",", "characters2", ",", 
      RowBox[{"\"\<IgnoreCase\>\"", "\[Rule]", "True"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[3667]:=",ExpressionUUID->"206386f3-f58f-4a64-9017-170f18a63cac"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.803398659493636*^9, 3.8033986722286787`*^9}, 
   3.803398761405794*^9},
 CellLabel->
  "In[3504]:=",ExpressionUUID->"c08d5327-d94f-407e-8353-e66884c6a87a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonlinearityGenerator", "=", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", ">", "0"}], ",", "#", ",", 
       RowBox[{"0.2", "*", "#"}]}], "]"}], "&"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nonlinearityDiscriminator", "=", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", ">", "0"}], ",", "#", ",", 
       RowBox[{"0.2", "*", "#"}]}], "]"}], "&"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.80339735656691*^9, 3.8033973874560127`*^9}},
 CellLabel->
  "In[3668]:=",ExpressionUUID->"6619122e-0413-45e1-8cfe-77eef070df38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"batchnorm", "=", 
   RowBox[{"BatchNormalizationLayer", "[", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"\"\<Scaling\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "*)"}], 
    RowBox[{
     RowBox[{"\"\<Scaling\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Biases\>\"", "\[Rule]", "0"}], ",", 
     RowBox[{"\"\<Interleaving\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"LearningRateMultipliers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Scaling\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Biases\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"_", "\[Rule]", "1"}]}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"instancenorm", "=", 
   RowBox[{"NormalizationLayer", "[", 
    RowBox[{"1", ",", 
     RowBox[{"\"\<Scaling\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[3670]:=",ExpressionUUID->"b5b724f1-0e45-4414-9598-4b012e5e7b26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalizationGenerator", "=", "batchnorm"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"normalizationDiscriminator", "=", "batchnorm"}], ";"}]}], "Input",
 CellLabel->
  "In[3672]:=",ExpressionUUID->"e2997b19-1019-4362-86b5-8706fd60bf9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convolutionBlock", "[", 
    RowBox[{"n_", ",", "args___"}], "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", "$kernelSize", "}"}], ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"PaddingSize", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"$kernelSize", "-", "1"}], ")"}], "/", "2"}], ")"}]}], 
        ",", 
        RowBox[{"\"\<Interleaving\>\"", "\[Rule]", "True"}], ",", "args"}], 
       "]"}], ",", "normalizationDiscriminator", ",", 
      "nonlinearityDiscriminator", ",", 
      RowBox[{"DropoutLayer", "[", "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[3674]:=",ExpressionUUID->"1b7740ee-11f3-4efd-a6bf-9ef3ece33a65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"textDiscriminator", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"(*", 
       RowBox[{"Preprocessing", ":", 
        RowBox[{
        "only", " ", "keep", " ", "the", " ", "maximum", " ", "values"}]}], 
       "*)"}], 
      RowBox[{
       RowBox[{"\"\<keep max only\>\"", "\[Rule]", 
        RowBox[{"NetGraph", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AggregationLayer", "[", 
             RowBox[{"Max", ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", 
            RowBox[{"ThreadingLayer", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#1", "\[GreaterEqual]", 
                  RowBox[{"#2", "-", "1.*^-7"}]}], ",", "#1", ",", "0"}], 
                "]"}], "&"}], ",", 
              RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], ",", "1"}], 
             "}"}], "\[Rule]", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<conv.\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "\[Rule]", 
           RowBox[{"convolutionBlock", "[", "$numhiddens", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "$depth"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<aggregate\>\"", "\[Rule]", 
        RowBox[{"AggregationLayer", "[", 
         RowBox[{"Mean", ",", "1"}], "]"}]}], ",", 
       RowBox[{"\"\<dropout\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<classify\>\"", "\[Rule]", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"\"\<Real\>\"", ",", 
          RowBox[{"\"\<Weights\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{"$jensen", ",", 
         RowBox[{"\"\<logit\>\"", "\[Rule]", "LogisticSigmoid"}], ",", 
         "Nothing"}], "]"}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", 
        RowBox[{"Length", "[", "characters2", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[3675]:=",ExpressionUUID->"5d147def-db2a-4de6-b523-e3787e611155"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"textGenerator", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"$generatorTerminalTokensQ", ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Append", "/", "Prepend"}], " ", 
          RowBox[{"EOS", "/", "SOS"}], " ", "feature", " ", "vectors"}], 
         "*)"}], 
        RowBox[{"\"\<add eos/sos latent\>\"", "\[Rule]", 
         RowBox[{"NetGraph", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ArrayLayer", "[", "]"}], ",", 
             RowBox[{"AppendLayer", "[", "]"}], ",", 
             RowBox[{"ArrayLayer", "[", "]"}], ",", 
             RowBox[{"PrependLayer", "[", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], ",", "1"}], 
               "}"}], "\[Rule]", "2"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "4"}]}], "}"}]}], 
          "]"}]}], ",", "Nothing"}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Core", " ", "deep", " ", "net"}], "*)"}], 
      RowBox[{"Sequence", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<conv.\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], "\[Rule]", 
          RowBox[{"convolutionBlock", "[", "$numhiddens", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "$depth"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{"$generatorTerminalTokensQ", ",", 
        RowBox[{"(*", 
         RowBox[{"Remove", " ", 
          RowBox[{"EOS", "/", "SOS"}], " ", "high", " ", "level", " ", 
          "features"}], "*)"}], 
        RowBox[{"\"\<remove eos/sos prediction\>\"", "\[Rule]", 
         RowBox[{"NetChain", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"SequenceRestLayer", "[", "]"}], ",", 
            RowBox[{"SequenceMostLayer", "[", "]"}]}], "}"}], "]"}]}], ",", 
        "Nothing"}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Classifier", " ", 
        RowBox[{"(", 
         RowBox[{"of", " ", "characters"}], ")"}]}], "*)"}], 
      RowBox[{"\"\<classify\>\"", "\[Rule]", 
       RowBox[{"NetMapOperator", "@", 
        RowBox[{"LinearLayer", "[", 
         RowBox[{"Length", "[", "characters", "]"}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"\"\<Weights\>\"", "\[Rule]", "0"}]}], "*)"}], "]"}]}]}], 
      ",", 
      RowBox[{"\"\<squash\>\"", "\[Rule]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{"$discriminatorTerminalTokensQ", ",", 
        RowBox[{"\"\<add eos/sos onehot proba\>\"", "\[Rule]", 
         RowBox[{"NetGraph", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"(*", 
             RowBox[{"Catenate", " ", "zero", " ", "proba", " ", "for", " ", 
              RowBox[{"EOS", "/", "SOS"}], " ", "inside", " ", "the", " ", 
              "generated", " ", "text"}], "*)"}], 
            RowBox[{
             RowBox[{"PaddingLayer", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Append", "/", "Prepend"}], " ", "proba", " ", "of", 
               " ", "1", " ", "for", " ", 
               RowBox[{"EOS", "/", "SOS"}], " ", "at", " ", "the", " ", 
               RowBox[{"end", "/", "beginning"}], " ", "of", " ", "the", " ", 
               "generated", " ", "text", " ", 
               RowBox[{"(", 
                RowBox[{
                "to", " ", "be", " ", "in", " ", "accordance", " ", "with", 
                 " ", "the", " ", "discriminator"}], ")"}]}], "*)"}], 
             RowBox[{"ArrayLayer", "[", 
              RowBox[{
               RowBox[{"\"\<Array\>\"", "\[Rule]", 
                RowBox[{"UnitVector", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", "characters2", "]"}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "characters2", "]"}], "-", "1"}]}], 
                 "]"}]}], ",", 
               RowBox[{"LearningRateMultipliers", "\[Rule]", "None"}]}], 
              "]"}], ",", 
             RowBox[{"PrependLayer", "[", "]"}], ",", 
             RowBox[{"ArrayLayer", "[", 
              RowBox[{
               RowBox[{"\"\<Array\>\"", "\[Rule]", 
                RowBox[{"UnitVector", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", "characters2", "]"}], ",", 
                  RowBox[{"Length", "[", "characters2", "]"}]}], "]"}]}], ",", 
               RowBox[{"LearningRateMultipliers", "\[Rule]", "None"}]}], 
              "]"}], ",", 
             RowBox[{"AppendLayer", "[", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "3"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "5"}]}], "}"}]}], 
          "]"}]}], ",", "Nothing"}], "]"}]}], "|>"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "$numlatent"}], "}"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"netpostproc", "=", 
         RowBox[{"NetDecoder", "[", "netpreproc", "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Capitalize", " ", "the", " ", "decoded", " ", 
         RowBox[{"(", 
          RowBox[{"lower", "-", "case"}], ")"}], " ", "text"}], "*)"}], 
       RowBox[{"NetDecoder", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Function\>\"", ",", 
          RowBox[{"Function", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"netpostproc", "[", "#", "]"}], ",", 
             RowBox[{
              RowBox[{"WordBoundary", "~~", 
               RowBox[{"c", ":", "WordCharacter"}]}], "\[RuleDelayed]", 
              RowBox[{"ToUpperCase", "[", "c", "]"}]}]}], "]"}], "]"}]}], 
         "}"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.803398374491304*^9},
 CellLabel->
  "In[3676]:=",ExpressionUUID->"fe6ccfac-b292-42b3-8076-c3e659995258"],

Cell[BoxData[
 TemplateBox[{
  "NetDecoder", "extfwarn", 
   "\"Specified function \\!\\(\\*RowBox[{RowBox[{\\\"StringReplace\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"&\\\"}]\\) appears to require definitions of external \
symbols (\\!\\(\\*TemplateBox[List[\\\", \\\", \\\"\\\\\\\", \\\\\\\"\\\", \\\
\"c\\\"], \\\"RowWithSeparators\\\"]\\)). Be aware that the definitions and \
values of these symbols will not be retained if the net is saved using \
Export, Put, or DumpSave.\"", 2, 3676, 482, 26207717223377046194, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8033974206235332`*^9, {3.8033980937355137`*^9, 3.8033981091085167`*^9}, 
   3.8033983753508577`*^9, 3.803398772599235*^9, 3.803402025542604*^9, 
   3.803402102229817*^9},
 CellLabel->
  "During evaluation of \
In[3676]:=",ExpressionUUID->"20492806-746c-46cc-9632-e32157474310"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.84, 0.84, 0.84], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "add eos/sos latent" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2051633706], 16}, 
                    NeuralNetworks`AtomT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "3" -> 
                    Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "2" -> 
                    Association[
                    "Type" -> "Append", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[4294967310], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[910924196]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[910924196], 16}, 
                    NeuralNetworks`AtomT]]], "4" -> 
                    Association[
                    "Type" -> "Prepend", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[910924196], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[2051633706]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[910924196], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2051633706], 16}, 
                    NeuralNetworks`AtomT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "4", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{128, 16, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 16, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2051633706]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2095817848]}, 
                    "$WeightsInputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2051633706], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2095817848]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2095817848], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2051633706], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{128, 128, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2095817848]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2066880171]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2066880171]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2066880171], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2095817848], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]]], "remove eos/sos prediction" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "SequenceRest", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[2066880171], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1727121820]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1727121820], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceMost", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1727121820], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1954044444]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1727121820], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2066880171], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{27, 128}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {27}, "$OutputSize" -> 27, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{27}, 
                    NeuralNetworks`RealT]]], "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1954044444], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 27}, 
                    NeuralNetworks`RealT]]], "squash" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 27}, 
                    NeuralNetworks`RealT]]], "add eos/sos onehot proba" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1955451244], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{29}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "4" -> 
                    Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{29}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "1" -> 
                    Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> {{0, 0}, {0, 2}}, "Padding" -> 0., 
                    "$Rank" -> 2, "$InputSize" -> {
                    NeuralNetworks`LengthVar[1954044444], 27}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1954044444], 29}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Prepend", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1954044444], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1718761271]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1954044444], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1718761271], 29}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Append", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1718761271], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1955451244]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1718761271], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1955451244], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "5", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1955451244], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"add eos/sos latent\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"3\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"remove eos/sos prediction\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classify\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    TagBox["NetMapOperator", HoldForm], "[", "LinearLayer", 
                    "]"}], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"squash\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"add eos/sos onehot proba\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "5", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"5\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"expression\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.803398375487468*^9, 3.803398772773549*^9, 
  3.803402025681525*^9, 3.803402102399384*^9},
 CellLabel->
  "Out[3676]=",ExpressionUUID->"370404f3-17fb-44e8-b122-3c832e5305ec"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8033974479988947`*^9, 3.803397453834682*^9}},
 CellLabel->
  "In[3406]:=",ExpressionUUID->"238676a8-d1b3-4234-947b-1659aae99ffe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Generation", " ", "of", " ", "latent", " ", "random"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"latentGeneration", "[", "batchSize_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"len", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"3", ",", 
            RowBox[{"RandomChoice", "[", 
             RowBox[{
              RowBox[{"Values", "[", "counts", "]"}], "\[Rule]", 
              RowBox[{"Keys", "[", "counts", "]"}]}], "]"}]}], "]"}]}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericArray", "[", 
           RowBox[{"#", ",", "\"\<Real32\>\""}], "]"}], "&"}], "@", 
         RowBox[{"Clip", "[", 
          RowBox[{
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"len", ",", "$numlatent"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], ",", 
      "batchSize"}], "]"}]}], ";"}]}]], "Input",
 CellLabel->
  "In[3919]:=",ExpressionUUID->"77d3a5d7-551f-4aa7-b7c1-75c14a4d5835"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomizeOnehot", "[", "onehot_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"$discriminatorTerminalTokensQ", ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"First", "@", "onehot"}], "}"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "*", 
           RowBox[{"Clip", "[", 
            RowBox[{
             RowBox[{"RandomVariate", "[", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0.8", ",", "0.1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.55", ",", "1"}], "}"}]}], "]"}]}], "&"}], ",", 
         RowBox[{"Rest", "@", 
          RowBox[{"Most", "@", "onehot"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Last", "@", "onehot"}], "}"}]}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "*", 
         RowBox[{"Clip", "[", 
          RowBox[{
           RowBox[{"RandomVariate", "[", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0.8", ",", "0.1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "1"}], "}"}]}], "]"}]}], "&"}], ",", 
       "onehot"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[3678]:=",ExpressionUUID->"f33c6601-4517-4e1d-9d78-96ed3777344f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sampleGeneration", "[", "batchSize_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "onehot"}], "}"}], ",", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"normalizedCompanyNames", ",", "batchSize"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onehot", "=", 
       RowBox[{
        RowBox[{"UnitVectorLayer", "[", 
         RowBox[{
          RowBox[{"Length", "[", "characters2", "]"}], ",", 
          RowBox[{"\"\<Input\>\"", "\[Rule]", 
           RowBox[{"{", "Automatic", "}"}]}]}], "]"}], "[", 
        RowBox[{"netpreproc", "[", "s", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericArray", "[", 
         RowBox[{"#", ",", "\"\<Real32\>\""}], "]"}], "&"}], "/@", 
       RowBox[{"Map", "[", 
        RowBox[{"randomizeOnehot", ",", "onehot"}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803401931150723*^9, 3.8034019319493303`*^9}},
 CellLabel->
  "In[3679]:=",ExpressionUUID->"59931907-4a47-4b9c-9332-2f1db02a578e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataGenerator", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Sample\>\"", "\[Rule]", 
         RowBox[{"sampleGeneration", "[", "#BatchSize", "]"}]}], ",", 
        RowBox[{"\"\<Latent\>\"", "\[Rule]", 
         RowBox[{"latentGeneration", "[", "#BatchSize", "]"}]}]}], "|>"}], 
      "]"}], ",", 
     RowBox[{"\"\<RoundLength\>\"", "\[Rule]", 
      RowBox[{"Length", "[", "normalizedCompanyNames", "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803397500818687*^9, 3.803397503225391*^9}},
 CellLabel->
  "In[3680]:=",ExpressionUUID->"f86e2477-1494-403f-8059-ecd085c70c89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gan", "=", 
  RowBox[{"NetGANOperator", "[", 
   RowBox[{"{", 
    RowBox[{"textGenerator", ",", "textDiscriminator"}], "}"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[3681]:=",ExpressionUUID->"a31f8cb0-efc3-4101-8d72-c0933554745c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGANOperator", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Sample\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Latent\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LossReal\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LossFake\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"GeneratedFake\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`FormattingLayers`opart, 
                   NeuralNetworks`Private`FormattingLayers`part, 
                   NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                  
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Generator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Generator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Generator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Generator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Generator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    "SummaryItem"], 
                    Annotation[#, {"Parameters", "Generator"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Discriminator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Discriminator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Discriminator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Discriminator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Discriminator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    "SummaryItem"], 
                    Annotation[#, {"Parameters", "Discriminator"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"JensenShannon\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Sample\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Sample\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Sample"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Sample\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Sample"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Latent\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Latent\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Latent"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Latent\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Latent"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossReal\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossReal\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossReal"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossReal\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossReal"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"GeneratedFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"GeneratedFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"GeneratedFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"GeneratedFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"GeneratedFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox["\"expression\"", "SummaryItem"], 
                    Annotation[#, {"Outputs", "GeneratedFake"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    Lookup[
                    
                    Association[{"Parameters", "Generator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "add eos/sos latent" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {16}], 
                    "Inputs" -> Association[], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]]], "3" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {16}], 
                    "Inputs" -> Association[], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]]], "2" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[4294967310], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1481749725]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT]]], "4" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1481749725], "$Shape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[307143787]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "4", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 16, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 16, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[307143787]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, 
                    "$WeightsInputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1635251304]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1635251304], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2126851336]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2126851336]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2126851336], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "remove eos/sos prediction" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "SequenceRest", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[2126851336], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1941471173]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "SequenceMost", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1941471173], "$Shape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[1577713381]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{27, 128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {27}, "$OutputSize" -> 27, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1577713381],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "squash" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "add eos/sos onehot proba" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "4" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "1" -> 
                    Association["Type" -> "Padding", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> {{0, 0}, {0, 2}}, 
                    "Padding" -> 0., "$Rank" -> 2, "$InputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 27}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 29}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1577713381], "$Shape" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[2120058550]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[2120058550], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1710987261]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "5", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]]], {
                    "Parameters", "Discriminator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "keep max only" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    If[# >= #2 - 1.*^-7, #, 0]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 29, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 29, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1120800603]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, 
                    "$WeightsInputChannels" -> 29], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2059373172]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2059373172], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1856854423]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1856854423]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1856854423], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "aggregate" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "dropout" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {1, 128}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "logit" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], {
                    "Outputs", "GeneratedFake"} -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]], 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGANOperator[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.803397509304528*^9, 3.803398784105567*^9, 
  3.803402043547495*^9, 3.803402111924036*^9},
 CellLabel->
  "Out[3681]=",ExpressionUUID->"dae8fd86-068c-47cd-832e-156073fc271a"]
}, Open  ]],

Cell["Ngram Functions : ", "Text",
 CellChangeTimes->{{3.8033975455840263`*^9, 
  3.803397563402075*^9}},ExpressionUUID->"ab3f6e29-61fd-49a1-b1fa-\
530f930c3ed9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"characters1", " ", "=", " ", 
    RowBox[{"AssociationThread", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"CharacterRange", "[", 
         RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"StartOfString", ",", " ", "EndOfString", ",", "\"\< \>\""}],
          "}"}]}], "]"}], "\n", "\t", "\[Rule]", " ", 
      RowBox[{"Range", "[", "29", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"computeNGrams", "[", 
     RowBox[{"texts_", ",", " ", "n_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "ngrams", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"ngrams", " ", "=", " ", 
        RowBox[{"Flatten", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{"#", ",", " ", "n", ",", " ", "1"}], "]"}], "]"}], " ", "/@",
            " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "StartOfString", "}"}], ",", " ", 
               RowBox[{"Characters", "[", "#", "]"}], ",", " ", 
               RowBox[{"{", "EndOfString", "}"}]}], "]"}], "]"}], " ", "/@", 
            " ", 
            RowBox[{"normalizeText", "[", "texts", "]"}]}]}], ",", "\n", 
          "\t\t", "1"}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Convert", " ", "to", " ", "indices"}], " ", "*)"}], "\n", 
       "\t", 
       RowBox[{"ngrams", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"characters1", ",", " ", "#"}], "]"}], "&"}], ",", " ", 
          "ngrams"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"(*", " ", "Counts", " ", "*)"}], "\n", "\t", 
       RowBox[{"ngrams", " ", "=", " ", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"N", " ", "@", " ", 
           RowBox[{"Counts", "[", "ngrams", "]"}]}], " ", "/", " ", 
          RowBox[{"Length", "[", "ngrams", "]"}]}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"(*", " ", 
        RowBox[{"Fill", " ", "SparseArray"}], " ", "*)"}], "\n", "\t", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"ngrams", ",", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Length", "[", "characters1", "]"}], ",", "n"}], "]"}]}], 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findEuclideanDistance", "[", 
    RowBox[{"ngram1_", ",", "ngram2_"}], "]"}], ":=", " ", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", "ngram1"}], ",", 
     RowBox[{"Flatten", "@", "ngram2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DistancesofNgrams", "[", 
    RowBox[{"generator_", ",", " ", "dataset_"}], "]"}], ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"findEuclideanDistance", "[", 
      RowBox[{
       RowBox[{"computeNGrams", "[", 
        RowBox[{
         RowBox[{"generator", "@", 
          RowBox[{"latentGeneration", "[", "500", "]"}]}], ",", "n"}], "]"}], 
       ",", " ", 
       RowBox[{"computeNGrams", "[", 
        RowBox[{
         RowBox[{"RandomChoice", "[", 
          RowBox[{"dataset", ",", "500"}], "]"}], ",", "n"}], "]"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8033976106188993`*^9, 3.803397644568798*^9}, {
  3.803398790799852*^9, 3.8033987968165197`*^9}},
 CellLabel->
  "In[3686]:=",ExpressionUUID->"42e727b1-7578-4fa8-b08f-a778a78de460"],

Cell[BoxData[
 RowBox[{"normalizedCompanyNames", ";"}]], "Input",
 CellChangeTimes->{{3.803397781606719*^9, 3.80339778550948*^9}, 
   3.803398025538621*^9, {3.803402120359269*^9, 3.803402122962173*^9}},
 CellLabel->
  "In[3691]:=",ExpressionUUID->"47866491-5ff3-4854-868b-587317461f58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$monitoringLatent", "=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"latentGeneration", "[", "10", "]"}], ",", "Length"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monitorGAN", "[", "gan_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"generator", "=", 
       RowBox[{"NetExtract", "[", 
        RowBox[{"gan", ",", "\"\<Generator\>\""}], "]"}]}], "}"}], ",", 
     RowBox[{"Framed", "@", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Framed", "@", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"generator", "[", "$monitoringLatent", "]"}], ",", 
               "10"}], "]"}]}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], ",", 
         RowBox[{"Framed", "@", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"generator", "[", 
                RowBox[{"$monitoringLatent", ",", 
                 RowBox[{"NetEvaluationMode", "\[Rule]", "\"\<Train\>\""}]}], 
                "]"}], ",", "10"}], "]"}]}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], "}"}], 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Go", "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], 
      "!!"}], "!!"}], "!"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"$Notebooks", ",", 
     RowBox[{"Echo", "[", 
      RowBox[{"\"\<Training of\>\"", "\[Rule]", "gan"}], "]"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$SAVEDIR", "=!=", "None"}], ",", 
    RowBox[{"CreateDirectory", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$SAVEDIR", ",", "\"\<monitoring\>\""}], "}"}], "]"}], ",", 
      RowBox[{"CreateIntermediateDirectories", "\[Rule]", "True"}]}], "]"}]}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trained", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"gan", ",", "dataGenerator", ",", 
     RowBox[{"TargetDevice", "\[Rule]", "$device"}], ",", 
     RowBox[{"BatchSize", "\[Rule]", "$batchsize"}], ",", 
     RowBox[{"TrainingUpdateSchedule", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Discriminator\>\"", ",", "\"\<Generator\>\""}], "}"}]}], 
     ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "100000"}], ",", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"$Notebooks", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{"monitorGAN", "[", "#Net", "]"}], "]"}], ",", 
              RowBox[{"\"\<Interval\>\"", "\[Rule]", 
               RowBox[{"Quantity", "[", 
                RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}]}]}], "}"}], ",", 
            "\"\<Panel\>\""}], "}"}], ",", "\"\<Print\>\""}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$SAVEDIR", "===", "None"}], ",", "Nothing", ",", 
          RowBox[{"File", "[", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"$SAVEDIR", ",", "\"\<training_log.csv\>\""}], "}"}], 
            "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"TrainingProgressFunction", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Function", "@", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "generator", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"generator", "=", 
             RowBox[{"NetExtract", "[", 
              RowBox[{"#Net", ",", "\"\<Generator\>\""}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ngramInfo", ",", 
              RowBox[{"DistancesofNgrams", "[", 
               RowBox[{"generator", ",", "normalizedCompanyNames"}], "]"}]}], 
             "]"}]}]}], "]"}]}], ",", 
        RowBox[{"\"\<Interval\>\"", "\[Rule]", 
         RowBox[{"Quantity", "[", 
          RowBox[{"1", ",", "\"\<Rounds\>\""}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"$SAVEDIR", "===", "None"}], ",", "None", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<File\>\"", ",", 
          RowBox[{"$SAVEDIR", "<>", "\"\</gan.wlnet\>\""}], ",", 
          RowBox[{"\"\<Interval\>\"", "\[Rule]", 
           RowBox[{"Quantity", "[", 
            RowBox[{"10", ",", "\"\<Rounds\>\""}], "]"}]}]}], "}"}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"FailureQ", "[", "trained", "]"}], ",", "trained", ",", 
   RowBox[{"textGenerator", "=", 
    RowBox[{"NetExtract", "[", 
     RowBox[{"trained", ",", "\"\<Generator\>\""}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.803398047553053*^9, {3.8034019670604067`*^9, 3.803401969441286*^9}},
 CellLabel->
  "In[3645]:=",ExpressionUUID->"0ed6c39f-0d52-464c-9fa4-869b8601a3b1"],

Cell[BoxData[
 RowBox[{"\<\"Training of\"\>", "\[Rule]", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["NetGANOperator", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
               
               StyleBox[
                OverlayBox[{
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  StyleBox["uninitialized", 
                   RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> 
                   "Roboto", Background -> GrayLevel[1, 0.65]]}, 
                 Alignment -> {Center, 
                   Scaled[0.0001]}], CacheGraphics -> False], 
               GridBox[{{
                  StyleBox[
                   TemplateBox[{"\"Sample\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox[
                   TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                  StyleBox[
                   TemplateBox[{"\"Latent\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox[
                   TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                  StyleBox[
                   TemplateBox[{"\"LossReal\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox["\"real\"", "SummaryItem"]}, {
                  StyleBox[
                   TemplateBox[{"\"LossFake\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox["\"real\"", "SummaryItem"]}, {
                  StyleBox[
                   TemplateBox[{"\"GeneratedFake\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], 
                  StyleBox["\"expression\"", "SummaryItem"]}}, 
                BaselinePosition -> {2, 1}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridFrameMargins -> {{0, 0}, {0, 0}}, 
             BaselinePosition -> {1, 3}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open = False), Appearance -> None,
                  Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
               
               StyleBox[
                OverlayBox[{
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  StyleBox["uninitialized", 
                   RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> 
                   "Roboto", Background -> GrayLevel[1, 0.65]]}, 
                 Alignment -> {Center, 
                   Scaled[0.0001]}], CacheGraphics -> False], 
               GridBox[{{
                  
                  DynamicModuleBox[{
                   NeuralNetworks`Private`FormattingLayers`opart, 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                   DynamicBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Generator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Generator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Generator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Generator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Generator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    "SummaryItem"], 
                    Annotation[#, {"Parameters", "Generator"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Discriminator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Discriminator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Discriminator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Discriminator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Discriminator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    "SummaryItem"], 
                    Annotation[#, {"Parameters", "Discriminator"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"JensenShannon\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Sample\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Sample\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Sample"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Sample\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Sample"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Latent\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Latent\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Latent"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Latent\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Latent"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossReal\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossReal\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossReal"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossReal\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossReal"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"GeneratedFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"GeneratedFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"GeneratedFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"GeneratedFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"GeneratedFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox["\"expression\"", "SummaryItem"], 
                    Annotation[#, {"Outputs", "GeneratedFake"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    Lookup[
                    
                    Association[{"Parameters", "Generator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "add eos/sos latent" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[340218348], 16}, 
                    NeuralNetworks`AtomT]], "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {16}], 
                    "Inputs" -> Association[], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]]], "3" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {16}], 
                    "Inputs" -> Association[], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]]], "2" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[4294967310], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1157489431]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1157489431], 16}, 
                    NeuralNetworks`AtomT]]], "4" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1157489431], "$Shape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[340218348]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1157489431], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[340218348], 16}, 
                    NeuralNetworks`AtomT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "4", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 16, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 16, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[340218348]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2128051278]}, 
                    "$WeightsInputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[340218348], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2128051278]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2128051278], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[340218348], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2128051278]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2056076451]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2056076451]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2056076451], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2128051278], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]]], "remove eos/sos prediction" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "SequenceRest", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[2056076451], "$Shape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[1498633217]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1498633217], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "SequenceMost", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1498633217], "$Shape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[1981248912]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1498633217], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2056076451], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Net" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{27, 128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {27}, "$OutputSize" -> 27, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1981248912],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 27}, 
                    NeuralNetworks`RealT]]], "squash" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 27}, 
                    NeuralNetworks`RealT]]], "add eos/sos onehot proba" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[896751670], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["2" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "4" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "1" -> 
                    Association["Type" -> "Padding", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> {{0, 0}, {0, 2}}, 
                    "Padding" -> 0., "$Rank" -> 2, "$InputSize" -> {
                    NeuralNetworks`LengthVar[1981248912], 27}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1981248912], 29}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1981248912], "$Shape" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[129658390]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1981248912], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[129658390], 29}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[129658390], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[896751670]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[129658390], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[896751670], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "5", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association[
                    "Output" -> Association[
                    "Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[896751670], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1179691678], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]]], {
                    "Parameters", "Discriminator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "keep max only" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Aggregation", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920]}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    If[# >= #2 - 1.*^-7, #, 0]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920]}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 29, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 29, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1822520920]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1325114682]}, 
                    "$WeightsInputChannels" -> 29], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1325114682]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1325114682], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1325114682]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2138884015]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[1], {128}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {128}], 
                    "MovingMean" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2138884015]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2138884015], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1325114682], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]]], "aggregate" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2138884015], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "dropout" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {1, 128}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "logit" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1822520920], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], {"Outputs", "GeneratedFake"} -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[896751670], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1179691678], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]], 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                   Initialization :> {NetChain}]}}, BaselinePosition -> 
                Automatic, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridFrameMargins -> {{0, 0}, {0, 0}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
         Baseline, 
         BaseStyle -> {
          ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
           3, ShowSyntaxStyles -> False}]], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("NetGANOperator[<>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Echo",
 CellChangeTimes->{
  3.803402049761938*^9},ExpressionUUID->"39a2b37f-6a30-42b8-9783-\
8c7295676e1e"],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory", "filex", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/sumansigdel/documents/Forbes/\
monitoring\\\\\\\"\\\"}]\\) already exists.\"", 2, 3648, 480, 
   26207717223377046194, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.803398125428158*^9, 3.803398417250764*^9, 
  3.803398802294849*^9, 3.8034019706192617`*^9, 3.803402049841873*^9},
 CellLabel->
  "During evaluation of \
In[3645]:=",ExpressionUUID->"1337d70d-216a-4a39-b8bb-15392eb0135e"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain", "badrepfile", 
   "\"Could not open file \
/Users/sumansigdel/documents/Forbes/training_log.csv specified as value for \
TrainingProgressReporting.\"", 2, 3649, 481, 26207717223377046194, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.803398125428158*^9, 3.803398417250764*^9, 
  3.803398802294849*^9, 3.8034019706192617`*^9, 3.8034020519819927`*^9},
 CellLabel->
  "During evaluation of \
In[3645]:=",ExpressionUUID->"7c0c3513-88ec-476f-831f-e862c37140f9"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.803398083554387*^9, 3.803398152073413*^9, 
  3.803398574482397*^9, 3.803398830658*^9, 3.803401995850893*^9, 
  3.803402052032179*^9},
 CellLabel->
  "Out[3650]=",ExpressionUUID->"e09b2118-fe88-4965-8177-0ffbf4dcd610"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesGAN", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\</Users/sumansigdel/ForbesCompaniesGAN.wlnet\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.803401703500762*^9, 3.803401717503641*^9}},
 CellLabel->
  "In[3889]:=",ExpressionUUID->"8318c6fb-7183-4c74-834d-a6ba5c4a682b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGANOperator", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Sample\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Latent\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LossReal\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LossFake\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"GeneratedFake\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[
                
                GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1,
                   0}}, {{
                   Opacity[0.3], 
                   
                   LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                   AbsolutePointSize[5], 
                   RGBColor[0.33, 0.33, 0.33], 
                   PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`FormattingLayers`opart, 
                   NeuralNetworks`Private`FormattingLayers`part, 
                   NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                  
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Generator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Generator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Generator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Generator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Generator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], "SummaryItem"], 
                    Annotation[#, {"Parameters", "Generator"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Discriminator\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Discriminator\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Discriminator"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Discriminator\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Discriminator"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], "SummaryItem"], 
                    Annotation[#, {"Parameters", "Discriminator"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"JensenShannon\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Sample\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Sample\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Sample"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Sample\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Sample"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Latent\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Latent\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Latent"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Latent\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Latent"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossReal\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossReal\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossReal"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossReal\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossReal"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LossFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"LossFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LossFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LossFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LossFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"GeneratedFake\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"GeneratedFake\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"GeneratedFake"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"GeneratedFake\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25},
                     {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 
                    12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{
                    8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{
                    8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]},
                     ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"GeneratedFake"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox["\"expression\"", "SummaryItem"], 
                    Annotation[#, {"Outputs", "GeneratedFake"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    Lookup[
                    
                    Association[{"Parameters", "Generator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "add eos/sos latent" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "3" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "2" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[4294967310], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1481749725]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT]]], "4" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1481749725], "$Shape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[307143787]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "4", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16, 5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 16, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[307143787]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, 
                    "$WeightsInputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> True, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1635251304]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1635251304], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2126851336]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> True, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2126851336]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2126851336], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "remove eos/sos prediction" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "SequenceRest", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[2126851336], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1941471173]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "SequenceMost", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1941471173], "$Shape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[1577713381]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{27}]], "Parameters" -> 
                    Association["OutputDimensions" -> {27}, "$OutputSize" -> 
                    27, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1577713381],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "squash" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "add eos/sos onehot proba" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "4" -> 
                    Association["Type" -> "Array", "Arrays" -> 
                    Association["Array" -> 
                    NeuralNetworks`Private`DummyArray[{29}]], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "1" -> 
                    Association["Type" -> "Padding", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> {{0, 0}, {0, 2}}, 
                    "Padding" -> 0., "$Rank" -> 2, "$InputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 27}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 29}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Prepend", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["$Length" -> 
                    NeuralNetworks`LengthVar[1577713381], "$Shape" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$OutputLength" -> NeuralNetworks`LengthVar[2120058550]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Append", "Arrays" -> Association[],
                     "Parameters" -> Association[
                    "$Length" -> NeuralNetworks`LengthVar[2120058550], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1710987261]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "5", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]]], {
                    "Parameters", "Discriminator"} -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "keep max only" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    If[# >= #2 - 1.*^-7, #, 0]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 29, 5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 29, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1120800603]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, 
                    "$WeightsInputChannels" -> 29], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> True, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2059373172]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2059373172], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1856854423]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> True, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1856854423]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[If[# > 0, #, 0.2 #]& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1856854423], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "aggregate" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "dropout" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 128}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "logit" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], {
                    "Outputs", "GeneratedFake"} -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]], 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGANOperator[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8034017181913977`*^9, 3.803407011825169*^9, 
  3.8034078996579857`*^9, 3.8034095538797903`*^9, 3.803409813673544*^9, 
  3.803410174911503*^9, 3.803410571052343*^9, 3.8034106410594263`*^9},
 CellLabel->
  "Out[3889]=",ExpressionUUID->"de5e0769-73ca-478c-83b3-46fbd4670371"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameGenerator", " ", "=", " ", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"companiesGAN", ",", "\"\<Generator\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.803401721810947*^9, 3.8034017367756968`*^9}},
 CellLabel->
  "In[3890]:=",ExpressionUUID->"1e1bb49e-1ad1-4b79-b342-faa5332bb777"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"expression\"", "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "add eos/sos latent" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "3" -> 
                    Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT]]], "2" -> 
                    Association[
                    "Type" -> "Append", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[4294967310], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1481749725]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT]]], "4" -> 
                    Association[
                    "Type" -> "Prepend", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1481749725], 
                    "$Shape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`AtomT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[307143787]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1481749725], 16}, 
                    NeuralNetworks`AtomT], "Element" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`AtomT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "4", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 16, 
                    5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 16, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[307143787]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, 
                    "$WeightsInputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1635251304]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1635251304], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[307143787], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1635251304]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2126851336]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2126851336]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2126851336], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1635251304], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]]], "remove eos/sos prediction" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "SequenceRest", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[2126851336], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1941471173]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceMost", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1941471173], 
                    "$Shape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1577713381]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1941471173], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2126851336], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]]], "classify" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{27, 128}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{27}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {27}, "$OutputSize" -> 27, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{27}, 
                    NeuralNetworks`RealT]]], "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1577713381], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{27}, NeuralNetworks`RealT]], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "squash" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]]], "add eos/sos onehot proba" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "2" -> Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{29}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "4" -> 
                    Association[
                    "Type" -> "Array", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{29}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT], 
                    "$ArrayDimensions" -> {29}], "Inputs" -> Association[], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association["LearningRateMultipliers" -> 0]], "1" -> 
                    Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> {{0, 0}, {0, 2}}, "Padding" -> 0., 
                    "$Rank" -> 2, "$InputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 27}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1577713381], 29}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Prepend", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[1577713381], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[2120058550]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1577713381], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Append", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "$Length" -> NeuralNetworks`LengthVar[2120058550], 
                    "$Shape" -> NeuralNetworks`TensorT[{29}, 
                    NeuralNetworks`RealT], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[1710987261]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2120058550], 29}, 
                    NeuralNetworks`RealT], "Element" -> 
                    NeuralNetworks`TensorT[{29}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "5", "Inputs", "Element"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos latent", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remove eos/sos prediction", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "squash", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add eos/sos onehot proba", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[4294967310], 16}, 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1710987261], 29}, 
                    NeuralNetworks`RealT], "Type" -> "Function", "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Tooltip[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    StringReplace[
                    NetDecoder["Characters", 
                    Association[
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 28, 29, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                    11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
                    25, 26, 27, 128, 128, 128, 128, 128, 128, 2, 3, 4, 5, 6, 
                    7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
                    22, 23, 24, 25, 26, 27, 128, 128, 128, 128, 128}], 
                    RawArray["UnsignedInteger8",{32, 97, 98, 99, 100, 101, 
                    102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
                    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 0}], 
                    29, {" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", 
                    "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", 
                    "u", "v", "w", "x", "y", "z", StartOfString, 
                    EndOfString}]], "IgnoreCase" -> True, "InputDepth" -> 2, 
                    "Count" -> 29, "$Version" -> "12.2.8"], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1414501820], 29}, 
                    NeuralNetworks`RealT]][#], 
                    StringExpression[WordBoundary, 
                    Pattern[$CellContext`c, WordCharacter]] :> 
                    ToUpperCase[$CellContext`c]]& ]], "Properties" -> None, 
                    "$Version" -> "12.2.8"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"add eos/sos latent\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]16\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "add eos/sos latent"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"3\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"remove eos/sos prediction\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "remove eos/sos prediction"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classify\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    TagBox["NetMapOperator", HoldForm], "[", "LinearLayer", 
                    "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"squash\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"4\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "squash"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"add eos/sos onehot proba\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    TemplateBox[{"\"(\"", "5", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"5\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "add eos/sos onehot proba"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"expression\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.803401737718008*^9, 3.8034070139064302`*^9, 
  3.803407901199401*^9, 3.803409555421809*^9, 3.803409815426569*^9, 
  3.8034101773464117`*^9, 3.803410572823133*^9, 3.803410643046936*^9},
 CellLabel->
  "Out[3890]=",ExpressionUUID->"072ef833-6e07-4de5-a4e9-e39a71600af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameGenerator", "@", 
  RowBox[{"latentGeneration", "[", "100", "]"}]}]], "Input",
 CellChangeTimes->{{3.803401739776699*^9, 3.8034017532535954`*^9}, 
   3.803407024043119*^9, {3.803409828263631*^9, 3.803409850556223*^9}},
 CellLabel->
  "In[3891]:=",ExpressionUUID->"994122b2-f2c9-4ba7-9895-21d5a9b5600b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Coiolginuaugee \"\>", ",", "\<\"Ciea\"\>", ",", "\<\"Eba\"\>", 
   ",", "\<\"A Ygen\"\>", ",", "\<\"Reraienba\"\>", ",", "\<\"Mer\"\>", 
   ",", "\<\"Re A Y\"\>", ",", "\<\"Suof  Iegaiki Biheraie  Iio\"\>", 
   ",", "\<\"Cekaleek Min Ainoyk Ginar\"\>", ",", "\<\"Min \"\>", 
   ",", "\<\"Cownf Agiiflifgi\"\>", ",", "\<\"Seoaifgi\"\>", 
   ",", "\<\"  Agio\"\>", ",", "\<\"Seb Fgi Gikaiek\"\>", 
   ",", "\<\"C  Gi  Gfgr Rgi  If  Alink\"\>", ",", "\<\"Mina Ai\"\>", 
   ",", "\<\"Rarie  Aief Iorona I\"\>", ",", "\<\"Baieraek Ib\"\>", 
   ",", "\<\"Ebarorefa\"\>", 
   ",", "\<\"If In Aroin Gigi Ygyinomo Raieraien\"\>", 
   ",", "\<\"Wie A Ygif Aie\"\>", ",", "\<\"Ek Iknao\"\>", 
   ",", "\<\"Btntotosecaceraifgyiikbiromenao\"\>", ",", "\<\"Rtnuieoba\"\>", 
   ",", "\<\"Aoi Gi Mihorortnunkl\"\>", ",", "\<\"Ik Ainkaser\"\>", 
   ",", "\<\"Wi Rons\"\>", ",", "\<\"Meraituoin  Awnogeraiora\"\>", 
   ",", "\<\"Nustreuginba Giortr\"\>", ",", "\<\"Cocera\"\>", 
   ",", "\<\"Nk \"\>", ",", "\<\"Corinka Yoy\"\>", 
   ",", "\<\"Colenk Enuitl\"\>", ",", "\<\"Oceulann Ikreeas\"\>", 
   ",", "\<\"Uouguiebarg Yin\"\>", ",", "\<\"C Ierar I Rgik Aneb\"\>", 
   ",", "\<\"Hororoitntkua\"\>", ",", "\<\"Cnuthou\"\>", 
   ",", "\<\"Oin Rargin\"\>", ",", "\<\" Horofoiif Mtntka Rg\"\>", 
   ",", "\<\"Roit\"\>", ",", "\<\"Arerag\"\>", ",", "\<\"Efoiintab\"\>", 
   ",", "\<\"Baioiehaaoeiaihome\"\>", ",", "\<\"Rorefa Yi Iefaminka\"\>", 
   ",", "\<\"Winbar\"\>", ",", "\<\"Case Tnes\"\>", ",", "\<\"Seatina\"\>", 
   ",", "\<\"Baitnomifaiv\"\>", ",", "\<\"Anere Uiheboroer\"\>", 
   ",", "\<\"Uouoie Lin  Oi\"\>", ",", "\<\"Cori Giin Iar\"\>", 
   ",", "\<\"Coren\"\>", ",", "\<\"Coalynfahor  Giiinsebo\"\>", 
   ",", "\<\"Reraiergfnartne Eeba\"\>", ",", "\<\"Onodigiifgroroik \"\>", 
   ",", "\<\"Cosks\"\>", ",", "\<\"Ceuoiou\"\>", 
   ",", "\<\"Baienalorieh U Ueh\"\>", ",", "\<\"E Aie Biena Aienar\"\>", 
   ",", "\<\"Sese Aifo I Gi I Gi\"\>", ",", "\<\"E Aon Win Iiraiikl\"\>", 
   ",", "\<\"Uouneitnkoikbibareroi\"\>", ",", "\<\"Ebgiieuteeamen\"\>", 
   ",", "\<\"Na Foragi\"\>", ",", "\<\"Volen\"\>", 
   ",", "\<\"I  Lif In Givas\"\>", ",", "\<\"C  Gink Eeuienamir\"\>", 
   ",", "\<\"Pcohohk  Dieloikbace As\"\>", 
   ",", "\<\"Gf Roriboroikaariries\"\>", ",", "\<\"C Rari\"\>", 
   ",", "\<\"Bin   Iin Ainaa\"\>", ",", "\<\"Rororino\"\>", 
   ",", "\<\"Bint\"\>", ",", "\<\"Oapenuse Aeramth Bor\"\>", 
   ",", "\<\"Ck Leraitlie Antcouar\"\>", ",", "\<\"Coosenalif Ginn\"\>", 
   ",", "\<\"Aie Giginf Aif R\"\>", ",", "\<\"Ai Rtra\"\>", 
   ",", "\<\"Enamerenawii Aifoieuaseeua\"\>", ",", "\<\"Ocehk G\"\>", 
   ",", "\<\"Oro\"\>", ",", "\<\"Ena Ginuotenamirgie Ai\"\>", 
   ",", "\<\"Meroenaier\"\>", ",", "\<\"Biesastnt\"\>", 
   ",", "\<\" B Rgfgiiie Iebaie\"\>", ",", "\<\"Ceuain M\"\>", 
   ",", "\<\"Be Aieran\"\>", ",", "\<\"Eeagina\"\>", 
   ",", "\<\"Ebartraiibltnseostotn\"\>", ",", "\<\"Agists\"\>", 
   ",", "\<\"Upunage A\"\>", ",", "\<\"Min Ifgine Aik\"\>", 
   ",", "\<\"Bgie Aoygenuganoct\"\>", ",", "\<\"Htrese Oygiohorirar\"\>", 
   ",", "\<\"Ulink\"\>", ",", "\<\"Leror Eroitn\"\>", 
   ",", "\<\"I  Ari Gifg\"\>", ",", "\<\"Ce Agygfor Rgzen\"\>", 
   ",", "\<\"Ebaro\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8034017510201902`*^9, 3.80340175359254*^9}, {
   3.80340701552897*^9, 3.803407025991478*^9}, 3.803407902966144*^9, 
   3.803409232126177*^9, {3.8034095574355507`*^9, 3.803409595095132*^9}, {
   3.803409683725933*^9, 3.803409688971291*^9}, {3.8034098169837837`*^9, 
   3.803409851713759*^9}, 3.8034101791123953`*^9, 3.8034105748328114`*^9, 
   3.803410644936458*^9},
 CellLabel->
  "Out[3891]=",ExpressionUUID->"8daa4f6a-f342-48dd-b083-75e74ef5665c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameDiscriminator", " ", "=", " ", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"companiesGAN", ",", "\"\<Discriminator\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8034017616970997`*^9, 3.803401778635213*^9}},
 CellLabel->
  "In[3854]:=",ExpressionUUID->"6e56d6a7-035c-4667-ab32-2a1f3920b88e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "keep max only" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# >= #2 - 1.*^-7, #, 0]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]], "Inputs" -> 
                    Association["Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603]}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}], "conv.1" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 29, 
                    5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 29, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[1120800603]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, 
                    "$WeightsInputChannels" -> 29], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[2059373172]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2059373172], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]]], "conv.2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {5}, 
                    "Stride" -> {1}, "PaddingSize" -> {{2, 2}}, 
                    "Dilation" -> {1}, "ChannelGroups" -> 1, "Dimensionality" -> 
                    1, "Interleaving" -> True, "$InputChannels" -> 128, 
                    "$InputSize" -> {
                    NeuralNetworks`LengthVar[2059373172]}, "$OutputSize" -> {
                    NeuralNetworks`LengthVar[1856854423]}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    True, "$Channels" -> 128, "$SpatialDimensions" -> {
                    NeuralNetworks`LengthVar[1856854423]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "TrainingParameters" -> 
                    Association[
                    "LearningRateMultipliers" -> {
                    "Scaling" -> 0, "Biases" -> 0, Blank[] -> 1}]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0, #, 0.2 #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1856854423], 128}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2059373172], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]]], "aggregate" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1856854423], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "dropout" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "classify" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 128}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "logit" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "keep max only", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv.2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "aggregate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classify", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "logit", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1120800603], 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"keep max only\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "keep max only"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "keep max only"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]29\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "keep max only"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv.2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"3\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "conv.2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"aggregate\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "aggregate"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "aggregate"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "aggregate"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"dropout\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "dropout"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "dropout"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "dropout"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classify\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Nodes", "classify"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"logit\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "logit"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "logit"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "logit"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8034017796057053`*^9, 3.803409853970949*^9},
 CellLabel->
  "Out[3854]=",ExpressionUUID->"10c6c261-e8f4-4fdf-883f-743410687997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameDiscriminator", "@", 
  RowBox[{"sampleGeneration", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.803409868286862*^9, 3.8034098874285707`*^9}},
 CellLabel->
  "In[3857]:=",ExpressionUUID->"5287bec7-90f2-4538-a5b2-49b09f87c55e"],

Cell[BoxData[
 RowBox[{"{", "0.47909530997276306`", "}"}]], "Output",
 CellChangeTimes->{{3.803409881252378*^9, 3.803409889591968*^9}},
 CellLabel->
  "Out[3857]=",ExpressionUUID->"d08a337b-7e2e-4b1a-8e2c-0c7499776df8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toInt", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
     RowBox[{"StringSplit", "[", 
      RowBox[{
       RowBox[{"StringTrim", "[", 
        RowBox[{"n", ",", " ", 
         RowBox[{"\"\<{\>\"", " ", "|", " ", "\"\<}\>\""}]}], "]"}], ",", 
       " ", "\"\<,\>\""}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"distancesLog", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toInt", "[", "b", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"distancesLogUpdated", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"toInt", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"distancesLog", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"distancesLogUpdated", " ", "=", " ", 
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#2", " ", "*", " ", "10"}], "}"}], ",", " ", 
        RowBox[{"{", "#1", "}"}]}], "]"}]}], " ", "&"}], ",", " ", 
    "distancesLogUpdated"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.803408026912731*^9, 3.8034080269258432`*^9}},
 CellLabel->
  "In[3868]:=",ExpressionUUID->"0ebcd4a9-ea5a-4adc-972a-4a1d35a0f05e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "10", ",", "0.37676358741122984`", ",", "0.24780290545333059`", ",", 
     "0.13788680879707152`", ",", "0.08101153891903386`", ",", 
     "0.050991254452932885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "20", ",", "0.3787940611793313`", ",", "0.24573632152432776`", ",", 
     "0.1568256844214954`", ",", "0.09476607691691676`", ",", 
     "0.06316069090016878`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", "0.29825702484664846`", ",", "0.18797437255364335`", ",", 
     "0.1064539525713427`", ",", "0.06292902645189984`", ",", 
     "0.04141761347050207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "40", ",", "0.2377609929340972`", ",", "0.14675516250939447`", ",", 
     "0.0793974622057029`", ",", "0.045660911343756945`", ",", 
     "0.03408315392804496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "50", ",", "0.2990111230659917`", ",", "0.17850697115966518`", ",", 
     "0.09908169958064288`", ",", "0.052535080802748`", ",", 
     "0.039143143561543484`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "0.2800211744157107`", ",", "0.15768145866065433`", ",", 
     "0.08326224461742585`", ",", "0.04632483659344299`", ",", 
     "0.037226852752214164`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "70", ",", "0.2509490655686041`", ",", "0.13470632086114473`", ",", 
     "0.07087644214644155`", ",", "0.04254869931629983`", ",", 
     "0.03441644705609557`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "80", ",", "0.2194181524085532`", ",", "0.12251327822425673`", ",", 
     "0.06237876497392445`", ",", "0.040064124076398935`", ",", 
     "0.03259109832781011`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "90", ",", "0.19785748409289744`", ",", "0.10925715300483435`", ",", 
     "0.05910527786073866`", ",", "0.037769635378452716`", ",", 
     "0.032759763236515665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100", ",", "0.32122416475352983`", ",", "0.16905503023555252`", ",", 
     "0.0883231540971633`", ",", "0.049683565746849845`", ",", 
     "0.03592419856604535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "110", ",", "0.32682748698537456`", ",", "0.16848719151226124`", ",", 
     "0.08091451171361025`", ",", "0.04682859039757648`", ",", 
     "0.03426494206271009`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "120", ",", "0.30705556231022796`", ",", "0.15676097708903827`", ",", 
     "0.07462152613625915`", ",", "0.04333627840566567`", ",", 
     "0.033539134488687415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "130", ",", "0.42000502738075673`", ",", "0.23715111470853362`", ",", 
     "0.12532519557004373`", ",", "0.07316504679084401`", ",", 
     "0.04574790556348325`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "140", ",", "0.4497040374951159`", ",", "0.25938376745062186`", ",", 
     "0.14254449522027915`", ",", "0.08129534534085688`", ",", 
     "0.05148430862559708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "150", ",", "0.37750565162047117`", ",", "0.20737892731061108`", ",", 
     "0.10556763630720385`", ",", "0.059496810453157085`", ",", 
     "0.038470330417160616`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "160", ",", "0.2317476573120927`", ",", "0.12705872831910778`", ",", 
     "0.064709707640787`", ",", "0.03970263161809229`", ",", 
     "0.034542765106165704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "170", ",", "0.3183024534418527`", ",", "0.16495065088268118`", ",", 
     "0.0804162025149792`", ",", "0.04444334907929745`", ",", 
     "0.035013318315547125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "180", ",", "0.34614861394189744`", ",", "0.17470570158312884`", ",", 
     "0.08495923981961405`", ",", "0.04688011567335355`", ",", 
     "0.035661297463066184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "190", ",", "0.3534267410022076`", ",", "0.17732370875725592`", ",", 
     "0.0866948113798156`", ",", "0.049951883644587795`", ",", 
     "0.036347499153786315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "200", ",", "0.34239980560197986`", ",", "0.1740239831322274`", ",", 
     "0.08280258080220648`", ",", "0.049778093221395`", ",", 
     "0.034570101081732155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "210", ",", "0.31349765635041443`", ",", "0.15837736014446038`", ",", 
     "0.0777336320672765`", ",", "0.045375416242232375`", ",", 
     "0.03408855165130437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "220", ",", "0.2538840953353308`", ",", "0.1423834531369375`", ",", 
     "0.06784003242036511`", ",", "0.04170362328863088`", ",", 
     "0.03268224168864028`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "230", ",", "0.18737087171122643`", ",", "0.10845777536055905`", ",", 
     "0.056435796840755975`", ",", "0.03751367860290586`", ",", 
     "0.031309008864741965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "240", ",", "0.17535188538818103`", ",", "0.10445838346058058`", ",", 
     "0.05893711018917196`", ",", "0.040108128767337346`", ",", 
     "0.03224809203578935`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "250", ",", "0.1726208491679553`", ",", "0.1039476311110624`", ",", 
     "0.060205944855704935`", ",", "0.039976092826999675`", ",", 
     "0.03307868687872819`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "260", ",", "0.17442544585861947`", ",", "0.10594717517128609`", ",", 
     "0.05993587145122808`", ",", "0.03962480988761387`", ",", 
     "0.03256119404632108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "270", ",", "0.16610633842325226`", ",", "0.10286757257705001`", ",", 
     "0.058450449013474466`", ",", "0.040411817148399344`", ",", 
     "0.032738456250923934`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "280", ",", "0.16541470961082863`", ",", "0.10301988341194963`", ",", 
     "0.06026806418415924`", ",", "0.04034587549953046`", ",", 
     "0.03078400503153651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "290", ",", "0.1570865232667082`", ",", "0.10036282588852068`", ",", 
     "0.05745272388172379`", ",", "0.038487428467437496`", ",", 
     "0.03288686838367538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "0.1637080700756968`", ",", "0.0960991186750851`", ",", 
     "0.05253049893350243`", ",", "0.0369600436332309`", ",", 
     "0.03163686098286249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "310", ",", "0.2354865858141827`", ",", "0.12821305755613652`", ",", 
     "0.06651687023936909`", ",", "0.039244868185715154`", ",", 
     "0.03239304032896176`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "320", ",", "0.2276823106251224`", ",", "0.12284920934010882`", ",", 
     "0.0633272496347525`", ",", "0.041243712828547656`", ",", 
     "0.031979918396520646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "330", ",", "0.21031682624606737`", ",", "0.12171578553201155`", ",", 
     "0.06251104487152097`", ",", "0.0412630609065653`", ",", 
     "0.032445828858090546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "340", ",", "0.1656186940601094`", ",", "0.1082882405759613`", ",", 
     "0.060932776629701285`", ",", "0.038385434225582`", ",", 
     "0.03137339906276321`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "350", ",", "0.16455936374845404`", ",", "0.10762835050973994`", ",", 
     "0.06239864192059768`", ",", "0.040559480301372776`", ",", 
     "0.03481702657257598`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "360", ",", "0.19693978359505154`", ",", "0.13327545318062667`", ",", 
     "0.08096193921887858`", ",", "0.05312959736503751`", ",", 
     "0.03854239663747792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "370", ",", "0.20253479928498797`", ",", "0.1512469291397101`", ",", 
     "0.09471957015350367`", ",", "0.06105177821752556`", ",", 
     "0.04489513498850253`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "380", ",", "0.21205075681369798`", ",", "0.16010978717042412`", ",", 
     "0.10011504018024232`", ",", "0.06553268542789027`", ",", 
     "0.04424645616135264`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "390", ",", "0.2079835750671501`", ",", "0.15417346084512012`", ",", 
     "0.09749789658654139`", ",", "0.06470262618243046`", ",", 
     "0.046615709293397374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "400", ",", "0.1950579644628725`", ",", "0.13866669973018686`", ",", 
     "0.09181969703516872`", ",", "0.054824104301922645`", ",", 
     "0.03964680226839498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "410", ",", "0.17012833947775646`", ",", "0.12098178735056113`", ",", 
     "0.07725510296829714`", ",", "0.04890723962273704`", ",", 
     "0.03668408371138691`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "420", ",", "0.16225032620767088`", ",", "0.11368350073130593`", ",", 
     "0.0668438438524648`", ",", "0.04285348044424023`", ",", 
     "0.033611400790077114`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "430", ",", "0.19068271779856588`", ",", "0.12704761141041848`", ",", 
     "0.0713123760582583`", ",", "0.04649532038812941`", ",", 
     "0.033629261482481826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "440", ",", "0.19894849445955362`", ",", "0.13669288507726327`", ",", 
     "0.07761669833488034`", ",", "0.04573294692571875`", ",", 
     "0.03490261590756849`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "450", ",", "0.2111254793022882`", ",", "0.13779589801272635`", ",", 
     "0.07807459304681794`", ",", "0.046925959259976474`", ",", 
     "0.03563889220419667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "460", ",", "0.22028887579085604`", ",", "0.14009027585797568`", ",", 
     "0.07909479415445142`", ",", "0.04734763183575778`", ",", 
     "0.03592849478720254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "470", ",", "0.21839605913933038`", ",", "0.1417434234311073`", ",", 
     "0.07789079878852229`", ",", "0.04948554779171009`", ",", 
     "0.035663367512461`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "480", ",", "0.20324607697590014`", ",", "0.13241103763993273`", ",", 
     "0.07335820686239877`", ",", "0.048940571555389036`", ",", 
     "0.03410541090461524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "490", ",", "0.17267348885079623`", ",", "0.11526505399361582`", ",", 
     "0.06755045162708359`", ",", "0.04474848524803321`", ",", 
     "0.03480969327968526`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "500", ",", "0.1656556416747998`", ",", "0.1250569794810645`", ",", 
     "0.07618281417000186`", ",", "0.046507751806367355`", ",", 
     "0.03643875055832728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "510", ",", "0.20158889841809102`", ",", "0.1480240464168648`", ",", 
     "0.09527486063219649`", ",", "0.06082177220456996`", ",", 
     "0.04491624608039508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "520", ",", "0.2353930945910583`", ",", "0.18249841754137813`", ",", 
     "0.12572685088126245`", ",", "0.09097010105101963`", ",", 
     "0.05857103154249382`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "530", ",", "0.24352307624799227`", ",", "0.19991969656445122`", ",", 
     "0.15229630708226358`", ",", "0.10411425792190482`", ",", 
     "0.0747568429654634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "540", ",", "0.23705796091341724`", ",", "0.2089150199205244`", ",", 
     "0.15721342612841016`", ",", "0.10766202820336214`", ",", 
     "0.07682870288980577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "550", ",", "0.25624455942575697`", ",", "0.21540907465824854`", ",", 
     "0.15740457518953957`", ",", "0.10685249276709102`", ",", 
     "0.0781505929700163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "560", ",", "0.22808687018761495`", ",", "0.1930468985625088`", ",", 
     "0.14309006190994206`", ",", "0.10398388220329569`", ",", 
     "0.06854605158844705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "570", ",", "0.2097187529848153`", ",", "0.17444820021108753`", ",", 
     "0.1278515956395761`", ",", "0.09640690521472306`", ",", 
     "0.06285522979829515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "580", ",", "0.17851933778772996`", ",", "0.14241576448698906`", ",", 
     "0.10333301399078547`", ",", "0.07061761603313804`", ",", 
     "0.051006087257928795`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "590", ",", "0.15812562108934888`", ",", "0.12353601058080335`", ",", 
     "0.07722905062272707`", ",", "0.05534023910747606`", ",", 
     "0.038982262884805476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "600", ",", "0.1625724399116298`", ",", "0.11487720547283535`", ",", 
     "0.07271266509912754`", ",", "0.04653024654075164`", ",", 
     "0.03439145686299763`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "610", ",", "0.17935914424843305`", ",", "0.12496704868156272`", ",", 
     "0.07665295323818373`", ",", "0.04668864437342668`", ",", 
     "0.035185219040338236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "620", ",", "0.1984014532478522`", ",", "0.1330223175689909`", ",", 
     "0.080171249437509`", ",", "0.049716266506907254`", ",", 
     "0.03673211385236286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "630", ",", "0.20159239582394578`", ",", "0.14010298960372886`", ",", 
     "0.08110504772519922`", ",", "0.0495680707018341`", ",", 
     "0.037433028917987124`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "640", ",", "0.2036888208384787`", ",", "0.13596515483482352`", ",", 
     "0.07985273846678675`", ",", "0.04906093102492297`", ",", 
     "0.035501354796383076`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "650", ",", "0.20400814500407038`", ",", "0.1358765344026818`", ",", 
     "0.08006775094774017`", ",", "0.04885226311604779`", ",", 
     "0.0367484662945903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "660", ",", "0.19451631798799063`", ",", "0.13284012196727138`", ",", 
     "0.07894067222444266`", ",", "0.04767608860400693`", ",", 
     "0.03597900211701564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "670", ",", "0.18302894953941562`", ",", "0.13042588802655278`", ",", 
     "0.07538100072362909`", ",", "0.0467107200522591`", ",", 
     "0.03554453067300083`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "680", ",", "0.16685407114574052`", ",", "0.12483856012075606`", ",", 
     "0.07400728004288855`", ",", "0.04580031983222764`", ",", 
     "0.035041463189888926`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "690", ",", "0.161991825741846`", ",", "0.13075773928338139`", ",", 
     "0.08386509078038179`", ",", "0.054293420407289045`", ",", 
     "0.040100515595772566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "700", ",", "0.19822243459432468`", ",", "0.16269277565739623`", ",", 
     "0.12314911467707547`", ",", "0.08275315824160547`", ",", 
     "0.05728752587575053`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "710", ",", "0.23151617304851582`", ",", "0.19404779895857477`", ",", 
     "0.15552512525355736`", ",", "0.1071684633743137`", ",", 
     "0.07860355848509759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "720", ",", "0.2587267150867679`", ",", "0.22992940278469562`", ",", 
     "0.18778813989291265`", ",", "0.1239147973010172`", ",", 
     "0.09944030347415217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "730", ",", "0.24037805341240187`", ",", "0.23102776644982922`", ",", 
     "0.1949041604988535`", ",", "0.14721452581167865`", ",", 
     "0.10493072573642209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "740", ",", "0.25508970132294734`", ",", "0.2429459048563333`", ",", 
     "0.18570310099502432`", ",", "0.14705179056124196`", ",", 
     "0.09744316881625358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "750", ",", "0.2514162319003305`", ",", "0.22029567373626352`", ",", 
     "0.18350768146461327`", ",", "0.1308556494250167`", ",", 
     "0.1093379097995586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "760", ",", "0.2111245391419579`", ",", "0.20085205503866885`", ",", 
     "0.1555298993089313`", ",", "0.11047136065729281`", ",", 
     "0.07933676398274381`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "770", ",", "0.1982892837344421`", ",", "0.1732234344769721`", ",", 
     "0.1292806114794245`", ",", "0.0972188959505632`", ",", 
     "0.0632708556768129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "780", ",", "0.17501011912920614`", ",", "0.15195528572026265`", ",", 
     "0.10676080375243398`", ",", "0.07696544959294108`", ",", 
     "0.052435121606051904`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "790", ",", "0.15066109162554306`", ",", "0.129213988472138`", ",", 
     "0.08519809193949084`", ",", "0.05479944473366434`", ",", 
     "0.040476329064798075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "800", ",", "0.1596502198358538`", ",", "0.1262725491750304`", ",", 
     "0.07740889366154964`", ",", "0.04913547122102496`", ",", 
     "0.03802896006839052`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "810", ",", "0.1780135510167147`", ",", "0.129923872345389`", ",", 
     "0.07942915531805632`", ",", "0.04988444603289527`", ",", 
     "0.03815916828498162`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "820", ",", "0.18958149435320293`", ",", "0.13703648079127803`", ",", 
     "0.08524888994027585`", ",", "0.052246740757725105`", ",", 
     "0.0377423813010753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "830", ",", "0.19706456270970038`", ",", "0.1377694075773678`", ",", 
     "0.08482153127407199`", ",", "0.05192014224651371`", ",", 
     "0.03748686193131896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "840", ",", "0.20674480179373816`", ",", "0.14314382516617186`", ",", 
     "0.08604208744106394`", ",", "0.053947589484201`", ",", 
     "0.04048472759637574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "850", ",", "0.19996023264163726`", ",", "0.14462084591580684`", ",", 
     "0.08465334218964601`", ",", "0.051970532856523845`", ",", 
     "0.03992457774698152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "860", ",", "0.19223695727550166`", ",", "0.13763955093049474`", ",", 
     "0.08334514118792041`", ",", "0.051048097476570506`", ",", 
     "0.037800800735822156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "870", ",", "0.17623638879933137`", ",", "0.13083798569423552`", ",", 
     "0.08124335957380824`", ",", "0.04991860508451128`", ",", 
     "0.03743736066579366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "880", ",", "0.1671568182464792`", ",", "0.1288491353900386`", ",", 
     "0.07928121166222608`", ",", "0.05169303031913316`", ",", 
     "0.037162861852748974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "890", ",", "0.17421355276943792`", ",", "0.1373330909091295`", ",", 
     "0.09022184050930201`", ",", "0.06604519691077657`", ",", 
     "0.04210252202107609`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "900", ",", "0.18749916106972664`", ",", "0.1663134736144579`", ",", 
     "0.12212755022715989`", ",", "0.08824787934347421`", ",", 
     "0.05994895053167641`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "910", ",", "0.207921965556662`", ",", "0.18994554179617582`", ",", 
     "0.14907581082783478`", ",", "0.1089003397572893`", ",", 
     "0.07453900991881515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "920", ",", "0.21393661565877287`", ",", "0.20278261293722075`", ",", 
     "0.1659497306565005`", ",", "0.1249522294960858`", ",", 
     "0.09370476216215078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "930", ",", "0.228605711081285`", ",", "0.20316574023691894`", ",", 
     "0.17086675509157465`", ",", "0.12722987868604965`", ",", 
     "0.1006796757660137`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "940", ",", "0.21404142982210753`", ",", "0.19576289037123318`", ",", 
     "0.16551686829302528`", ",", "0.12548911533894602`", ",", 
     "0.09661308898740556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "950", ",", "0.20868711446628824`", ",", "0.1971580806579711`", ",", 
     "0.14572273694581772`", ",", "0.11092120288880061`", ",", 
     "0.08549560142485156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "960", ",", "0.18234073147452343`", ",", "0.17177047975816595`", ",", 
     "0.1291813513950272`", ",", "0.0926572312918455`", ",", 
     "0.06877654976469647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "970", ",", "0.1603429225269752`", ",", "0.14726506744781753`", ",", 
     "0.10346732391220868`", ",", "0.07882655225377551`", ",", 
     "0.05221276889169111`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "980", ",", "0.15068546174989955`", ",", "0.1364852420151073`", ",", 
     "0.09459393028324833`", ",", "0.0587307804074547`", ",", 
     "0.0437808252541885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "990", ",", "0.16343861895133904`", ",", "0.13750540578572076`", ",", 
     "0.08697160495311929`", ",", "0.05835540849438005`", ",", 
     "0.040731414061318624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1000", ",", "0.16907928106735684`", ",", "0.1384238928478834`", ",", 
     "0.08966205908470955`", ",", "0.05937533467596332`", ",", 
     "0.04513195905549774`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "0.18389740201922083`", ",", "0.1420910415824196`", ",", 
     "0.09298954011716119`", ",", "0.05537153956342437`", ",", 
     "0.041398381837882664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1020", ",", "0.1931527493826089`", ",", "0.1466205009081634`", ",", 
     "0.09116999074122191`", ",", "0.05588906853656679`", ",", 
     "0.040262149241250156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1030", ",", "0.1961353242836746`", ",", "0.15027037822096737`", ",", 
     "0.09202849048494828`", ",", "0.05898174291174799`", ",", 
     "0.0436025644742469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1040", ",", "0.19507069172045816`", ",", "0.1465632783156144`", ",", 
     "0.09142360206736751`", ",", "0.056242651333081504`", ",", 
     "0.044017605891844724`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1050", ",", "0.18201561952302023`", ",", "0.13872621135510696`", ",", 
     "0.08941983801512464`", ",", "0.0558768805291825`", ",", 
     "0.039664633178595504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1060", ",", "0.1665495009495198`", ",", "0.1325450067450823`", ",", 
     "0.08599586331821733`", ",", "0.05336910239888235`", ",", 
     "0.04081166103749319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1070", ",", "0.15766093073926674`", ",", "0.13082522442444605`", ",", 
     "0.08882557811534009`", ",", "0.06012650139110814`", ",", 
     "0.04158495680766492`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1080", ",", "0.17577493628462051`", ",", "0.14605504353240803`", ",", 
     "0.10693518951470642`", ",", "0.07281991101597379`", ",", 
     "0.04945543186539147`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1090", ",", "0.18806645249478743`", ",", "0.1671345095966942`", ",", 
     "0.12059387812075029`", ",", "0.0909241465595692`", ",", 
     "0.06521814664498694`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1100", ",", "0.203922534260418`", ",", "0.18501095150734823`", ",", 
     "0.15357048509061597`", ",", "0.12355572352378058`", ",", 
     "0.08582283039730557`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1110", ",", "0.2104227792362125`", ",", "0.20386948452613798`", ",", 
     "0.16622481366821598`", ",", "0.12869673622249148`", ",", 
     "0.08415983667345339`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1120", ",", "0.21811145590469638`", ",", "0.21574574985037875`", ",", 
     "0.1755489698808251`", ",", "0.12616933216970713`", ",", 
     "0.09968883524612195`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1130", ",", "0.22711865586411983`", ",", "0.2199017379269013`", ",", 
     "0.17798163738474196`", ",", "0.1331490263815349`", ",", 
     "0.09588420653637031`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1140", ",", "0.21301426937416076`", ",", "0.2162425151848289`", ",", 
     "0.17328625053109128`", ",", "0.12597125984463667`", ",", 
     "0.08953490754252763`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1150", ",", "0.18969267173507648`", ",", "0.20032163094535582`", ",", 
     "0.1526584240231194`", ",", "0.11773969834663636`", ",", 
     "0.08230419304134777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1160", ",", "0.1755393758992961`", ",", "0.17405229153843266`", ",", 
     "0.12947767248397887`", ",", "0.08951393661689096`", ",", 
     "0.07285628793190052`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1170", ",", "0.15914264291183344`", ",", "0.15519599406292078`", ",", 
     "0.11812796748742543`", ",", "0.08781342058685797`", ",", 
     "0.055036949002064406`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1180", ",", "0.1551087542203112`", ",", "0.1445027621886875`", ",", 
     "0.102095970961037`", ",", "0.0675546186996966`", ",", 
     "0.04556690859300021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1190", ",", "0.1614221908087323`", ",", "0.14091520167572133`", ",", 
     "0.09195101148465419`", ",", "0.06565741968435145`", ",", 
     "0.04354604063899092`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1200", ",", "0.17794809656400423`", ",", "0.14611782544604185`", ",", 
     "0.09585774401834202`", ",", "0.0667768585273168`", ",", 
     "0.04680120700189239`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1210", ",", "0.19489640958610416`", ",", "0.155992762538013`", ",", 
     "0.10517896696401949`", ",", "0.0685945871116733`", ",", 
     "0.04952561728776308`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1220", ",", "0.20394785438318236`", ",", "0.1625385277099972`", ",", 
     "0.10844145770356298`", ",", "0.0690436408114995`", ",", 
     "0.052918964092572254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1230", ",", "0.20740108148098196`", ",", "0.16135029246163363`", ",", 
     "0.10698584004786467`", ",", "0.07018309495068169`", ",", 
     "0.056174677765452194`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1240", ",", "0.20596597126290864`", ",", "0.1599952964527323`", ",", 
     "0.10672239715653677`", ",", "0.06909720099420896`", ",", 
     "0.051093619743372835`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1250", ",", "0.19231113291758076`", ",", "0.16241302588528592`", ",", 
     "0.10604558730330134`", ",", "0.06650532375989388`", ",", 
     "0.05124891839762646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1260", ",", "0.17927564077140912`", ",", "0.14366701399731208`", ",", 
     "0.10180605587635208`", ",", "0.06568462592195962`", ",", 
     "0.04821208085936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1270", ",", "0.15825806465008713`", ",", "0.14999729100797593`", ",", 
     "0.10058807954080198`", ",", "0.06724770109713056`", ",", 
     "0.0475095989666544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1280", ",", "0.1676313333195721`", ",", "0.15644905105718968`", ",", 
     "0.10948273493653918`", ",", "0.07489895090332827`", ",", 
     "0.055573415188708924`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1290", ",", "0.18736930443525668`", ",", "0.17788024141605624`", ",", 
     "0.1334061374324113`", ",", "0.09093794601573689`", ",", 
     "0.06213283392201584`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1300", ",", "0.18608612735907645`", ",", "0.1903915720624706`", ",", 
     "0.14596009166679502`", ",", "0.10462388635998626`", ",", 
     "0.08065001624228998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1310", ",", "0.19400950256070335`", ",", "0.1942604313936202`", ",", 
     "0.15783507478213363`", ",", "0.12181859323193679`", ",", 
     "0.08225586893348075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1320", ",", "0.19875923686417085`", ",", "0.18827373550493998`", ",", 
     "0.16125623141526657`", ",", "0.11913518327406858`", ",", 
     "0.08233774848821937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1330", ",", "0.1960062824987236`", ",", "0.19263078246992751`", ",", 
     "0.15112718717663123`", ",", "0.11315220974215782`", ",", 
     "0.08064597148173593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1340", ",", "0.18855651183300087`", ",", "0.18209725827509204`", ",", 
     "0.13619542647005117`", ",", "0.10005033099002877`", ",", 
     "0.07112714330617861`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1350", ",", "0.17118057856295757`", ",", "0.17463516446553504`", ",", 
     "0.12938432579902456`", ",", "0.08959697412307081`", ",", 
     "0.06368275148968135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1360", ",", "0.16292532938668597`", ",", "0.1612773459486197`", ",", 
     "0.11888770053394368`", ",", "0.08275096780817344`", ",", 
     "0.055044557306399504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1370", ",", "0.16089057598715897`", ",", "0.15164475998092342`", ",", 
     "0.10772533366136264`", ",", "0.07165489807044925`", ",", 
     "0.0522247815866803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1380", ",", "0.16294153360623745`", ",", "0.14451498658091133`", ",", 
     "0.10154344338320412`", ",", "0.06634296324806155`", ",", 
     "0.047188013088374725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1390", ",", "0.17424097157141386`", ",", "0.14450612309970673`", ",", 
     "0.09870615873565514`", ",", "0.0638999507573194`", ",", 
     "0.04537237875205846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1400", ",", "0.18857565661852868`", ",", "0.15663223428726328`", ",", 
     "0.1023059223681483`", ",", "0.07134900330070945`", ",", 
     "0.045758066452830745`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1410", ",", "0.19489989561630772`", ",", "0.15795770589081118`", ",", 
     "0.10378854984092645`", ",", "0.06636062193448367`", ",", 
     "0.047543872149819075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1420", ",", "0.20454541978498286`", ",", "0.16301362210415524`", ",", 
     "0.11281168016989344`", ",", "0.07407170300569205`", ",", 
     "0.05112499632043139`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1430", ",", "0.19434498388178262`", ",", "0.16988751622886938`", ",", 
     "0.11681527265199243`", ",", "0.0748354408297081`", ",", 
     "0.053689553384026145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1440", ",", "0.18343548860444003`", ",", "0.16566569837232586`", ",", 
     "0.11563823473480266`", ",", "0.07161323105528347`", ",", 
     "0.05591959865720267`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1450", ",", "0.16515025800278366`", ",", "0.15641353964692437`", ",", 
     "0.10846692944108488`", ",", "0.07544309592096798`", ",", 
     "0.051355030280940205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1460", ",", "0.1647032555530307`", ",", "0.15005967751159424`", ",", 
     "0.10669626058436266`", ",", "0.07025495731539742`", ",", 
     "0.05053137788206005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1470", ",", "0.1668607504999346`", ",", "0.16027503725460912`", ",", 
     "0.11467231966912278`", ",", "0.07902783969896118`", ",", 
     "0.055503549394893784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1480", ",", "0.17318519149629322`", ",", "0.17445976089122173`", ",", 
     "0.12802636083554014`", ",", "0.09550735020009977`", ",", 
     "0.06798655542066256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1490", ",", "0.1901874743677725`", ",", "0.19741873602214816`", ",", 
     "0.1502543105882015`", ",", "0.10743316149706679`", ",", 
     "0.08328134342885915`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1500", ",", "0.1965562254097174`", ",", "0.19102789183926958`", ",", 
     "0.1400726833072659`", ",", "0.11594232744495996`", ",", 
     "0.08255187459453292`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1510", ",", "0.19371782968811227`", ",", "0.19417846158868743`", ",", 
     "0.161896850713947`", ",", "0.11323900696283107`", ",", 
     "0.07729527100069147`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1520", ",", "0.19322483532920212`", ",", "0.1901032850328192`", ",", 
     "0.15624724717014518`", ",", "0.10682848983314028`", ",", 
     "0.09052563659598263`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1530", ",", "0.19209173201499066`", ",", "0.1903692503400196`", ",", 
     "0.13827335586144787`", ",", "0.10673782244663468`", ",", 
     "0.07779405052118209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1540", ",", "0.18354506511626387`", ",", "0.18669717762911806`", ",", 
     "0.1455805079985367`", ",", "0.10888471547284319`", ",", 
     "0.0788509224363765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1550", ",", "0.1798321829659565`", ",", "0.18103998634892018`", ",", 
     "0.14829001626032612`", ",", "0.10399358764276477`", ",", 
     "0.07301337813462017`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1560", ",", "0.17757844089008168`", ",", "0.16553453344129998`", ",", 
     "0.13158072330252257`", ",", "0.09002741799671757`", ",", 
     "0.06180021996119646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1570", ",", "0.2251788272136802`", ",", "0.14758926379017048`", ",", 
     "0.09624672048844253`", ",", "0.06309138919136086`", ",", 
     "0.04396682695698469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1580", ",", "0.28071005518996023`", ",", "0.15775546469621501`", ",", 
     "0.09805600552568128`", ",", "0.05944240846856832`", ",", 
     "0.041039219933463995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1590", ",", "0.297649646309295`", ",", "0.1701658515969529`", ",", 
     "0.09630390763335307`", ",", "0.06379925470276075`", ",", 
     "0.04230670682618488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1600", ",", "0.29749988672982297`", ",", "0.16693687943403981`", ",", 
     "0.10249388670203725`", ",", "0.06234088151756151`", ",", 
     "0.04455729079303868`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1610", ",", "0.27679383047512973`", ",", "0.16604030234132724`", ",", 
     "0.09989013036038229`", ",", "0.06399051542352015`", ",", 
     "0.04387785430607229`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1620", ",", "0.24709566024114107`", ",", "0.15179025524358958`", ",", 
     "0.09699799269392556`", ",", "0.060963363474617005`", ",", 
     "0.04476152183052201`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1630", ",", "0.21727283476849416`", ",", "0.1447193711186947`", ",", 
     "0.09699117234165333`", ",", "0.06452831343329345`", ",", 
     "0.04391121860294087`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1640", ",", "0.18635822146232237`", ",", "0.14186510403847954`", ",", 
     "0.09840397537034956`", ",", "0.06703873373891638`", ",", 
     "0.04582783312579522`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1650", ",", "0.1692085836521842`", ",", "0.15073399844847327`", ",", 
     "0.11196245792973675`", ",", "0.07163373576566127`", ",", 
     "0.05147905214506423`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1660", ",", "0.1694697660741584`", ",", "0.15341722011138545`", ",", 
     "0.10782632048790665`", ",", "0.07749455819329316`", ",", 
     "0.056143635391057795`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1670", ",", "0.17034348369391866`", ",", "0.15698431514268313`", ",", 
     "0.11410706889698541`", ",", "0.07350804268418977`", ",", 
     "0.055667786260589464`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1680", ",", "0.1736321059877192`", ",", "0.1559220258666645`", ",", 
     "0.11831109023902639`", ",", "0.07657032218514284`", ",", 
     "0.05472090497121528`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1690", ",", "0.16963206224320143`", ",", "0.15145965270525988`", ",", 
     "0.11153489256140928`", ",", "0.06722332882435986`", ",", 
     "0.053408079238453345`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1700", ",", "0.1738756988608186`", ",", "0.14668795885540797`", ",", 
     "0.10657414611910072`", ",", "0.0697245999065181`", ",", 
     "0.05408096039488747`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1710", ",", "0.1789120076041739`", ",", "0.14759721968641715`", ",", 
     "0.1022235099197095`", ",", "0.07120141814602604`", ",", 
     "0.04804225655097365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1720", ",", "0.17293924807537914`", ",", "0.14866113036349782`", ",", 
     "0.10627132776831195`", ",", "0.07036749632825529`", ",", 
     "0.04906816870648859`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1730", ",", "0.1657694397573016`", ",", "0.14711519765960257`", ",", 
     "0.10653068244698059`", ",", "0.07142552389458819`", ",", 
     "0.050049775365906636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1740", ",", "0.17258220977567493`", ",", "0.14919997633356843`", ",", 
     "0.10779020279598389`", ",", "0.0703697175098317`", ",", 
     "0.050152084836936034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1750", ",", "0.1631908793659474`", ",", "0.1455255813422418`", ",", 
     "0.10342808211760907`", ",", "0.06601004357687047`", ",", 
     "0.04783414507430584`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1760", ",", "0.18587998964023122`", ",", "0.1402217206921131`", ",", 
     "0.08498053076215767`", ",", "0.05752344272403057`", ",", 
     "0.043251468663475894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1770", ",", "0.19147000961218563`", ",", "0.13710407741322322`", ",", 
     "0.08925283633500357`", ",", "0.05636296427976887`", ",", 
     "0.04203422435553432`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1780", ",", "0.1907440701643485`", ",", "0.1370698069897802`", ",", 
     "0.08842551234412539`", ",", "0.057297586439360185`", ",", 
     "0.043427844175523624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1790", ",", "0.17628812719030265`", ",", "0.13799059025653598`", ",", 
     "0.0942752172521359`", ",", "0.06399545847845059`", ",", 
     "0.0464254473994165`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1800", ",", "0.16980734284022797`", ",", "0.13870288198494302`", ",", 
     "0.08989295375876889`", ",", "0.06041432219167862`", ",", 
     "0.04388963636241168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1810", ",", "0.18524364842936758`", ",", "0.13975708269387926`", ",", 
     "0.09311082115254013`", ",", "0.05557970265431582`", ",", 
     "0.04312704762657502`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1820", ",", "0.19763273116599242`", ",", "0.13530768401343285`", ",", 
     "0.08797590528498477`", ",", "0.05863568845038297`", ",", 
     "0.04237463447147129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1830", ",", "0.20556990947918635`", ",", "0.1367023873848717`", ",", 
     "0.09200850985698698`", ",", "0.058518152852685704`", ",", 
     "0.04215862461905051`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1840", ",", "0.20800744031181367`", ",", "0.13881610588713564`", ",", 
     "0.08706886201272464`", ",", "0.05625562559060616`", ",", 
     "0.04122370976393193`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1850", ",", "0.21214254746509992`", ",", "0.1410502047469474`", ",", 
     "0.08600787051060356`", ",", "0.05791692355698046`", ",", 
     "0.04138109758872342`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1860", ",", "0.2047193232667281`", ",", "0.13635114881729568`", ",", 
     "0.08506656390978044`", ",", "0.053808558284014874`", ",", 
     "0.04035391825156574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1870", ",", "0.1968389591226206`", ",", "0.13203910981569728`", ",", 
     "0.08551914937102549`", ",", "0.055322495455037805`", ",", 
     "0.03845861817978381`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1880", ",", "0.19089606362022202`", ",", "0.13447421411756855`", ",", 
     "0.08534325765487032`", ",", "0.05376449860852559`", ",", 
     "0.040652474878517246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1890", ",", "0.18106881558494212`", ",", "0.12983388671675233`", ",", 
     "0.08392642329528645`", ",", "0.05445103634412288`", ",", 
     "0.039832520494931314`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1900", ",", "0.1686680119276478`", ",", "0.13024102293054035`", ",", 
     "0.08961752672119329`", ",", "0.055959705917393424`", ",", 
     "0.03878567230309921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1910", ",", "0.16011687793361284`", ",", "0.13601175612300637`", ",", 
     "0.09840902251141866`", ",", "0.05879049475769718`", ",", 
     "0.044651951781845556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1920", ",", "0.15959672064261946`", ",", "0.14007190212865497`", ",", 
     "0.0970025791097399`", ",", "0.06553019642039294`", ",", 
     "0.04371274350210481`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1930", ",", "0.1555647263500612`", ",", "0.14675950569710253`", ",", 
     "0.10628157823519636`", ",", "0.06661081273021603`", ",", 
     "0.05031807285029892`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1940", ",", "0.15045970044317938`", ",", "0.15119592022003153`", ",", 
     "0.12077544938596962`", ",", "0.07151443436540454`", ",", 
     "0.051370553874384974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1950", ",", "0.15198187807921104`", ",", "0.14161271985717017`", ",", 
     "0.10002779746932174`", ",", "0.06937746794087901`", ",", 
     "0.05265089362005256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1960", ",", "0.14936009404036626`", ",", "0.13839975001552038`", ",", 
     "0.09754718157636487`", ",", "0.06573189164543336`", ",", 
     "0.04878443276238496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1970", ",", "0.1517395907425169`", ",", "0.13704135230104803`", ",", 
     "0.09447655133573785`", ",", "0.06388118777597185`", ",", 
     "0.0482113577569714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1980", ",", "0.15227977896529027`", ",", "0.14010631058491763`", ",", 
     "0.10058401421015643`", ",", "0.06399026369392266`", ",", 
     "0.046856063879197586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1990", ",", "0.15309659984263016`", ",", "0.135157599502746`", ",", 
     "0.09401115920271079`", ",", "0.06340758888752404`", ",", 
     "0.04683054478000676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2000", ",", "0.1517704601052139`", ",", "0.1317073137825361`", ",", 
     "0.09453483100766398`", ",", "0.060606171147066346`", ",", 
     "0.04504091780064796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2010", ",", "0.15281391210392054`", ",", "0.133826602109541`", ",", 
     "0.09444559258315945`", ",", "0.05947620970730019`", ",", 
     "0.043713622164542845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2020", ",", "0.15338678227299427`", ",", "0.13242904834828778`", ",", 
     "0.08950915391736013`", ",", "0.060259331044461906`", ",", 
     "0.04113820910204555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2030", ",", "0.15545107982644676`", ",", "0.12954564353355558`", ",", 
     "0.09489372772198797`", ",", "0.0585162070636167`", ",", 
     "0.04275720892066751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2040", ",", "0.15124182716075563`", ",", "0.129894241071065`", ",", 
     "0.09201289262809405`", ",", "0.0596128180860744`", ",", 
     "0.03982239703714236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2050", ",", "0.15734068245449143`", ",", "0.1303553059383554`", ",", 
     "0.0893982129618911`", ",", "0.06408295336126614`", ",", 
     "0.04245857996774587`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2060", ",", "0.15388870304155583`", ",", "0.1328696625749316`", ",", 
     "0.09329366690118865`", ",", "0.06089104517226868`", ",", 
     "0.042193740652471404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2070", ",", "0.1622947907515186`", ",", "0.13591706248603755`", ",", 
     "0.09488843957932733`", ",", "0.06188302359047642`", ",", 
     "0.04158154995443552`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2080", ",", "0.16071444218274117`", ",", "0.1370477203196656`", ",", 
     "0.09620628933937106`", ",", "0.06166747560952326`", ",", 
     "0.044333554395978136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2090", ",", "0.15967882069204445`", ",", "0.1315044892587657`", ",", 
     "0.0944255284747608`", ",", "0.05804362144993943`", ",", 
     "0.044939177264035346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2100", ",", "0.15738821259614846`", ",", "0.14134954573594902`", ",", 
     "0.09106316555452376`", ",", "0.06076759796998636`", ",", 
     "0.04456859681503465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2110", ",", "0.1555154890467896`", ",", "0.13778652597305022`", ",", 
     "0.09468820030226838`", ",", "0.06557917087778029`", ",", 
     "0.04451493329855011`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2120", ",", "0.15792009735390025`", ",", "0.1289559359489878`", ",", 
     "0.09065541654009526`", ",", "0.062280652293119194`", ",", 
     "0.04381236337449744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2130", ",", "0.2111429489204516`", ",", "0.1359465644785379`", ",", 
     "0.0853240411251204`", ",", "0.05407541172426464`", ",", 
     "0.039494024019713185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2140", ",", "0.2674649523991638`", ",", "0.15654926687399387`", ",", 
     "0.09517735785088145`", ",", "0.059642482141752926`", ",", 
     "0.04022872419749465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2150", ",", "0.28340400944519134`", ",", "0.16401921925883145`", ",", 
     "0.10106669010728536`", ",", "0.05932220712716208`", ",", 
     "0.04376597203008148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2160", ",", "0.290414111467504`", ",", "0.167887040611289`", ",", 
     "0.10272253925516453`", ",", "0.061128939826438`", ",", 
     "0.04375567075208583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2170", ",", "0.3100288979149499`", ",", "0.17559693649374405`", ",", 
     "0.09980264390311577`", ",", "0.06191076080044313`", ",", 
     "0.044864740718006495`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2180", ",", "0.3085978149136674`", ",", "0.16589676384854105`", ",", 
     "0.0948451401644293`", ",", "0.06039337152975387`", ",", 
     "0.03979343886253099`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2190", ",", "0.3066740539585719`", ",", "0.1601526019624296`", ",", 
     "0.089821212911453`", ",", "0.054283486176007915`", ",", 
     "0.04009075141261166`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2200", ",", "0.3033209461331486`", ",", "0.15715669295243226`", ",", 
     "0.08516242633118486`", ",", "0.053722282140735225`", ",", 
     "0.03870803693472236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2210", ",", "0.2943611999161982`", ",", "0.15447450734295295`", ",", 
     "0.08477978327580225`", ",", "0.05204020059770125`", ",", 
     "0.03828792702037597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2220", ",", "0.2878027977057806`", ",", "0.15359182442995356`", ",", 
     "0.08533050615215869`", ",", "0.05097251673499571`", ",", 
     "0.0380866728024113`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2230", ",", "0.2707200239892159`", ",", "0.14881842155262007`", ",", 
     "0.08139595727304627`", ",", "0.05068307309229511`", ",", 
     "0.03871506153049077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2240", ",", "0.2650386040206048`", ",", "0.13692044637822817`", ",", 
     "0.08149911057564595`", ",", "0.05053106068292427`", ",", 
     "0.037116216603303574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2250", ",", "0.24887870250410948`", ",", "0.1360589883476391`", ",", 
     "0.07856432751614424`", ",", "0.050280605627700904`", ",", 
     "0.03688285442193188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2260", ",", "0.22452729423156192`", ",", "0.12727624494878176`", ",", 
     "0.07636271913613694`", ",", "0.0496290208896182`", ",", 
     "0.03605222837420497`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2270", ",", "0.1956956934333827`", ",", "0.12267530962032176`", ",", 
     "0.07410921219477971`", ",", "0.04865787117976342`", ",", 
     "0.03744324642465932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2280", ",", "0.19016475463464588`", ",", "0.11818462879150558`", ",", 
     "0.07808238658461786`", ",", "0.04911414600876507`", ",", 
     "0.037301737063476274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2290", ",", "0.15931558425572032`", ",", "0.11500733186240983`", ",", 
     "0.07161789269701241`", ",", "0.049622598679308114`", ",", 
     "0.03619618299437181`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2300", ",", "0.1490446859170694`", ",", "0.11154409936068672`", ",", 
     "0.07484573312960363`", ",", "0.048498899692339385`", ",", 
     "0.03632993069762591`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2310", ",", "0.15694623517655606`", ",", "0.11106267593580291`", ",", 
     "0.0709394513510377`", ",", "0.045777531739285754`", ",", 
     "0.035539350710283746`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2320", ",", "0.16234039741501188`", ",", "0.11281102442940592`", ",", 
     "0.06913898340023333`", ",", "0.043840534380990094`", ",", 
     "0.034574596895351445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2330", ",", "0.14768718619343238`", ",", "0.10867294624153223`", ",", 
     "0.06854783951361378`", ",", "0.04436034239930829`", ",", 
     "0.0362215483056493`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2340", ",", "0.1428996861762495`", ",", "0.11023330361178771`", ",", 
     "0.07110372815801866`", ",", "0.04669633743797793`", ",", 
     "0.03424037391905397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2350", ",", "0.14039255645788534`", ",", "0.10877232961037757`", ",", 
     "0.07301060387061456`", ",", "0.04593184582219062`", ",", 
     "0.03662470695873228`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2360", ",", "0.1444070708062488`", ",", "0.11110464303747104`", ",", 
     "0.07073657510412035`", ",", "0.047009537609689456`", ",", 
     "0.0378851542839659`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2370", ",", "0.13838586158989633`", ",", "0.10870970961521077`", ",", 
     "0.07110877311891509`", ",", "0.046622312656333584`", ",", 
     "0.037493559323469296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2380", ",", "0.14241952529141313`", ",", "0.11061958324503318`", ",", 
     "0.07114095321265457`", ",", "0.04694533832821933`", ",", 
     "0.034731469501243006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2390", ",", "0.14233371161841388`", ",", "0.10807507791128998`", ",", 
     "0.07078070485216731`", ",", "0.04618435605169235`", ",", 
     "0.035920609074788404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2400", ",", "0.14349679283557298`", ",", "0.10835247312079738`", ",", 
     "0.0683527148954015`", ",", "0.04456010141787463`", ",", 
     "0.03700646470139017`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2410", ",", "0.14191096731850736`", ",", "0.11003964576637364`", ",", 
     "0.06803403766410623`", ",", "0.044879974041159995`", ",", 
     "0.03432170823253409`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2420", ",", "0.1529568752570906`", ",", "0.10934557985243598`", ",", 
     "0.0711961419427002`", ",", "0.04660963905687483`", ",", 
     "0.03290652616110428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2430", ",", "0.15835255932819872`", ",", "0.11269167727803762`", ",", 
     "0.06701227706932876`", ",", "0.04266732983912165`", ",", 
     "0.03508013513494178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2440", ",", "0.152835603784141`", ",", "0.11117223462231425`", ",", 
     "0.0676829992738016`", ",", "0.04223117423238401`", ",", 
     "0.03481154633546663`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2450", ",", "0.15386629637629207`", ",", "0.10933739216822025`", ",", 
     "0.06544505186230057`", ",", "0.04290050533011796`", ",", 
     "0.033503838466998496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2460", ",", "0.15503362178527244`", ",", "0.11016122478717431`", ",", 
     "0.06818270266252639`", ",", "0.0445047109288626`", ",", 
     "0.033930512966511575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2470", ",", "0.15808618395126917`", ",", "0.10878407391656676`", ",", 
     "0.06577200914593524`", ",", "0.04319542493037195`", ",", 
     "0.03384060711088968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2480", ",", "0.15823884527273627`", ",", "0.10925542985652383`", ",", 
     "0.06657908593492402`", ",", "0.04275049584670467`", ",", 
     "0.03408272284331651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2490", ",", "0.1546430510842701`", ",", "0.10926533850813801`", ",", 
     "0.0682031353982365`", ",", "0.044577070808260594`", ",", 
     "0.034503656015119274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2500", ",", "0.15414002292384746`", ",", "0.11040231067752024`", ",", 
     "0.06735985334804405`", ",", "0.044492952612817466`", ",", 
     "0.036172224660487085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2510", ",", "0.15646327233371357`", ",", "0.11163597390461347`", ",", 
     "0.06727956134320563`", ",", "0.04440426415325364`", ",", 
     "0.03227101539644658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2520", ",", "0.16316280558583424`", ",", "0.11142494660063779`", ",", 
     "0.0673437743211775`", ",", "0.04437451366033247`", ",", 
     "0.03279197136019936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2530", ",", "0.16404540822698357`", ",", "0.11350813609941325`", ",", 
     "0.06585977836039297`", ",", "0.043984596050549205`", ",", 
     "0.032981245306718136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2540", ",", "0.1557298546172579`", ",", "0.11278480520266215`", ",", 
     "0.06980185760871865`", ",", "0.046959208908922155`", ",", 
     "0.036901097045561465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2550", ",", "0.1527546101235146`", ",", "0.11209876722442037`", ",", 
     "0.0682345499408259`", ",", "0.044909570459617985`", ",", 
     "0.03531302660850192`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2560", ",", "0.1515780082428967`", ",", "0.11143458288653171`", ",", 
     "0.06876445412760183`", ",", "0.04308666473332435`", ",", 
     "0.03489691537608366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2570", ",", "0.14866277939088607`", ",", "0.10989981403898774`", ",", 
     "0.06752189281880584`", ",", "0.04279745361627403`", ",", 
     "0.035254977302352844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2580", ",", "0.15053545623116424`", ",", "0.1097677608767182`", ",", 
     "0.06876514844371738`", ",", "0.045096408012435356`", ",", 
     "0.03363979040295792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2590", ",", "0.14752506327576517`", ",", "0.10899421688813411`", ",", 
     "0.06699118539207667`", ",", "0.04355056841367592`", ",", 
     "0.03514167122849209`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2600", ",", "0.16782239550869926`", ",", "0.11322893573256354`", ",", 
     "0.06824487228654447`", ",", "0.04344899009691333`", ",", 
     "0.03417077653341805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2610", ",", "0.16377173191297964`", ",", "0.11332889791264848`", ",", 
     "0.06824185302962663`", ",", "0.04612302108406741`", ",", 
     "0.03447182639520539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2620", ",", "0.15588564516813716`", ",", "0.10930275443479909`", ",", 
     "0.0654625123034633`", ",", "0.04283687401291192`", ",", 
     "0.034748987421879`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2630", ",", "0.1498812680237887`", ",", "0.10798366608604018`", ",", 
     "0.06763585622924366`", ",", "0.042655957643917934`", ",", 
     "0.03463373535121997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2640", ",", "0.14848037297717323`", ",", "0.10788980376846039`", ",", 
     "0.06598833182748613`", ",", "0.04202363444742669`", ",", 
     "0.03436903004051911`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2650", ",", "0.14881612844591158`", ",", "0.10624573523507902`", ",", 
     "0.06388403733197397`", ",", "0.043254562566533906`", ",", 
     "0.034805828684515365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2660", ",", "0.14761044353510533`", ",", "0.1099548946364636`", ",", 
     "0.06652113255140316`", ",", "0.04267322627409221`", ",", 
     "0.034091278987374504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2670", ",", "0.15257590325814624`", ",", "0.1089190182714748`", ",", 
     "0.06488445438237543`", ",", "0.04043218300226507`", ",", 
     "0.03446614026394928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2680", ",", "0.14423697384162124`", ",", "0.11259342904001077`", ",", 
     "0.06316816236438602`", ",", "0.041857975665757406`", ",", 
     "0.033950363176491846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2690", ",", "0.1540788653580153`", ",", "0.10848301509741763`", ",", 
     "0.06439909725561695`", ",", "0.041988243854292624`", ",", 
     "0.03354448107825466`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2700", ",", "0.1497516201433168`", ",", "0.10757428452142445`", ",", 
     "0.0629267111954104`", ",", "0.04071629191780441`", ",", 
     "0.0330028884133286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2710", ",", "0.1472592075320367`", ",", "0.10910298517577763`", ",", 
     "0.06256125350974955`", ",", "0.04144727112784218`", ",", 
     "0.03227570642117698`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2720", ",", "0.14030282302220892`", ",", "0.10694892962012777`", ",", 
     "0.06393918839033964`", ",", "0.04147659720055615`", ",", 
     "0.03232077432610443`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2730", ",", "0.14710230214253145`", ",", "0.10545548066891317`", ",", 
     "0.062028125159732224`", ",", "0.040578538641356396`", ",", 
     "0.033943202077142444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2740", ",", "0.13704394597335062`", ",", "0.10646712041436825`", ",", 
     "0.06331560894125612`", ",", "0.04135219071662583`", ",", 
     "0.03331533054015292`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2750", ",", "0.1347830620881407`", ",", "0.10549162940046608`", ",", 
     "0.061497189841326426`", ",", "0.04231270997235423`", ",", 
     "0.03199826573082266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2760", ",", "0.1392172616245998`", ",", "0.106569907763122`", ",", 
     "0.06252444182838035`", ",", "0.043829285905471235`", ",", 
     "0.03352397318033125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2770", ",", "0.14371656841584343`", ",", "0.10552177706970033`", ",", 
     "0.06213109211653957`", ",", "0.040934661942796505`", ",", 
     "0.034641362604415055`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2780", ",", "0.13401821665379376`", ",", "0.10680157899754542`", ",", 
     "0.062214179886100604`", ",", "0.041034455898576704`", ",", 
     "0.03306805419038994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2790", ",", "0.13398823909999344`", ",", "0.10347654508271997`", ",", 
     "0.06403255051157916`", ",", "0.04172044427843154`", ",", 
     "0.03467090250838806`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2800", ",", "0.12694346382602434`", ",", "0.10588872128524002`", ",", 
     "0.06213354764567788`", ",", "0.04148424069636142`", ",", 
     "0.033914682181219624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2810", ",", "0.19128542174308788`", ",", "0.12562300325889006`", ",", 
     "0.07100054118397084`", ",", "0.04914753295716791`", ",", 
     "0.034978995154229316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2820", ",", "0.2535384219479928`", ",", "0.1474189519661045`", ",", 
     "0.08586408041935643`", ",", "0.05581098643521081`", ",", 
     "0.03956853510905252`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2830", ",", "0.27136965467489854`", ",", "0.15414286113904635`", ",", 
     "0.09504144254220936`", ",", "0.05489792202508146`", ",", 
     "0.03885174068968923`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2840", ",", "0.28639272396976284`", ",", "0.1592388001144371`", ",", 
     "0.09157984283610013`", ",", "0.05472403029746785`", ",", 
     "0.04055722005545485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2850", ",", "0.24893889410137526`", ",", "0.1560208570843802`", ",", 
     "0.10387035475091311`", ",", "0.07001195691864232`", ",", 
     "0.04828464101721519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2860", ",", "0.23977287794958657`", ",", "0.1606915768944963`", ",", 
     "0.10385123119474424`", ",", "0.0658528707573197`", ",", 
     "0.044744315282921256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2870", ",", "0.24718192241204776`", ",", "0.17158032441519155`", ",", 
     "0.10990693738428667`", ",", "0.06719797938119848`", ",", 
     "0.04581775941207679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2880", ",", "0.252703800956789`", ",", "0.15863023283104`", ",", 
     "0.10235598522654765`", ",", "0.0623358835485987`", ",", 
     "0.04262595841266608`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2890", ",", "0.2522859936265389`", ",", "0.14518988531626548`", ",", 
     "0.09161796721124894`", ",", "0.054504594391282336`", ",", 
     "0.03957696327559246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2900", ",", "0.35797047136109494`", ",", "0.31403383427200066`", ",", 
     "0.2361992836459405`", ",", "0.1890607613087606`", ",", 
     "0.13543023255037126`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2910", ",", "0.3439832318116283`", ",", "0.2842328904459461`", ",", 
     "0.19992464521890985`", ",", "0.15099887041929214`", ",", 
     "0.11484740975809192`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2920", ",", "0.26775967292411135`", ",", "0.1654161899788632`", ",", 
     "0.1043949381169416`", ",", "0.05978620365148387`", ",", 
     "0.04231301623999533`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2930", ",", "0.26201997921329523`", ",", "0.15256960973798867`", ",", 
     "0.07933889809273456`", ",", "0.04878098696524858`", ",", 
     "0.03436797921174085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2940", ",", "0.18721085525784456`", ",", "0.12242023421311325`", ",", 
     "0.06811855479866144`", ",", "0.043740024581644166`", ",", 
     "0.03402182630411134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2950", ",", "0.11738502376800866`", ",", "0.11077389932859054`", ",", 
     "0.06718815037389132`", ",", "0.04434018471976559`", ",", 
     "0.034111847756878665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2960", ",", "0.10031983516064866`", ",", "0.10732886389190653`", ",", 
     "0.06430321873635489`", ",", "0.040300055024525966`", ",", 
     "0.03567233770094919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2970", ",", "0.14568902973058256`", ",", "0.11601760754867799`", ",", 
     "0.06392684866828467`", ",", "0.043914168441081626`", ",", 
     "0.03534790926889056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2980", ",", "0.18389352739369352`", ",", "0.12458647562805993`", ",", 
     "0.07356592385985049`", ",", "0.04476040429316609`", ",", 
     "0.03591873544388712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2990", ",", "0.2000885183252207`", ",", "0.12725801546338794`", ",", 
     "0.07203112913800663`", ",", "0.043807583000870155`", ",", 
     "0.036778469869040216`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3000", ",", "0.17693636664265672`", ",", "0.1253110226771598`", ",", 
     "0.07090577131415618`", ",", "0.04570298790582828`", ",", 
     "0.03499638999691922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3010", ",", "0.16706955172340685`", ",", "0.12710112827238068`", ",", 
     "0.07245109067877456`", ",", "0.046296190285845`", ",", 
     "0.035359886331291085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3020", ",", "0.17413553897786588`", ",", "0.13117945776187742`", ",", 
     "0.07427030026264528`", ",", "0.04596147459798851`", ",", 
     "0.036194246119599455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3030", ",", "0.1771936098255661`", ",", "0.12763995533463537`", ",", 
     "0.0737719441736914`", ",", "0.04558164476157914`", ",", 
     "0.03606537670525525`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3040", ",", "0.20345614886722135`", ",", "0.1400504958960191`", ",", 
     "0.07540381682454783`", ",", "0.04702985675877644`", ",", 
     "0.035075809493380065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3050", ",", "0.2191022609973675`", ",", "0.1429569654438253`", ",", 
     "0.07637387970563385`", ",", "0.04635403141505153`", ",", 
     "0.0348629205212459`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3060", ",", "0.20089393516965037`", ",", "0.12837040530453248`", ",", 
     "0.07177972996887462`", ",", "0.043750119322285404`", ",", 
     "0.03383932797860859`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3070", ",", "0.1974722091293863`", ",", "0.12108961254733339`", ",", 
     "0.06391723418617844`", ",", "0.04267668750777406`", ",", 
     "0.0330072748876626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3080", ",", "0.19419954921590363`", ",", "0.11938563532656675`", ",", 
     "0.06391842649413351`", ",", "0.04272882108896893`", ",", 
     "0.03284507380030032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3090", ",", "0.1928306651993058`", ",", "0.12009573345348123`", ",", 
     "0.0645829508239458`", ",", "0.04064146964379627`", ",", 
     "0.03264944176183202`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3100", ",", "0.1891699048483823`", ",", "0.11818493022389011`", ",", 
     "0.06248921225501003`", ",", "0.044102173342545896`", ",", 
     "0.03146089822958673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3110", ",", "0.19457137309986594`", ",", "0.12306453940890051`", ",", 
     "0.06641859042945021`", ",", "0.042495610494753346`", ",", 
     "0.033918711760657444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3120", ",", "0.1747244566891278`", ",", "0.11628882983253258`", ",", 
     "0.0642128843485303`", ",", "0.04135025719407783`", ",", 
     "0.03284028537701685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3130", ",", "0.2324701515116938`", ",", "0.13150768220608022`", ",", 
     "0.0732786712757772`", ",", "0.04599245965521473`", ",", 
     "0.03322554913432373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3140", ",", "0.23722438093740314`", ",", "0.1397780102909784`", ",", 
     "0.08738578363414391`", ",", "0.05024567034704917`", ",", 
     "0.03964028591698591`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3150", ",", "0.23321535401165283`", ",", "0.14574155535404756`", ",", 
     "0.087534616399002`", ",", "0.05148870052777096`", ",", 
     "0.03729726763269228`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3160", ",", "0.2409753953187168`", ",", "0.13623762267147937`", ",", 
     "0.08033871908008468`", ",", "0.05044582960957796`", ",", 
     "0.0377373206377225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3170", ",", "0.20915291702368624`", ",", "0.13090898483622343`", ",", 
     "0.07190856357579328`", ",", "0.04573254227266649`", ",", 
     "0.034388454775857134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3180", ",", "0.19630197076741585`", ",", "0.12359012733246316`", ",", 
     "0.06834245416086154`", ",", "0.04260475993743091`", ",", 
     "0.03483373501281956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3190", ",", "0.1943391455928288`", ",", "0.11864776093237285`", ",", 
     "0.06396688251997494`", ",", "0.04032550256406385`", ",", 
     "0.03513447453201706`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3200", ",", "0.24829493963041008`", ",", "0.15810663449524054`", ",", 
     "0.08261943927419238`", ",", "0.05194123375516442`", ",", 
     "0.036237076297571134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3210", ",", "0.19582053153130652`", ",", "0.11436319547222211`", ",", 
     "0.06231081263625227`", ",", "0.04062668967363781`", ",", 
     "0.0341707407823713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3220", ",", "0.23599842861476206`", ",", "0.13037186038320434`", ",", 
     "0.06764785644679608`", ",", "0.04290778005536832`", ",", 
     "0.033497820176509804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3230", ",", "0.24755344951640507`", ",", "0.14047684039346714`", ",", 
     "0.07213618820076827`", ",", "0.045333707932046725`", ",", 
     "0.034115211971999945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3240", ",", "0.21661839827843168`", ",", "0.12864239861306445`", ",", 
     "0.06631167494094856`", ",", "0.04031137225867168`", ",", 
     "0.03391935395219548`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3250", ",", "0.17686411057455995`", ",", "0.10905126210238408`", ",", 
     "0.06053312456821194`", ",", "0.040225582541469324`", ",", 
     "0.03303151693157823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3260", ",", "0.2935344817053195`", ",", "0.1365726767929535`", ",", 
     "0.07408431520847947`", ",", "0.04432907880499748`", ",", 
     "0.034279120384680964`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3270", ",", "0.23232618292724794`", ",", "0.16455647825041356`", ",", 
     "0.10939107825666532`", ",", "0.07313811701840334`", ",", 
     "0.05102556166923524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3280", ",", "0.20780690435580496`", ",", "0.14027219155286275`", ",", 
     "0.09613016812369791`", ",", "0.06265653847817473`", ",", 
     "0.045870275027575444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3290", ",", "0.16816974570585996`", ",", "0.12315846231206237`", ",", 
     "0.07748718708949723`", ",", "0.049775460648866954`", ",", 
     "0.03784134044685929`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3300", ",", "0.16466309783519797`", ",", "0.11633188463317001`", ",", 
     "0.07407757510070585`", ",", "0.04773464954013389`", ",", 
     "0.035256592978734076`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3310", ",", "0.18364032941984357`", ",", "0.11924924174869132`", ",", 
     "0.07868707445041356`", ",", "0.04800081850166518`", ",", 
     "0.036161399731077515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3320", ",", "0.11090678766653597`", ",", "0.09047405323444342`", ",", 
     "0.05640221376585545`", ",", "0.03824304007547621`", ",", 
     "0.032850025790984366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3330", ",", "0.1529577474173405`", ",", "0.10874766396373567`", ",", 
     "0.0682137632663439`", ",", "0.044533503479432274`", ",", 
     "0.03446310330497552`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3340", ",", "0.16499999850477862`", ",", "0.11017644346955291`", ",", 
     "0.07032203194066172`", ",", "0.04387042608167795`", ",", 
     "0.03393482362984164`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3350", ",", "0.17984785712492815`", ",", "0.11826550730730331`", ",", 
     "0.08366336516723745`", ",", "0.05121297559807778`", ",", 
     "0.038229124908504775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3360", ",", "0.22202655112966302`", ",", "0.15102378244841697`", ",", 
     "0.10163140666440028`", ",", "0.06208328014347859`", ",", 
     "0.04449922908914134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3370", ",", "0.19251853392778528`", ",", "0.1375831570485481`", ",", 
     "0.08956471387423964`", ",", "0.0568898914683583`", ",", 
     "0.039041126158345825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3380", ",", "0.14826223785789047`", ",", "0.11536493114037116`", ",", 
     "0.07216810959893746`", ",", "0.046766548264429136`", ",", 
     "0.03623923836088129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3390", ",", "0.13821107484053113`", ",", "0.10806325603722065`", ",", 
     "0.0661319684197844`", ",", "0.04404370022225829`", ",", 
     "0.0349274300994179`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3400", ",", "0.15682243226051173`", ",", "0.11167227406197064`", ",", 
     "0.0664955468547978`", ",", "0.04429292205553557`", ",", 
     "0.03495598493278049`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3410", ",", "0.14594819205510245`", ",", "0.10237904933381266`", ",", 
     "0.06279727574808634`", ",", "0.043451954662004265`", ",", 
     "0.03315193637150154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3420", ",", "0.1464906381703252`", ",", "0.10207444792057033`", ",", 
     "0.0625341167210595`", ",", "0.04102533882063064`", ",", 
     "0.034332128713931084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3430", ",", "0.14894601820490458`", ",", "0.09837017762587179`", ",", 
     "0.05866544910485996`", ",", "0.03961973141042954`", ",", 
     "0.03139105206693146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3440", ",", "0.12338633311750218`", ",", "0.08802851957061833`", ",", 
     "0.0532867328061058`", ",", "0.039831819502626396`", ",", 
     "0.033729929123583635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3450", ",", "0.12820467793836338`", ",", "0.09049651829667324`", ",", 
     "0.05644589397983308`", ",", "0.03936279234617642`", ",", 
     "0.033700710332679504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3460", ",", "0.18906396184851781`", ",", "0.12405461918817916`", ",", 
     "0.07918443683160044`", ",", "0.04844082567743392`", ",", 
     "0.03494543446221991`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3470", ",", "0.18067126896128324`", ",", "0.10836375133969266`", ",", 
     "0.06265292556819414`", ",", "0.04165310965216599`", ",", 
     "0.03301962278218355`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3480", ",", "0.17368606497315744`", ",", "0.10110650816046445`", ",", 
     "0.055565549436002025`", ",", "0.038175269010764026`", ",", 
     "0.03245365302548796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3490", ",", "0.23811546301079015`", ",", "0.12201977651964163`", ",", 
     "0.06765873955577584`", ",", "0.04177747833347456`", ",", 
     "0.03236803956671964`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3500", ",", "0.21757111350556127`", ",", "0.11978544004729984`", ",", 
     "0.06167660574312984`", ",", "0.04070557278533408`", ",", 
     "0.03243744711063853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3510", ",", "0.18112962162442703`", ",", "0.11132925521186017`", ",", 
     "0.06228710967388146`", ",", "0.04092309167999293`", ",", 
     "0.03355752843379471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3520", ",", "0.15620422661752675`", ",", "0.10933199525367904`", ",", 
     "0.06050775132820666`", ",", "0.039518051708639645`", ",", 
     "0.03309826086681768`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3530", ",", "0.13990725491428474`", ",", "0.10073244892126879`", ",", 
     "0.05829525167318544`", ",", "0.04189895263617956`", ",", 
     "0.03382916092106823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3540", ",", "0.12284711431168821`", ",", "0.0929636438707934`", ",", 
     "0.05223886681628781`", ",", "0.03811282210834191`", ",", 
     "0.03271178983996524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3550", ",", "0.11469390614911956`", ",", "0.08110368434411808`", ",", 
     "0.049168638674539224`", ",", "0.039083954743004516`", ",", 
     "0.034008512970311246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3560", ",", "0.07988700740829055`", ",", "0.0704907419536446`", ",", 
     "0.04773481587762936`", ",", "0.03471638843314955`", ",", 
     "0.031313791056831464`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3570", ",", "0.11630449199328408`", ",", "0.08113789645926164`", ",", 
     "0.04830171736283351`", ",", "0.03632991686073583`", ",", 
     "0.02939255914749902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3580", ",", "0.12234800494309137`", ",", "0.08310749888133742`", ",", 
     "0.04937477049073762`", ",", "0.037760116389646`", ",", 
     "0.031606437467028084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3590", ",", "0.14205550202706665`", ",", "0.08658201834062362`", ",", 
     "0.049936089278310496`", ",", "0.03824386790935263`", ",", 
     "0.031236647484095773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3600", ",", "0.20357812611656062`", ",", "0.11042233571584832`", ",", 
     "0.06450527342793969`", ",", "0.04305481184403958`", ",", 
     "0.03429716916293321`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3610", ",", "0.16120968448250905`", ",", "0.10239099087074469`", ",", 
     "0.06332582818128193`", ",", "0.04277286275644053`", ",", 
     "0.034270673080211346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3620", ",", "0.09544589148269061`", ",", "0.07951100987344681`", ",", 
     "0.0506158875491023`", ",", "0.037571170056046425`", ",", 
     "0.03385429639824425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3630", ",", "0.08796687691553143`", ",", "0.07916964550162225`", ",", 
     "0.05302589861930337`", ",", "0.04045694790892779`", ",", 
     "0.03446922739806964`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3640", ",", "0.10741916415105157`", ",", "0.08296887859511846`", ",", 
     "0.05296576776898524`", ",", "0.040030943060076464`", ",", 
     "0.03315789191346751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3650", ",", "0.15606640718508236`", ",", "0.09891311638058159`", ",", 
     "0.05711991631417858`", ",", "0.03839457778530588`", ",", 
     "0.03163516707405803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3660", ",", "0.11326877277239089`", ",", "0.08391373627238002`", ",", 
     "0.05044289591787092`", ",", "0.0380496172842857`", ",", 
     "0.03230535463120483`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3670", ",", "0.08670109271463143`", ",", "0.07654988652045895`", ",", 
     "0.052020401799216937`", ",", "0.03817298740452226`", ",", 
     "0.03408540572801779`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3680", ",", "0.1205546087883488`", ",", "0.08511907563903849`", ",", 
     "0.05858535227668651`", ",", "0.03917186913876888`", ",", 
     "0.032608928365855515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3690", ",", "0.08827038897651415`", ",", "0.07715858216837328`", ",", 
     "0.05388237574292917`", ",", "0.038166014405316716`", ",", 
     "0.03215425433231391`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3700", ",", "0.08832265363023033`", ",", "0.08085844192430165`", ",", 
     "0.053751905003837974`", ",", "0.03834048667163098`", ",", 
     "0.03340813066220417`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.803408031145705*^9, 3.803408732744568*^9, 
  3.803409068332759*^9, 3.8034093761200314`*^9, 3.803409734308236*^9, 
  3.803410487070653*^9},
 CellLabel->
  "Out[3872]=",ExpressionUUID->"f406b9ac-12c9-4103-a26d-669b5a451c34"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<DistanceLogAWSForbes.csv\>\"", ",", " ", "distancesLogUpdated", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Round\>\"", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
     "}"}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.803408061931885*^9, 3.8034080627482224`*^9}},
 CellLabel->
  "In[3873]:=",ExpressionUUID->"33dd8e6b-1ed1-4661-b3f5-0d9809d1fff1"],

Cell[BoxData["\<\"DistanceLogAWSForbes.csv\"\>"], "Output",
 CellChangeTimes->{3.803408074904273*^9, 3.803408737914225*^9, 
  3.803409071719302*^9, 3.803409379167635*^9, 3.803409738213076*^9, 
  3.8034104919185658`*^9},
 CellLabel->
  "Out[3873]=",ExpressionUUID->"43fa6ebe-350d-40e8-bfe2-97b9dbe25074"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"csv", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<DistanceLogAWSForbes.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803408092211485*^9, 3.803408094372692*^9}},
 NumberMarks->False,
 CellLabel->
  "In[3874]:=",ExpressionUUID->"91da568e-e5a5-4e11-b514-9e15a3fecd34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"columns", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Rest", "@", "csv"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rounds", "=", 
   RowBox[{"First", "[", "columns", "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"rounds", ",", "#"}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"Rest", "[", "columns", "]"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8034080955975637`*^9, 3.803408095613223*^9}, {
   3.803408167744773*^9, 3.8034082110775337`*^9}, 3.803408769832341*^9},
 CellLabel->
  "In[3875]:=",ExpressionUUID->"200d5426-5982-48eb-afb2-21b4c8401b42"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
TCZ5hxSHvet0TdPz9f8H2xnBpA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9mHk81ekXxy8RYtA2I0UqlRpJU0r91HxmIlSTvUG2olIjVESSbmVfLy6u
/bqbe91baZukrCm0aoZiplC0jZJpX6hfv1fn+/OP1/v1eZZzznPOeZ7vnbYp
xHmzMovF2qXEYv3v/9c/Y2Ss8w9Rqrrx41dehCW7FyjswxhegUjHX1xSdFqI
rWFaUpfQ09JIbA9wSpScui4Rr8N79bEvHpk1fWW2E0J6XeO0VzSQ7oqW+LXn
1LzrSF8P11jlv1e9O0e6B04oaW7kCS+SvgGt8XLWCIeY5QPvPf9uqtWl9eGH
dRr/nn/reZ3GbwR7PNe3Nr/tK9dvQvLd9QkBKZdpfgCWiLfcDV9ZT/M3w9D7
gIe+AbPfFiid9hI3eJE/9Vtxb9/rCSknGP+2QdI3/cP2VcTYjhzJ1LzTNoy/
v2H6vg3vS5ZSfOqDMCD5Pr7vAuNfMI7nNdxpqamm+SGYtcnwjkMRw6FI6doj
8pxK43tD0Z2uEZ3gRjp7J1Qzv7t1yJfYaBc+3n963e/4WdpvF2ba3Ze/zK/6
yn67ceF2xgT7beQvKwyCpLAqzd0Uf34YZq+3Ht1kQoxwlCraFjZXMfuHw/dG
xsTENGL2Hhwq3JT4vQ6dp1EExq2csVDH6wLtH4Eih47lUTEUD79I/H7LsPrV
OdJZezHkuiC3vY7m8/finO5EruxdLe0fBTPP82Iv/RraPwrKe1SL9JjzYu9D
ggdbbfYBZv9ojNlee3GNkLg+Gsl6ksCoQWK//bgsVFORGDP5GoPBmJmrO1/Q
evwYxFmsOq18iPbDAdwYZn+4q0R67wFoPjQ/ufsFzQcbMefCjk32av7KHDbm
qNu/fZvbSuPZGOiYZFFdQ/lmfhBWheH28VlXyP6DsGl93dB4muqp7SDu/OqX
6eRK+WR0CI2jw1SPLqP9Qg/hg8TZTZtP51N/CNlXMirzAsle3cOwWzb3+9sj
pPsdRkHg1fG9o8n/ysMIrrHQecDEgxULd/6pTeu2EjvGouHPSx+3BDDnEQuL
SWdPP2IRD8XCXr9NfOU4Uy9xEOV8jv7tNe3HicOjvtfb5eeZeMXhyjLfAYM/
6fzN47FLvGAg/Rb5y45H6VEF3yX4GvkfD1vPYz5OWcRGCejQUnvTpUf9JzQB
8ffHfSP54Sr5n4ANd+7MjjtN8dZNRKvXSPR8U4qfXyKUqh1cbHZTvlUmQnnJ
+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
ywcdsoZJDxBB8/PSLVNH0f6RIvCVZAMrP9L4VBG27/t19U0RMV8EQX9DckUJ
8SkRArimkoEfiFtEWHbkgIrSLFr/jgj3g/0fGNwnfUiEQVmk7dM/SFcRf/k+
HfUh+SLpemIEjzxWGkkiNhVD+/ZSD9NBYojxTYLOGqWNxK5i+MyT+k37TN/T
gWI8CbLt3fET6dFiuHet+uuAEjFHjPhMrtdcO2KRGM+rEsR7RxFXibFJ+MrE
41fiq2LUJ6l7hO6n9XvFmBD2/EXcZNJffbFf7DBt+wSqN3UJVovqr5Z2U/+Z
IkFUXL3Gq2qqX3MJPof79jzfyNS/BD89c7ux/x1T/xJEcuvFyZmkB0kQNIY1
0f0N8/6RYI/NxNuffiGdK4GzR5Z6Tg7tJ5XAw17ZZ9qkdqp/CZqDls3qMf+D
6l+C4Ql62RtMab1+CQwn6km2JDDvJQkmb3T8fXA99QutcmT33BUc2cDUfzky
ZrglPtpL/i8qx9x4sz2uJyl/7Mpx76j74of9NN+rHL932hWO2FN8Qsuhqmqg
tWAMcWw5lkUUJndZE/PKEWF9QGv/ZWJFOTpKnqQeXE9cX46H59pPmzL3X3s5
AhKk/25by7zHy+HnYqu8M5jGD5dj9LFLOdWfqd/pSvHj8Po8bQ6xsRQt/lk6
vFpiSyne6yzQ92H641op7n3U9jI5yHyfS5HqpnpT/yL5GyZFQPXUzSuY+ydR
iv1zdj9f0U/2FUkhe/vqkrSced9J8fDpM2WrUNKbpLje52DCb2DueykmeLFW
Fghpv6dSTDv3YspJX7KHJYPKaEvuLSs6/wkyDLj8pv54FdljIoNcxy14dCWt
ZyXDX08rZs78yPxeIEOp2p5yzwjSA2RYZOnEbfmHzjNSBhvTeZLF+2h8qgze
k5Zcnq9L+cKXweszf0foK9JPyfBm6t9THRPI3hYZYP1x9rNmsueODLYmm+wN
E8j+IRmK1zSfWzfnDNV/BWoLlmv13WLqvwKOzftH4hZRvplWwNBi2hvxKub3
pQoofK0d6lwpX10r8MtBlqlLEdkTWIHA7Z4+6Ym0f3QFfv2Zm6vO3B+cCpi5
vL2TlkvriyqganYs6LAF1XdVBQr2ZeukTSO+WoENGtfPtJrR73O9FXC+Jo/W
SPqd6r8C6SHRgua55I+6HGrVrsaajRSPKXI4/DZet7qG9jeXY9/Pb84a3Kf1
rOXgvi+eWWlF493l2GqTvPDnCvI3SA7ViUvfjGOTvWw57vioss2Y+4orR5T9
hW8KWmk9qRyrvY2nR1wle87Lod5xW23xhVNU/3J8yPXaelTzBNX/l/ErGkeF
XST9nRzO2+rCE1edpvpXgN++YOnyueSvkQLiRrGf0Jq5/xX4q2/BxTWLKV52
CpiNneDf4UnreSmgMrRyxR5r4lAFlnTPurprOa0fq0CRMqvKx5ns5ymwtuh9
r88+0hUKpMwz/HiRd5LqX4FnFdMNvS+T3q7A5FsqCyvqSX+sQE2JPGXGyVM/
/hcXYaF7
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1mHtczOkXx8clconIpqg1SyqpRIVc6mNVopYQspRphSgMiqLNdNPFpJnu
92amae7RupZcRivbopXckluIkltsql1qf34v59s/vd6vzznPc855znm+8/3+
8MvOFZv6s1is3f1YrP////Znhulyq43usksu39gBKUef2j0afZnYGd2tDZ0C
VBG7YptB6obAlSeJF0Nd6WMQ7FdJvBTPsoqVGu9T35i3HNe2GAR8MjtOug/O
u40YbNJxjPTVSBQ9GjR84VHS16Ly6EqJb8Fp0teB/y5jfv1pZj9/WDiu2rtp
3IlvDA7meUztkA/Vkn0AJo/JbXnhXP2Ntb/AMTd0yIFBTPyBeDpY70K9oJz8
N2Hqjcf/WWTR+rzNaNXExT2/SPFrt8C7Mz9dPJ3iYW2Fx3NhLX8G6diGdXMT
3q99SfHwghHcktfc5fcb+YfAYUfMeIsXGvLfAUMd4YJ+NpQvdsLaZr2H9y2G
ucgedGBC+zHiZi6cDF8WznpbRuvvguEoH2XoA9LZu9F2xj1u1zbStbsREf9G
b9EL1Tfm7IFZ6LKXLoMpHlYoHh5gf5w5k/IXhWKSav1PlSymHmHgj6o+lTGD
zqc5DNkLzn45/ZE5r73YtMfqw+tKqhd7H65VGJcnu1TQ/vtgzN0qnySmfuCE
41ieq1vxJ9JZEcgf8uJ5VPQZ2j8CNZrj/N4rzHnux4LBi/PLTCje5v24vrFn
YsIC6h/eAYTV9piUPyZ7diQGPahddvwLsTYSvv42u4+4UHycX3HyfOglWQfp
rCjY9vM/kPcHrSeKguygMO7LEtoPBxFTyEk4wyP75oOIvnu4/d1Gih88nKsL
cL05lvpNwEPCZBOd3VG/kz0Pvr4P6oQTaH7somGjs2bRncnEvGhIMs24V7yp
P+uj8fF0v9dcP1qPHYO5/cs9dUPPfmNuDGyuVu71qGHyi4F8dL6hVyHFrx+L
Gq2XRUIx6ZxYDH2y1X/cIcq/PBZG0+JbvX5n5icObV8cpXN2EXvHoeZV7d/L
DxKL4pAwJ+FUqCNxRxx26dz3merFnE889ObumWD2kfYXxGNgvM0F23Cah+Z4
VP4+yuvEoYuU/yGE1a1a5tJG9eEdAm/NqbG7htRS/ofAccjNLfpIzE5A0rCa
uO9r/qD8E4BFc/rZ/kqsTcAIXvK6Lcx6+omwu2GxwZVP9eMkwi22QL/Mh+a9
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
/rYGBWM9Y8OzaL02DThKG6l/vNrlf5t4dms=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
u2ORpLcroDWpFFsFohX/AzISoOA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1mHlczdkbx5MSWpStklH2JklIUuJDGdlDiEhMCwkhqaZJ2lNx27ut99a9
3TVFGWkhiklCaJqMLYQs0ZSlKP3m9+o595/7er+e5yzP5znPOd9zJu4+uMFN
UUFB4fAgBYX//w/8pqCpJjQpQk+6eIDN0KV7J271jCLiRVDVlQUVmQmJbbHe
4cMTxyN84hXIXfSuM364gHgtBk2c98ptRN4AB6+HeqPupqE5zN8B45re1v1Z
yCP7ZpT4H1n84hqxwlbMvtU1SuyaS3YncIdPkBnHsPbOKD4fmTHcmBguCHgZ
0mvrJSL/XXAoySiftp3iqdoNdT2lsbvP0XwUXLE28sWjlELW3g33P8xUtG0n
DnaHxFueNGcpjV/lgVmb7IsmZxIr7IVR6EQ942LW3hM31ij3qfuw9vug1+ql
UVZO8VR54eODFYoVKiy+A6h/tmbvvRBiHMTcwwWxRR8Ze+OKu87ORzLiFm+s
FDWt0almeh3C/SvuGX+H5wywwWG0fNtqGtvExjuML9+iX5XMIXY5gpJ9Eq17
yWx8H4jT7fplO4l5PvjIlTtVZrLxj6K2rCXZWJONfxRWtp2x0fdZfL5oD59k
2VhOehocg9JjtStBvfk0/jGkJW4r8RMRu/jB36pOOPgJ5UfBH+/9bD8kr6b1
wvPHtU/C1CW1pC8C8EVjk2/oPBqvJQC2SqE1/8xn4/8G3paKI1eeEBsEomDy
19qli1m+AhE+zHyhhRuxy+9Qn2sz3I/lUyEIDz1eF9n4UnteEHrE3oGJ91g+
j2Oa8ptEXTH5txwH93mnvk0/xYNg6GR9PKvcVzDAnGB821pUbDO5mPyD0bdi
7SVVGbHpCazS73YpGFRC8z+B0/y/31jFnh3ghhMYcXVHzXJtqjeDELi+2rzC
7ydav94hSC7bX/TbZ9K7KgRJqt/qr2TQfDVDMdLt5+H1g1m8oVD44Dk/7jZx
USgCPHqVvYzY+g/Dxge8m1YzyW4fBhv5/TdnG4h5YVj09Mm3pn3EHWGYn5kc
3TqH5SccqZPuuH7qoPE54aguGzlEI4ry2RKO7jvzXOscSB/TCER9HP5suz6L
PwKxHhuPvPO5SPFHQDBj95HKR2UUfySO37HTHtZZSvFHgrP5Vll8XznFHwne
1IIhnuuoP80omP54dydsDunnEoUqj3el15tJv6IoXH9samV/ke1P0dj1IGV6
lB/pYR+NvXNE87nRxLxoVPaUGnVvIO6IhlGe2vaA2cQ4CcsJKsM9y6g/zknU
lxyN/OHN4j+JXaeb3XjbyN80Bu7xnjv7mP7BMSgaEV+qqELcEIPYivXmvqdo
fzWIxXXt9u+8s2co/lj8I2zR6htN66kqFl22X4cO67tA8cdh3JEb0inXSU+X
OIQpxktyy0m/ojjkbBxpPPzFeYr/FMy53SpbMmj92Z+CdarwFr+c9OKdgpLF
+ovenrTeO04hyInne/kfig+nMViyCtF6VM+c06i4ONd0xhyaf8tpFA0Oi7XO
In8dDtQSW+xGbWT1w4H4xYlq/2jiPRzUyLIXvl/L9OTAaPrrcbYviUs5sDbp
S89ZyfrnoH/7v+8tNkgGeGg8Hvzc+WHSOcq/aTyMAm//HNhN8TrGo8102tXj
McTB8eCeMtSfF056iePBafhF9UkM6dUQj5KHl367+u6PAe6OR/GZgwteaFF7
gwTElvYUnM8/N8B2CbCbMZJza6ac8pWA/OydFTEOpE9aAo5vaxRLV7H9MQEn
NHvebvxC9rYEdDlN/LzPieLRTETuCqva2TqyAbZIRIRzuUf7VerfJRFfB0l/
/deQ8hWViIO2nY6rrdl6T4T1CoM+FIoHuDkR63KyMmZuJFZIwnvPiF0TfKg/
wyR8eOTR9fROIa2HJKSXmlwKEFJ9+SXB1qQnoFSD4uclwf3sd9Oxo4lrk/Dg
qNZzc+bfkYQJuU6Hf51H+ugkI07+9ZfQNZQfJGPL5rZ/6k1o/D3JeGL15plZ
Jc2fk4wG3qeeIT/TfEuT4f17tZuaFenVkgznJ8/bufuJh6bA95AST7aF/E1T
wM3bY64xk/pzTAFH/vexOb+TnsEpKNnQ4hzEp/HFKXDaMeap2Sryb0iBV8WD
M4ufUj66U9Cp1j7yiyf5G6Si1EfXIN6D6scuFb80uY5tX096eKdimlsGf8Ik
4rRUBDiNOZpzg9VvKsL1+IZFxlS/banY+NedlHVvya6Zhrti/c8Js0hPizRE
WSydP+gs6emSht2vFi5fLqB8RaVhn/Wfr++G0PoqSkO0+8c/tAdTvTSn4RnX
O2yBhH2/cfHdLiTZvIH8DbkIvR4RYHiM2J6LPfOrvb+/JfbjIitI1B/5GzGP
i9Emqm8u+ZL+tVzMvVa7zdeJ9OvgYvyMmpsPL5FeOulwnfSoMzCYGOkojAt7
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

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3700.}, {0, 0.4497040374951159}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"1", "2", "3", "4", "5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.803408097541477*^9, {3.80340817119014*^9, 3.803408173365152*^9}, 
   3.803408211717217*^9, {3.803408741596272*^9, 3.803408771488864*^9}, 
   3.803409076038837*^9, 3.8034093831917877`*^9, 3.8034097421456327`*^9, 
   3.803410497476726*^9},
 CellLabel->
  "Out[3877]=",ExpressionUUID->"2f03cd69-4746-44d1-b082-89408a9cff15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8034108377622547`*^9, 3.803410849299395*^9}},
 CellLabel->
  "In[3894]:=",ExpressionUUID->"0c00258a-2f5a-48da-aa0a-18fff8ddddb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.1`", ",", "0.2`", ",", "0.30000000000000004`", ",", "0.4`", 
   ",", "0.5`", ",", "0.6000000000000001`", ",", "0.7000000000000001`", ",", 
   "0.8`", ",", "0.9`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.803410842347032*^9, 3.803410849756559*^9}},
 CellLabel->
  "Out[3894]=",ExpressionUUID->"f26c457b-fbf0-40eb-80c5-a2188eee53d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["p1"], "Input",
 CellChangeTimes->{{3.803410884060301*^9, 3.80341099055484*^9}, {
  3.80341107047235*^9, 3.8034111230619307`*^9}, {3.803411513694375*^9, 
  3.803411513860958*^9}},
 CellLabel->
  "In[3914]:=",ExpressionUUID->"3c79e906-6559-43dd-84d1-c83afaadaac3"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["NumericArray",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Real32\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"15", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Real32\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"15", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{"-", "0.7044452428817749`"}], "\", \"", 
                    RowBox[{"-", "0.3628034293651581`"}], "\", \"", 
                    RowBox[{"-", "1.`"}], "\", \"", 
                    RowBox[{"-", "0.4438621699810028`"}], "\", \"", 
                    RowBox[{"-", "0.5706493258476257`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   CompressedData["
1:eJxdU38s1VEUf9Es+fVGvVaMqfWQqUW/53vPe1vktfXS8yNtT8+jHpWQtBdD
jJnKksqbRYSxZYol2Svfe1XU9DQqU43RTyKmyc9+yffO++6tPz73nnPPued8
zj3nukbGKzRmAoHg9LKFRaHWShMT1clBFpxyVB3r4x3LGe0WIFxATugWonqk
xwJBBhmSfsIOInviWCWB1KT9JN3fjiycAwf1+gY8KSvERn0RpHtnD73L4YW1
hF1Z3Y5rxqcQp09NHITy8EDSyTazT+KdQZSvZC8ItpAMizRI6EjCwX3pkN8X
R9xm9pJd9atAk6kA5wNO0J3YxceUeJSgRRl0FRepfKx6M1grahhDrhXl0di+
FfTJDBkLcOV5mQDQOi0E+apJ/5LD1B4zdAR/vOQMMqmczRIbWIM0mq9pk08Q
EX3JoPnDtRU4ey6YyvenhUzssib88/LjB5zf3eVueNvGr4zu3jN0delzlklM
4fN6rjE38odhuQZc3vcjpLvD7HjSjm4XbAW/JBdkwhOmXoxQfTarGzv1uZNv
tjcZl4poHP/cATSWYfAhJIwZ0AwznL+iyRa1Pq1HN07KSGqYlsYw10ko93Ne
28mQYxF+bJDDuJNZc+yYlGWCu3FM5ybSI4yj3AI3B4D99zRjX0lErysZKGug
+d+ef4NDXjnyNs/RAvT6egzPs9KiDt06eIz8qo9Gpa374FnLCK1z51wwM3qm
3jgbpMVfRVKKxZQTsRnka12xegM0Fs3j76J5XOdmyb/XbqUA/cgLpfIJ/2z8
93gUCN3dmdyEK0iWgpDBwRfmFZkPuTg7OuQkaaaNbVPWMtMFJ+g8IH0K6Y0L
5PvN7eWVYvRnUAwt2u3kmrc3SKKsSNWInM/Z5Tdp5EVRaqsEk/vQVVhGa/OO
9CSzL1mU67WW+jt8zWFqTonBo7Cu+b+/QBGnqsPy1jx91JlhJqfYgIQTETRu
0+c1UC26Q3uoPKTCuWaZ/HuZ/ifTuZ3tDCHrf9vwZ7qSPbj2XRigvLPIKkiG
Wyd80T/YeYgw
   "],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.803411514358858*^9, 3.803411518180748*^9}},
 CellLabel->
  "Out[3914]=",ExpressionUUID->"08487407-a7f4-479f-bd2a-32f7251552dc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"3", ",", "10"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericArray", "[", 
          RowBox[{"#", ",", "\"\<Real32\>\""}], "]"}], "&"}], "@", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"len", ",", "$numlatent"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"3", ",", "10"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericArray", "[", 
          RowBox[{"#", ",", "\"\<Real32\>\""}], "]"}], "&"}], "@", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"len", ",", "$numlatent"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8034109966362743`*^9, 3.803411012276759*^9}, {
  3.803411603946033*^9, 3.803411605269793*^9}},
 CellLabel->
  "In[3972]:=",ExpressionUUID->"2732da60-e661-44f7-802d-6d55f2bb6ba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpolate", "[", 
   RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"m", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.0", "-", "n"}], ")"}], "*", "p1"}], "+", 
         RowBox[{"n", "*", "p2"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.803411633480406*^9, 3.803411757195889*^9}},
 CellLabel->
  "In[3924]:=",ExpressionUUID->"1539f9bc-1d30-4c2c-b812-20943b85a2b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpolate", "[", 
   RowBox[{
    RowBox[{"Normal", "@", "p1"}], ",", 
    RowBox[{"Normal", "@", "p2"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.80341113906534*^9, 3.803411148786891*^9}, {
   3.803411327474205*^9, 3.8034113310240183`*^9}, {3.80341143787049*^9, 
   3.803411494873695*^9}, 3.803411595682241*^9, {3.803411759913402*^9, 
   3.803411776523859*^9}, 3.803411839187893*^9},
 CellLabel->
  "In[3928]:=",ExpressionUUID->"e67b22f5-ebf6-4f43-838a-8d4ded0f0bde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "%"}]], "Input",
 CellChangeTimes->{{3.8034126392311068`*^9, 3.80341264174164*^9}},
 CellLabel->
  "In[3939]:=",ExpressionUUID->"0445cb66-9e42-4d86-b7fb-8ec506a0a31a"],

Cell[BoxData[
 RowBox[{"{", "11", "}"}]], "Output",
 CellChangeTimes->{3.8034126422897367`*^9},
 CellLabel->
  "Out[3939]=",ExpressionUUID->"7f3fa6f3-1af3-46d5-acb3-e4b71e9af9ae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"p1", ";"}]}]], "Input",
 CellChangeTimes->{{3.8034127669684677`*^9, 3.803412769720273*^9}, {
  3.8034129331931753`*^9, 3.803412977788085*^9}, {3.803413299355711*^9, 
  3.8034133096372147`*^9}, {3.8034133410570087`*^9, 3.803413345021998*^9}, {
  3.8034137644720573`*^9, 
  3.803413784220613*^9}},ExpressionUUID->"cc5c53e2-9a6e-4f66-ab80-\
45c635d02317"],

Cell[CellGroupData[{

Cell[BoxData["p2"], "Input",
 CellChangeTimes->{{3.803412775583543*^9, 3.8034127756738653`*^9}},
 CellLabel->
  "In[3942]:=",ExpressionUUID->"25a21c43-1439-47cd-aeb5-0087867eef6b"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["NumericArray",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Real32\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Real32\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"0.003991683013737202`", "\", \"", 
                    RowBox[{"-", "0.3649391829967499`"}], "\", \"", "1.`", 
                    "\", \"", 
                    RowBox[{"-", "1.`"}], "\", \"", "0.23517288267612457`", 
                    "\", \"", "\"\[Ellipsis]\""}, "RowDefault"], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJILiAWAeNWZJmv/
m7v2MTA02APxfs2LBXZ6F9VAbHsDY6X9fT4Be79+4QLLhbLe3wsSz7JZbLul
OdT+naCOfeJcSTuQXN3thfs2LJi3L3Sdin3HmpT9rYqK++p5H4LlCp8y7+eX
SgWbqbTzG8iu/WpS9+1y0tbt40zhto+zKNuvv0AJbAcMS/ZL2Guzx8L5IY0G
YHrClZN2MLd+Oa2+j4Wlav8q7jX7tE5H7PurJLP/YYztfqi8/bZ1jDD99rUN
T/ZdPhZifySHcZ/6uTBbkPih+wX7D/K4gNXqCgbZqa8/sVd4Y/z+5qfuYH3/
FpvC7LJ3O+u238+FZS/MbhidYWQEppV/3Ny75RO3fUFRBFj99zvZYDNWrWDY
P/lOIFj9S2WV/dqb1u9DMmO/mtPnvTB2StY6sFwux0NwGHV+WbOv7r7h/rOG
22yrbX32//zdZaM0wWU/4273/VtOvrP9L9IAVv/87XFbmDtBOPq04n5bG2d7
JDGw/faCSftUvp6F22/Z0A+256dkrP2JyVvAfm05z2Gf1HjbTuZcvP2tQKX9
2rab953ReLIP2XyYeeWyX/e9Du6yi/MCh4G9yUWb/XZiC/fdrT9l5xEcZH8n
5oEd124t+3CtgH0Ct0r2ZR/0hvv77mpGcBwAAJ9iAro=
   "],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.803412776119795*^9},
 CellLabel->
  "Out[3942]=",ExpressionUUID->"bb29c57a-cbf7-4068-9a92-52f9b9d84b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"interpolate", "[", 
   RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.0", "-", "n"}], ")"}], "*", "p1"}], "+", 
     RowBox[{"n", "*", "p2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NumericArray", "[", 
    RowBox[{
     RowBox[{"First", "[", "#", "]"}], ",", "\"\<Real32\>\""}], "]"}], "&"}], 
  "/@", 
  RowBox[{"interpolate", "[", 
   RowBox[{
    RowBox[{"Normal", "@", "p1"}], ",", 
    RowBox[{"Normal", "@", "p2"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.803413777243788*^9, 3.803413808216309*^9}},
 CellLabel->
  "In[3986]:=",ExpressionUUID->"91ff4004-0d3d-442d-a5f6-a8239e26c223"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "0.526229977607727`", "\", \"", "0.26301515102386475`", 
                    "\", \"", 
                    RowBox[{"-", "0.6479279398918152`"}], "\", \"", "1.`", 
                    "\", \"", "0.22566039860248566`", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJILiAWAmGk7m/2b
lW12s++p7mdgaLBvFU63q3lctf/l/wj747eq7IFiYHGT7cr27mmX7Tx+su2X
EFi2b7ZB8z6YHBTvh/HVPEXso8Kn74OJe3+ZYvfRVGjf0zU++15zW+2zVpS3
Acmxm/ft9fpxyg5N//5zyVL7n31wt9ev5ALbURIrATb3wgxF+7LDivsUj97a
J7oqbf/UUg+wPt8nBfYVf4X2/6vV2wvis/m+sF3QsWXfkTbefYE8HXaPJoqD
9R/SUgK7tbsi2t6fLcZut5eXXT3bXbA7572T23dQRXn/B0VbeyQ/2b+zF4D5
cf/6xcX7HWWs7F0DD9nx/9fYz3m6x7YyOWT/AtOdIHvtHdccAZu1sneFXVO/
g71E1O197Xtng+UuahbtMxLbuy88ev2eXX61tiDznKdc3iuwiGW/WCnT/rgp
lftVj94E6+9SmQ/2NxtH+P45BYr2Lt4u+72ql+07vc3S5kSX0f6t/733p6iZ
79Oarr9Pp/aS7YNdcvvfnZHZP/eX3v45K+z3Nj7ssKur/GdXMIdhv1IRh718
shs8HleyyIH9Feipv7+ExRVsX8B1y/1pPg9Q4vNYXcL+ZQcd9n9bvAEUP/u9
fNv2gOjtUrvsZtpI7f+opgo284VPNFif16M9tk0Tb+xL/HwKHAe8jCL7rlzc
bicY1bdPTFvSrv/9DnA8q3vMtM05u3+feVQu2B4Ao8ULPg==
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "0.449931800365448`", "\", \"", "0.19986438751220703`", 
                    "\", \"", 
                    RowBox[{"-", "0.6655315160751343`"}], "\", \"", 
                    "0.9071912169456482`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUGtI03EUnQqaW1uROvsnYiplmpha+Gj+f9eRaIZhKZYp5oMc083X5nxM
zVl9kD5U9qLSSAuaskLRCjX/v6skFokPpMzIJErL2kamHxKn2bYP58K5h8M9
9/jmlaTIHHk8nnqLdaTkVkpVqtzqVGcbyc9VHgxX2kS+FdutqMj6TmI7kkh8
ThB2snJg5YVkU6LFFEyCozPnwCJU4t0TapjpF0HnOhKFsxDn912ijm6Z1IlT
4pSwHtJ6leATUosymQzfhqth3sCAw/42yuPpwJKkRN+gRpLn4U8NS4E058op
qk/WDdg0twYzpzgwRkSiArBytEH9ph7XVxhcfSYBM0bQSZUcz2e6oqlOAfkm
MYi/JNHB1hG6JMjA7pPxdp94azo09nuiq1HKDY+WI9s+xQ5NGWi9dpSzMFdJ
UaQTPuqphqlPe2FcpoXnLqnwVLWHCHQ5xBC0QFPul0Lw9decINsfJeHRgKIi
WNtWCtZ/4JrKCV2aVPD5YSXiWQV+uMdC1LyeeKEbJgaYWGY1BsWMG6dJrIay
0nfU5unnNxPv3xGwYflJmyNeDNh2l/kX6Fr7AM37epG70zvH+t2uwugeTxo4
xse4nDU6rFHgsZpFe2cTxhtUY6rADWkymv94Q0NCAqqXm2nkYhV7E8Kwb/MQ
zkEqHXfMoIeNDiTtnyt2DAnQo5hBtuvBgO5XIWljHKC6b5bqvZygKS4R5Csy
NE+Xw+MdDEQJyyEg1h/fZxXb7/VNB2Os+6wtO4YJS0D6qg6Moafx5U4Wv2V3
k5pkOXY5CFnjRzVqb+nJSAEfy027oWxThR1+3vSHToZn3HexywtDdNS3lQvx
L8KESQtX26MnoZJGevzIEPs3v4WMTmjAMvckZrClhab7KOz9/gdaITdT
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "0.37363359332084656`", "\", \"", "0.1367136389017105`", 
                    "\", \"", 
                    RowBox[{"-", "0.6831351518630981`"}], "\", \"", 
                    "0.8143824934959412`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUH0s1HEYPyx6m11dy5wzIiqShTJ03yc62gwTvSDvOlx5685cYrTTZHmZ
0pEleZmt9LJJDeX3PMv8Y+GqjWzCvJSN9HqOxU53/vg82+f57LPn83z2JWdH
pJryeDzFVsOISFL6y+VJ+ZHmRiJNyvD0yDCK2w3gGzAfQuyJfgf7M32EEgrC
Ybk3k6nu5dPbopMwMBIGOpso8mhOhZXCv8yq5hmrEggovkSCmn53tLgeTa02
RdCeEw3i2Gs0NBhCamkqtFjawWN9O/J4N0BXH0XfKY990nqi3MsCR/gK1Fkd
5IxatdQZK1I1TCSKAAMnI+ari8nlpjVty3eHdvMUbPoaTrs7tTi2dh7+wU7o
WldiQuFLHMwMpQ9ukk3flCdAvVJEgqhzXFmdjHLNOPGMqBUXh5Vc24Fa9rtn
AoPSFDBT4QoNQ7kwWRsMe3FCHPs6j42GLWGbbxL4VDlwZ+sdqTTgGBTZxoDW
LhEM/0By8BJaOkihJzCbhq1TKMvaH1yUlSxMv47975zYmwoncpbfP7F4Vw7N
XnNo9Ly/Vcm6wtxg5uEqKiQmYuPOlVeOfX69+GNpnFu4ZMckh6/SmYZADFjl
U9zoT3S9EEdZR1c2OxN0luHiWCZpC04TUwiBOxVMDbI7GNcxLU7UulPvhi1F
RWejj7cKp+qErKZkAQcylrFy2ox0fRt++l0SptKZgsC3G6NvrzFT5xD4+C2U
xp/LoMV+D+QI02H9uBU9GC/fvOc4akfCL5+N2SlZGA+q0gLgz4aSJtuHNDav
mK4xnMzUL8SjnWkk5qvZvNsyrnaIYFYvpZFfHDdsEkp93uW9yb5PUdZ0mbsY
FEOKRg23X13HwkUqnEy0F3PdxUz96ApEdmzhDo3JMX8ufbPf/5g7Q/E=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "0.2973354160785675`", "\", \"", "0.0735628753900528`", 
                    "\", \"", 
                    RowBox[{"-", "0.7007387280464172`"}], "\", \"", 
                    "0.7215737104415894`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUmtI03EUXTqzttASqSyKbKFpao8tmuX/d9OGEWnTZeYrc2WrkTLma9mb
8pVpL18r8QEyHz2mlftg+b+3BwuNKLZpQSzpg0URlZZWRGWbH86Fcw8H7j33
Bu7TqTQeAoEgf5arqNSG6Lw8dfHOmW5yQJ0jXZfjFkUuzHUhNcrIlnfWc037
peTTJ4db8/TM6/MRWsFksN0hh/EQBT0dTwUoGWSnQq6ynmUB9KNXgI1FQhRt
iKXCkBPwb2UsZFQWkFQqpb3GVMjSr4Ad9l4UCE7D+HsFGVftYVuGFKgfG+BN
g+U4R1jBu7V6UTKam2wsNHQTuDi5kZZ6ilL8A2gxJ4He9nLUpURScPdLtBbH
wMWaGXCz6jJO7W7Gjheb6fPsmGlfZ3oQdMkCaan1EB+3P5NuZHZwngev4Z3E
2/3K9U3M28uCHxblwjduDWhlOpgVFAOmcDWXXFjGPPIn8eerRHjuWxvV7JCQ
TbUWuLCt8HV1Arj2AVO3A/3v7ob6DxoaGUojoVEBG/01THPSjqO6XSwt0Iea
rXVclvMw2H59R7fHKTzNVGYJjLZ40iK7mXP3nk3WYOXz+8j/CcCKXCXTPNKS
tjQf0yQLqDDuHV6WK2nwu4c7A+iZOIpZ1mz6ZAG6NDEffkM8Wd+WYYJBwlZ1
RdCDqZmk7StFcW4Dliik7IToIUKyA8XXnegc8OWORy5h2Q4h3LxXg9lvxliB
txIiX8tooCQTWiJ8oTM4A+zhYtpe0Tp9o6phP5poc7hnp5rgeHi8rRhkdQoa
fbKe+l9ZmP6LnBqSxOxhdToJzp9h0RXDeMywEJL+pZBZ7slbzrh+p/0Kb79Q
i1F//flz2q3UmtPGPysqZyO/DUjnzvZXm2JZlk4Nfh97eFtRGDZ2aabz/Q9Z
jTER
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "0.22103723883628845`", "\", \"", "0.010412121191620827`",
                     "\", \"", 
                    RowBox[{"-", "0.7183423638343811`"}], "\", \"", 
                    "0.6287649273872375`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkX8s1HEYx88pa2dXtqTQJY2KUpxbh+4+jx+lpLjOSjGWX1eNXUV+VIq5
MkNx2Zij2kyzli1XifB9ntWWP/JzI20xv1okJJMfi6M7f7yf7f289/zxvN6O
sdeUKj6Px0vZZBzKmHS/5OSYW2EWJpMQk+QpTjKFAqOsjCoNj2W6MldZ0A8p
cQu7QaW6yfKOZ9BDwz5o794DU1J3ivM/A7kFz9g4PWA9bg7kqUvhuhWvOeFf
MQVKMyFsRAy3G6+TrtyWXNtOw65eF5h/jsjjZcOkpwcFlAWwt2/O4Wq6hhsS
lKJopZkzZZ1fc7Crt4d5eTmB0ZNJnY5ZlFu9gw6abYetn58gtDmS7GUj6hfd
IKhzmq3Y1eBTz3zUeEjIcgzW725ohNA060wu4kzO6nAYjb7Xyp30Wkz5Vyhb
8q9mIkUhFnSqgD8jAWnFVRDXe4Pue7/PapGWHSozYFCqP5iHVsjHhU60M84N
DD4SmABfMP4DE9ZNaH/sFCQXRNPvIiXpbE6Cg48Hu7dag/yiHDafOI0RDXz2
xTkBsgfNTAyg3zyBTQntoO+PgAzZm5lpp56sRGVMM2r4geiclsXyLsSSX0Mx
poSI6NHHb7ho60cDIQITA/DWxGOfPpJGZ6Q0kroVjsgUNPAqA2e3nWeLUW6U
tzaEe1tLcLCqFvfPBjOVtgzfgR6Xi/UYUZ4ln/swJQ+ss4D8tGhUu4+xsZ9n
oarDnuojw6BCJoBhiQIUQau4LKlf72ihdyN1JHahqb9PEhlsEKbDxRNHaUkk
phclDWxS7ki10cBqL4dSruUlVjFaj2sya2g1BJNu+Jes0tyObMAM77feQd8r
d1saCiWkS1VzE3VqJuISMWRey0U9FrIDEA5c5hacc23nWtTx63z/A/I9Oug=

    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"0.1447390466928482`", "\", \"", 
                    RowBox[{"-", "0.05273863673210144`"}], "\", \"", 
                    RowBox[{"-", "0.7359459400177002`"}], "\", \"", 
                    "0.5359562039375305`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUWtIE2AUnSPDTc05StRKsRTzmXMyn/tuK9/P1LAysTSdghPBKXMGJiYZ
lBSJr6GmafnsYQlSbfeqEaRliVQY6Q9RjMJH0tLKVm3+OBfOOdzz4xyX7KIU
OZfD4SgtjCclSyUrLs5Sp+40kdwshdhfYTL5RgiMUEt2s7Idp3R6eRgVBvDA
6ZmKWbapaEO7FxLeWMHniH305+YRaHErYG0DOWwjxI0qt2ZDp/MDdYJBZ7KP
uAA9zc7QvKQgYxzpDQCzksPQon6JHE4lLFXup1WuJ3Ork6Pn302tY3wX+urX
dCYvuU+D3yw/sMhIazByMkH2tYKGAuyJveBD8cpjtGF8Su7WYGupAyhLZ1h8
rxbLnRSYWedOh8ak238laV/YxH1P0ryt0b37HUVizzJp+NYVjO/Mld4+3s/y
JFHoW3UOhO3BYM7NgTPhIigoStV197Wwe3NcahGKgT9pwUTRrpSn9ABtjAss
JPkZszngXd6OB96HQZJvGhliY0lUHwe8kZ9SH0M5CuUaJqlHXLwawmKLMqFp
hGfqAAyGGFZTKIBxmZBWmiKYSbOZv4OO+qcYY1GMWdTI+lfTabK/G6+pD9Ld
oCnM3PKn1V5bUwcwZpuIcW0p9NHDj/w3bUAZlEo+becxJr2aPRd6041/g7gw
3YEPZ0bxdWsOa/fLQG+P67isuozLQ8PSNcEtqXutBehUe1B96RM7OXEC+KNc
6vSPhqZYc3A4Gg5bkiUcmB/f3gh71rFb/ApN+23IvCBiqgQqfonIutSXGpKe
MHktj0bzlaxRdoyszELZRlgDVnEFEGhg1GU1LK2q5pCrVzDmFCXiYvSj0MUH
LvTd1k4XXJLIMi6eRbtqMzz9t0f6Y1cCrFdHoqDDoJ0TZ2/3+x8BlCdE
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"0.06844086199998856`", "\", \"", 
                    RowBox[{"-", "0.11588939279317856`"}], "\", \"", 
                    RowBox[{"-", "0.7535495758056641`"}], "\", \"", 
                    "0.4431474208831787`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkWtI02EUxkfk8n4PmxU6L3kDLbUm6v991WFUaEONNCltlWJpDidoppap
DRR1XjIdtlpXE8GNITTTnSNeK5yYs2k3rZkQlUlFYpTV5ofnwHMezofze7in
RMnZm1gsVqGlaSQLi2PFYmFJCttssoR5YaF55tDaJEeT+gLrmNzUZa3iYwxG
fDASg0MpaVgtwswyB3qjbZkYUyyxdTGMBoW7EdFLhnAOBGFtXisTw/Lud823
xU/JF+l6ki3VuJ5F3cQE4O4w2iELp/zEaWCxKuh7nRXK8h3JdXExuOwURR2p
V4PnqtNGNlOmBmf+HOl6+IWYPJrVq76ExhE3vOW8TqYcnwEIl2BifwnU/NhM
5TuGiZw3DZoXfIj86Y77b0ZR843Fg0fkVW4IekiatO1j0Xj7XQKTFV8ByjND
TEKGmvjJPmun9qZTbhKh0zkZ9Kren/6aN2gFo51keIWNX5XetOk7n5RW+qC6
ypeWptnTt5me1PQPES1IICA7hAY9T0Q7dhyOuwjojI2UObHuC16MmhSBFPJP
ismgJpWq7jiZGRCPtWDC1bHpQDMH51VlxLxTGXrAKHkMllukoBpWEl11Ch5T
ANy/F4DYMwojb3yQZcExM6AJCh4M1h7EqdP+WH3BlqrCj+LlusMg65IT6Xgg
tv2rAsWCEirtZ6HgUDkpJFYQ75sOGu0+CJSvMAb0YqzOWdOFb+3aKsMUedqd
Spdy9NBoxdBraSyaJIignT6TcLxhfqOHxs5ZuPJ7DMz9+QncqaRFTO92+6PX
RCBW2vSTob5FyO1rIZXbedi8upUogs8D+4kN7fqzB5tUHKK3noQwtwKI38aF
5rnZaGe9PYb2FQ3U8IJJR2wKSOwiwZj5OnpwPo7uqi8HQ68783ctc4Pvf3dc
P4U=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.007857325486838818`"}], "\", \"", 
                    RowBox[{"-", "0.17904014885425568`"}], "\", \"", 
                    RowBox[{"-", "0.7711531519889832`"}], "\", \"", 
                    "0.3503386676311493`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkWtI02EUxqcDm2XmNXMi21Tylpd5qzX/51XLpIuI8zYvM68FJRlqmmZm
odEyDUwTlahR+UHQoMTrdt68NZHSCiwVIVPBcpNg4WYq2OaH58BzHs6H83sE
OYWSS+YsFquYYxyS7LLIoqLs8gQLk8nPLggOKjCF+42yMYqtZCljk4/j+SvR
tOXiO2jIqwLbuFKqFrPJ88ZhGBz9hX4hnuRG7X2GWDhBeJKQdtdYwyTHnfFP
1uFQVjl56aCDb1H5tK21FeW5R0nqjois8ReQxaom/aFalPesM2zvGuxbcmYa
pt6jl853L5PGTWJwxTyMjyEYPTXJ61YVtUlyoiNtKxAQsoiymF7UA4OapUVQ
j3bB+vgqGh65oGOKNc2tEBHTTctGLWi8Quir8HZVRqOQHmoRMFa8QlzY5oD+
6gCY1dmqin8nEKH5KfJiWkre5PAJj+2Ghh9vYc7sAI2IdSDOR+7AmNKD7jwR
kJIpPcwW2hDjP5AnT8NAg4BwSqKp67CIyholpDyzOdxlW6ESOkzCtelIrOQ2
Q6h5PJmocTYxgCidPdxM3YLuZT69vNIKpl38xz7sdB5EjeVr3FWr4Q/3Al1p
mkGcDqDfPYbQBw9Tuyy+iQGZ8RdgWFkEVT/j05l/HKINTKVfKkS4ttkL6ZXe
lNn1RZlWhYmntVi3/RC4wlRV0KYjBjoNq3pG7KFjQHNSc8aK1D/IHGrw/gDi
+jTSG6fA24tC4vZJD/KMY0Ri14tW4r97PeR2qDB9dARN/UkzLIk6+TqZkPFo
mLsnLVQroV/ag6XYBQUbPjRw9ieTuOyH8vp9hLvjQT/Pp4DCqh0Vd5vw7L1V
VenjSKZaa8CvnTPiua2DMMeOwY2nRagQrSvruk+QrnNtyHWdZ3go2+P7H4AC
Ozg=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.08415551483631134`"}], "\", \"", 
                    RowBox[{"-", "0.2421909123659134`"}], "\", \"", 
                    RowBox[{"-", "0.788756787776947`"}], "\", \"", 
                    "0.2575299143791199`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkX8s1HEYx8+PmkwIO5KM/KzJb65x3+czU6N0ljtRy4+dlo3pmDKU6RpG
He1m4dJMRssKYyb58X0+RH7MhWRl+ZnttLiMiMWoO3+8n+39vPfs2fN67BNS
hYm6HA7njoGmCMWZQenp4mzRYa25JU7x8U7RhoYamWrUeb2BVXGycHvlIt36
lge1M1J4+iqDird+QU1JGTTP9+BAvjVpzSjotk1cYOISeJQrEoLSrp7xGx/B
EkkWERSMwJ80Mf2ovIyi8uPEMp4Q+aYKORwpaRrrx3lZJ9OtKMaxpFJm2GQM
vVYvHGTT9osY2TIDiwty0Hiq1fPgXAoqLlWdUsKT6C3ccytEO54O9s+1w3qy
ApjIPUwuWmLX3unQh1E8op0RPnaFXdU5emajjrWLc6a7lWp+eGssij94wovs
HhDY+DLcKgEJag0hEn8RmVq3JL3l17B6h4VVcxNauqxPPtlWgfG2Iw2pO0l+
r4zDxAMO0dwDyyIX5BVZEBWXoW45XnTTNIq4dxiwglBpYNDKd5gLHmLf67fA
67BLZCHRXssAhqbWmUarH1Dj60rj09pA29vo7cH0hg4cNerCcOU8HGs5T9Me
qfHLjh9dq2xGebUBdepy0TIgcawhvrnJo/jVijrfP0ROn42hDkmOGBA6Ds5e
rlSxX81a/x1Bc5ZDZyMqwMdDxWfKa9mSCqfuybceEKhvwSodjEnUERmjyOmC
BkksOXo7DpPbncmJn2roTbIj+/+qcG5D72Cf/8ta9JMhav9n9nkNDKwlRG3C
pWH3HGhMHkLTdj5K+wYhesyW8vsqGDPPWdZIpEeKdy1poa4MZm2uYH1mMxpO
FrMRz2TMtPcE6nov8UU504zVQAB6y8tw+G4jezXXnQyOtqEq1QeC8m4c8P0P
jKND4A==
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.1604536920785904`"}], "\", \"", 
                    RowBox[{"-", "0.3053416609764099`"}], "\", \"", 
                    RowBox[{"-", "0.8063603639602661`"}], "\", \"", 
                    "0.16472114622592926`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkWtI02EUxqd5bzqnpsjAS6glkddUsr3nNStm3tBJTCE1LYNKEa0pgkQm
ZiksMdeEWkEzbSqa2QUv//OqX3LhvJBiCFazRLNMKrVWy9r88Bx4eDjncH7H
P79Yetaax+NddDAXaV754dLSvIoMO4spyCuMjCi0hE5muZplTAlAPHEXHxSl
Mm3nXvh37Sp48eQsUj4DEmEGtP5pxtwZZ5oap+OQNZKqYsKGXOshktsihxIf
Yk5lOd3caAH3+9lMPzbG+ej4dGb4KI0ZXUMe7wrVnFNj9OlacslBifELs2RH
+jzGruRuZznrRpQvvwWT8RiYPbNIwL/MCuWezKGjF8qIHTsYGIZNOXWcek4B
IrdqkJQ4sqVNJdcctYL3IqKopeeLtI7wNYR1a7u4j8Ei9sb+trhBkoyLikxI
rH0JeoOJ9KVJaPqZZCpWp1DrKgENV9Ziwi4d2AS5s1eCz6Ds6QdZeCBrfOpN
Sxw7oNnXAOZ7iEG8zBFvezrcd4CJY4JZ3c0sqnft4gJsnpD0ESO4K8YH7NfG
wFd5hP5KCLYwIM76AbIw+xpu1YQymWlye07TCx3G0j7sEUyhevInREoI20Ir
thYoZg7CVvxqtYExnqEWBnRCtcz5p4WwZ0IhKzdZ0YLgXCaXCbBe9Qm+Lwax
NKc48aztHJpkO1noIw0Ehb0jve+zBlN6VORHexLs7lVxXTxXWlHtApqJx+CT
dopmy9e5TIWIeth+AGOZB9Wu1mB0osv2PseWGyjI6EfL/+Sr43B8/gIVjvBZ
7pQvS6BDINm/D+tHDRCvdWMNJ0VkM4JwfuFb8Pe3E2vzaodvcdNcd9EY7lGN
Di6df05iKjqxrTKJrFvfIbLrIbgy3YNKvQD9UgOoQTqF4qkKyE8wczRz+Q+d
vDoq
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.23675188422203064`"}], "\", \"", 
                    RowBox[{"-", "0.3684924244880676`"}], "\", \"", 
                    RowBox[{"-", "0.82396399974823`"}], "\", \"", 
                    "0.07191237807273865`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUHtI02EU3czcWrjmyidGTtqSXKmzybL97qcrxaYoWqKpkfPRg0RrmiZo
zWeiIb5aolS2IoqmFYSKbt+XYFLhZA0xLTQ1tKGSZjOT9dr841w4HO459x5e
Rl7CWQcajZbPtI0ERVG4UqkoPuFkJ9mKnGBRjl1k2cCxwS1PiVlPdTh2OYEM
RzZTqUGV0JZcQBwtOmhl/6QkARn4F5+OWhslWCdiUQ9LjhLLuhYM2v1QWVOK
A2sLUZihBESGU8RmRzOu/4PmvXI01b6BaTQVEjFysMcVP0p49Q5O6WQDNC1i
2XzxpnbpC5Oo98zA+axRysaJHeWjpaRtqxvxD24HQZwLWZl+oA8r4uoWtNFQ
p0yFPMku8uYdSx+7YcQ6djCy7wT2f9d5p8vIofRe/eO1HcRo+nPE9CkUi4Uq
sLSMQN/HOEhzDEcK13jEcoxCQg4DOXzW4JWAUfCSuJNc+TAkHxuH+xf5ZHLQ
FS0LquAmGgD7P9/el+lrTv6Au2lCErPqQ3zYp1HZ7HY8Sz8IL4aZyFvZRcVM
mOHWlBRx/IM2O4gfqKLcb7+C6rEQEleztOkj7jRhB1MvbuF+xYULDJQ4KSbH
DjsTZryM8G60477BcXz8coi9AzT7sl+vlvKJNnobabT+Bg0/g9TXWfS5+XSE
2/hESDdSLVwznlt1JeV/n0FYrQx8pCnUEMsXuPfOgSBrTt8w6YIiy5Ogy/cR
NARlIpXsuS4im4OceRMQVMlET7pTcX2Hx2ZeT8QZbPbqxvY7PzA6obbjAgop
2EIK/LyJ2DoAWWOterXBCgcqnAgtcT502nxdKtCtwZTFioeEb0FVXtnfk2nG
4zyN9Jp0hmoi1XjfSiPlt1NMqeW+WOM5gl9PR+HF3V7IOraE5Z4dUOGchOx5
/wHQwycH
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.3130500614643097`"}], "\", \"", 
                    RowBox[{"-", "0.43164318799972534`"}], "\", \"", 
                    RowBox[{"-", "0.8415675759315491`"}], "\", \"", 
                    RowBox[{"-", "0.020896384492516518`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUX0s1HEYvzPUjkodxji6i3XmpSO7kvs9X2/bIctLaI3KVejFlpcJjeWK
cNLkpbRoeesf08J0xt3zDZtil164ZNZu1Q4pf7RzTIbu/PF5ts/zeZ599nwe
/sUbCRkWLBYrb7epJMgKQnNzZUWnrc0kXZZ1NCDLLHJMsDPBOfI5JrO+4Xr2
Gar361Ip58rBrSePfsntgHCjDeOReQD5y4tQFnoPeR8rh95WRVGhbhLYG0nw
sFiEFk35pP7lEYjfSKLvNRom/dw8xFfEkhElm7JYpYQXzEOFtEyiX+jEhqv+
UDi1jp5/q9Cs9Wrs6UDyTxh7kSExcfM8NTaX0HeNDvTU0B3QprnSmogISaX8
JCOOMjC6NyJ4vO1GDcO9wVZqJc4uiYh5J6yJjT48KR10HFFnDVvSEsPxIW62
F67ZNUBLmxakbbWwpTxBcsaSyMy1MNIFmzAlRGyK1oEo2oVyy7vBdcYIvzs9
qVC7n8xVAsgvtILpHrX2WIrq0c2vcGv7EE3pdqLK+2mkWRWCs6VyCBqwJzXz
gTAusyAcoZgI9wSZM1B7X3dnYpK7oegwUA+OJTH3ZtrmcOLyABY4bGLLHy4p
yPOjij4nyi+OpEGbtVhRocJUDbOTmfHTA7WNlyttL2fTwC0j6Pjp1P/KhNrR
ZS9RxHrQClYExLuv4mTNQTqdqAIxKkBcaGT0kkJ4Mi6HRoUz5gxyiSKkFgby
nwKbm0F4ic1MgMSKWDMfYEqwDqw6b1xYFez4pYZ748iPHjT/L0hQDROXMkl/
zApW3XaiAuUoOCjrJHG/OEQ0uIIha7bqvvpnjK90GYYN31Efugitr0YZnY8F
fS2+y3B2WcOcTRj+4yPTLo+TTNs64tnzS7ixXor9y/tIta8lXY0ahY7PiTu5
/AeSejtx
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.38934826850891113`"}], "\", \"", 
                    RowBox[{"-", "0.49479395151138306`"}], "\", \"", 
                    RowBox[{"-", "0.8591711521148682`"}], "\", \"", 
                    RowBox[{"-", "0.11370514333248138`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUX0s1HEY/w2djsXpOhob13QuFSHtNvN7vppkU7TOW6IteZlGxGWoNXca
apVuvaAbDZ0RMX94Web3fYrdseWtwpZhCa0opyOttl7u54/Ps32ez/Pss+fz
7LmQo0y3YhhGtd1SlMkFR/PykouiBTxJS846HJDFi3YWiCxoPjNIG2L/UL05
EWHuMycuK4d6oQqbv9+GloAYTgqlnLJiDNigDjqQfpBbrjyF54xroNOrgZ03
cu8ar5ARDwOb463EkeGT8Lt/GByXY0hlvQAZRk12ztVwQd2ivtr4djoqi4EE
Oxvcb6qkvLbRJcX3d5egu1fHWTg/jxfTruOmTIILZTFQmidHsXmCvTw+y/rl
urOBjgJAozeGXVOwfeondNPoS/gd91+plJ0+gWTkNXfedZ16pST2xdrspr0/
miC8Ywb84l9AfWYg0RScJY1vgsnfpK+gz3tPQ9KW4XiSB/ZgBax1CkngBxmq
lnaQ9vIlNr9YA5Z7qNnWmdVXcxDf4IaZGSKMtE8l3ZX59BXzHF4+lRJBxC1Y
iROR4txDJMQUwmdAx6MigzUSHWQWhqF03InwvcLqRXr/Zw/1uSNEw6oH0Qnl
OO6zF4OaolCpKqPREXU0Wx62lZnDXCinkYjxSPE6nWJM4OaegZPH6jja70ri
bDwxmNGCrbMV9uw7gF6tQxCp6ATfLwAliiZ4NnAPXFJCaHSVhKxhJwwMaUG1
kUEuJQUA8doAJsEAoew8tE9vciTSZ8vPpmSVq2lpo/z/FEVKsJenkX8d87R2
ahc6qAyw6v+RnVxxIYLsGfpQq+Vkjxwg8O0i6M2DtKTVmnRNhMOCXISbi7Ps
ZI4bePp/40ajl9k2/eM+8ZiQ3jxtjQ9u1FI1t41Um5yw4eonMFQpt3L5DyxX
O1c=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.4656464457511902`"}], "\", \"", 
                    RowBox[{"-", "0.5579447150230408`"}], "\", \"", 
                    RowBox[{"-", "0.876774787902832`"}], "\", \"", 
                    RowBox[{"-", "0.206513911485672`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUXtI02EUnRXmY5qmaU1xzqn5mA98h+5+ZUZGs42ZKT4yJ01M0dhMDdOs
bGSiZuCWRilNKynBtZg29/s+IkUMpJItUieISo5QUXJJWdB+/nEunHvu5XDP
5UgqxdI9DAZD7mAr4qKaEzJZ0fVMe5pcLiqPjSmnRScb3GxIKF3HNSZXIqq6
RCS1mbgyuhkCJTKytSCF514u+PgDcUpTlA6sMbP4/YyaYvZlkckLjujtWSUU
BGkN/Vo5mmp+ldKWfY50d3VBe4gWpgS5qLTFmTAYjajbW39sscGJyprQ4f2L
1bAd5kwi19SY1uJ7eOTP2Apwg0JpTs8Tc0Q9CdR5klAVF+KaYsjHwXRw3QgD
5lAo5Taq46+0xpFg4Wu+PO0u9lTzEL3zj9eHM1QiMn7HRFk0ZjycNmZQPbLH
N2ZHYZNaAhZzEdLYkagjpBDJkxKRuG4Orhm2sOWmFfIruGRkqxDEDYdRAyuY
YKsjEu748I1wEmz34NUKDV+jfwaxpzxIHdeBLDeXoNKkTjzQ+BXS23lo3H8E
XAV+yKoPQTlf0ukMMPNAsUFnVMDFSQHxVbIR3TvStoZz7w/jp62eZHUjHBl6
2MTrZRQRT58npuka7O/ShBtvC3YzK4k2Gn7ZORHuzyVcu9cCOawysplaTkmv
HEWcdxwSz8Ag9XUkvR/iSa2dCYqH5oHTcgseiqZhhHoCXcklOK7KG2WjGZjy
UcCyqQxJT7cAyzgPv6tGQZs9CXkdSkqlTtz1E9YrqGrZAKb/93fQFQQ/JCj9
0Cf8JsKd7EROAHNOCHnrgcjMGcP3+mepqwsZkFxgBsXmID6Y4IFaLUr4HuBH
Hp/xhd5v0RDQyaM+pzqD13gG1RewQy3L3Um4ix4rWdvQr2GTF6Z9aCVftJvL
f81lNZ8=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.5419446229934692`"}], "\", \"", 
                    RowBox[{"-", "0.6210954785346985`"}], "\", \"", 
                    RowBox[{"-", "0.8943783640861511`"}], "\", \"", 
                    RowBox[{"-", "0.2993226647377014`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUX0slXEUfnXrTrfhRiR157rU3YqFMtLe87vXH0JL8tEHko8wLuIaxloh
penLcJX1Icqs1HyUWXh/p5aQyJ2SqXxOphslDbXcldcfz9me85yzZ+c5NpGn
/GNWMQyTarhc/CMylGp1RGaAkCfREQm7nBN4UbQM8TLGW0UoYazx7/xJ7FOU
0e6PBVDdnII3hl2gQhpNHcefsY3aWzBgvgptsn9yO+tDMMrHirydqwHJ7WA2
/YWa9DSGcY/O+2BPdzfYXS2DS7UnCJsmRobJJkr/O6yLNpkzdkUq7b0MJftN
0flbHeW1jItuuGXpK6Sl5/Kcn0e/hdPo77kBR3y/sBMaFj1TimFiMQbuT/3m
Umo9WJMggg9Gl9hA8VHqdHY74XdUQ/00LDAIfdxHuGTvdjqjMuLqj+k4wF64
+UYHueFryGSfnFQMRhFFuROpKusCW4Eheh1giDpbjgbxMni6T046ArfhWqGQ
UEszjjsjgOV76Oz0OsDP+SCeEqE5949mGapIelUt9cpmiDbLjeQtToKj0p7E
r5aR5Cd+fAbU/ZMdNyCPBT+rQLQMdSB8r/ncApVJmqj4mjWa/XIlwy6WGCrb
iyp9MAoxkg6WH6RFQwErmbUX5bYkfGdwfex7ulk4BiUWSbhnaSNnYrqbzCRK
0YGZhjaZGAvCFNh1ZAy4EgF5WHEPKuP00NlUA8aifGpxaBOhVA91Q+lwuCmJ
aMI5mM/pgLnCerBV18NW6WDrjz/KFT9tW2qrn3sV5f+X80rDXnkcTooyW2l7
nhFO6Tqh0Pc6jM46kYb+GgrHTemw5gJ4TL2DuNliWvlcRnDyNegk9thy1xtU
Sk8QuBmwzSE2oAup5myqxzlFqTW+LP1AdzSPQ0OqA+oTLYihzHcll/+Kvz15

    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.6182428002357483`"}], "\", \"", 
                    RowBox[{"-", "0.6842461824417114`"}], "\", \"", 
                    RowBox[{"-", "0.911981999874115`"}], "\", \"", 
                    RowBox[{"-", "0.3921314477920532`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUXlI03EUX16YVMx5Y6aOFE8kr4lz7ykemaaW9oe6KBZoh0ObE0UwNLU8
EjK1YyKWYdMyUhFzi37fZ+aVihJ0enTDukxFRIPE9vOPz4PP+7yD93nup/JS
s00EAoHa0hhSFUVR+fmK4jQLnmQplEGBSl60MkJohHfsPhryCaCOorNUMDLO
vC7VgY+NiiLmzSD5eivz0/uBQVUBQSIHimx0ZalMQZsyXzRonkF4nynEz6jQ
bcqMTfbFkXEcqgylkCDKQuFJOyMvw5A1Fxiu7+JGtWNM5t8KB5ROJPnBMV7T
qWJIFvQbMjJ7eM7X03NWQmVvbEiZVyFr7Ign7ZUhWCi9Bm0lyUwYR1LJ3gSy
13vC0E0PliL3Qr5ncdSUcq0zaWb5O7fxqZuV9odxIeVjnKD9K8S+X4H1J05Y
c9kde2rP4B4LP9wY0MOuTjtqmTXH6gZfusFeyOytQ9H6qicdszfBbPvPXOKF
KpnxHjonRtBsZsBirQkFBy0xYVUuVogmWMSgHaZnx6DYYIVpoeH4MckZq6+n
8x5QenE1F6WNhOgcOdmKpcjnjhdvsZ/dj9nFeh+SrkWjYEpId1viqNJLQZKu
JKb2cGD3wuTbnpkZGiKG+pfY1uwwY5az8FKkoh05VU8H9JGoF7uSjWA3ir0d
SP03gVweLUL8UUcM1o1ARpQtvuvVQ0phM9vwd0aRqzWOVChg/JYKh4uXYCag
F3497ICmOg3sN++MOHjk8Pa+UEcbmY9JG+P/d2f5i3T6/AmcX7jP5uZ20ivt
BDR3j0LWKmB1TSPTnZawSqkWDqknQfNBzQITA3Hl2z/44xhOs+uFEPpADk3l
b2XtBRJIeG3gbvtOcC06f5K7rbLBjGmgECmlWnihtyFx25f/Z18luQ==
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.6945409774780273`"}], "\", \"", 
                    RowBox[{"-", "0.7473969459533691`"}], "\", \"", 
                    RowBox[{"-", "0.9295855760574341`"}], "\", \"", 
                    RowBox[{"-", "0.48494020104408264`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUXss1XEUv0wSC+VRiVaIGRKJdN1zctfaTVeuy9WGPG4L0xXdvDJ5LHqT
R5shtCVEEj2tft9DrUKYTaUMI4ZpKqU81io/f3zO9jmfc/bZ+Zxtyjh5pKZA
IDits1zkEcleanXEGX9tnhyPUO1yUfGi7jIMlxHf7UzRCiT5YiyZeC+wbKc8
aDgRT+xBjUha2sn2ZaWBs00AXNN3oPjIAyzxbRQVO3uihlc/OJIMzIbisXva
j02Piqm0ZBOWNUtBJzEGxyRmJBBkonebCk62DHPppr0s6Eoj9FzdSsLJTsZr
S0EyCo35CiIY5jk/T24X0uhepBGN4HlPcYs/aVfPQvu5RkgR57OZofVc+FgA
fdTwhVCY4FTuNsjvWFeaU3pPKClqfnCZKSVs3b9j3NO6Ku7lxXn4NrEAKpMd
6LB3M7YKY3FQZYPSD7UwJ7Wi2Sg9rKhyIpncQpQysB+DO2wIfP6Am8yTld7K
EC7fQ2NH1PDQyxoKg+dYwJ1hVrNKjQUZ42ynwB5H/GSYJbfEJHsJBhQb483k
cD4DMs5hXL21Gbg9V5LhlAT5Xrq7FjWLH7OfBbtJOe+Llso1NGUqp3L/KIou
3sM2BnLckyLlSmZHPaxEDXlDbObwIxau1wf6BgnUeilbGBbhgzn9FmQgsMYs
py0Ucl1BcVpL0LfWEVnPJIx22+Fk/RvI/9zAPula4OtQKxywk4JHagKmdhhi
3VApjLeXg1ZNFpR5XxZVVgeu+PXmN4m0Om8w/n8DPWrOwDUEt4uL2XcXbWpT
dsFtw9/w5dchfJaaxFzUIcxu9BXI/r6AsEFkbe+9sHB2A84aSeisbSFoGp2C
Ild3yM31AYWtMTO/38QtDAhp6d1qClxsga55CdVWeKD33YMrufwHz28z2g==

    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.7708392143249512`"}], "\", \"", 
                    RowBox[{"-", "0.8105477094650269`"}], "\", \"", 
                    RowBox[{"-", "0.947189211845398`"}], "\", \"", 
                    RowBox[{"-", "0.5777489542961121`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdUX0s1HEYv7x1OezQLKt5GabaKhxK3PehOY1C5+oWh1wUhZ2XtRuTyEXR
QmqdNm8Layymlqh+36eo21yFMnmp26hE3oqdlzbRnT8+z/Y8n+f5PHs+j+NZ
WcR5AxaLlcnWhQipPCAjQ5olMtEn56QpPI8UPWmqA1eHjlMCtMgLx/XsDJRM
WuPYSClxeyNDs1gOP7hmmTY5N5I7SY5kxjQAa31SqXI4Fd1dQmHn1Cwpm7hF
ZqZlwChKKZsLyOPx4O1lW6IaksEzD3tksfKgVVVFzBbY9GDhMJX/ekWSH7ki
TAxRPecbGI1X6v4QrqWJvncTTeE5+HXZCleqWcyiOhZ5cVx4UvSB1AZ10rBP
1cz1pjNYGSInh0PzmWJrZ9DPSOReWFoSj6MxawybW0CF9UWM30A+091uDErt
BhmTHYG+ue3QP5sOTQMOUKO9RzQLbihY0mm389Cmre3l6AMR1Bu64kCqllSZ
KqiTiYzR3YMtqtukhqPhH6/7TjPteylfcQmqZ9eps78/JPGjYZzxAaWDGNRj
5tARmaT3APvLtMzeoEn+bvOLaNYiBn0t/DEbswef0oQKfyz+K4HA1S24vzwG
23NTsbLAid7t2sH0zF/Y9OzQRg5fmfiOfulqoAYW70kIR47jrT1+W7dFgfDm
LuSwfGHMywUFB+JQus8QYtUBUL9oBElRACsNg+Rj2Gv6YtIOsqq94HefN2mW
yMHy8x64VqIgmh8VZOqqiMxVTPNX1+I293WrzYimXEn1/1vMZdETK5Ega1RQ
o2IDbLHrJcMdVpC2ehoSvwmomObRvsIJIr7xnLiMcqgwTgjNae6wZCFG84GH
5Ce/gMyL8om8MZ4YJ3jS+56VzMl/waiytcEZZQMZ6RTjuvcxSE4/uunLf/RH
Ogg=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.8471373915672302`"}], "\", \"", 
                    RowBox[{"-", "0.8736984729766846`"}], "\", \"", 
                    RowBox[{"-", "0.964792788028717`"}], "\", \"", 
                    RowBox[{"-", "0.6705577373504639`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkX8s1HEYx69TDiHhykKIdiWsaam47+fxo8Jl1PkRG3LX0R2iQ4rKjilz
Te2QLe3qtJmdGIXMj+/n2Rordmgqa5UmSk35Mcv0y+T88X6253k/z549r8dN
mi1O43I4nFyztSCWXArKyZEURJsak1RJ5gHfTKNpsSabNa2Ox2N74xnU/8vH
Jv0+FJZqSJtTNtY0S3vdxVux3WyYzMWOM2G8OJSbqmn3l1w0OCRDbegGKM/o
IOyvLLCzf0oFJACHDBEwrjEwpf4XQe3kgRyOCrq8+knK9V10fmmCVoWOEvNh
HwyZ+kyN3jVvOereLhKuibOxd13ODlfRoswW530esnUfFCibFcD9m9/Jc9Ek
rT/4k21VpmPzwG3SOCHtbZh3A+NMZVQkPgiT434LE+oalUB3hGvZomWG9dBv
AbdiE4gdjIOcOmuY0ObDZX9HWLQtI/01BO+WbIOBF4ewrbiBFZ6XwhwjQMWt
H8RlVk8DTZbZtXswQ9JEmgRnmU1fR2nlHZa+4hbAWJMlOqhiYWGPHIL2noIe
vgzAkwcvAy4YGeDxSD5dDa5lHJOVaJYnA2PN1dsKg+UddKz6BD7+ew4MTks0
b7MCh/W5OJhtTS0jK4Xvw5XrzMqlj5iSwC464FdD6236SRmvEPU7jzCtrWng
FOSIZhwxEKEX+gymozreHGZuxMG3FT4sTMcATzdFbHteU22fK3h9DIWN+W7E
mSkE/WQw0JxEMsZRk4FOd6LL2k1ORmes73MeCiSdCdXU+D9v0VGq6T4NSr6M
+j5boffejZAkhScs/UkFOxGfVoVUUf8aLiTZPyFvWlrYTzMp0Dcvgt/mMtQW
IYlYrCBVVg1EggWkXRdDt3ep2BaXeKxM9kDVYQ2ZviLDmJFEqPA7ts7lP/mv
Mxc=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.9234355688095093`"}], "\", \"", 
                    RowBox[{"-", "0.9368492364883423`"}], "\", \"", 
                    RowBox[{"-", "0.9823964238166809`"}], "\", \"", 
                    RowBox[{"-", "0.7633664608001709`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJwdkH8s1HEYx7/jOJ2TTmJXZEq7EiUWlr6fJ2eKZc3vGc0iTjhH37ub4xAT
2tqMyKxS5LctoTNb6z5PUyZlqdYPKqVUtCGEf7Dy9cfr2Z7n/Tx79n47J2aG
K0wYhlFbbJTwhGx/jkvIiTDnm+QEpZenkhdFG2zb4KRCibHvMjGqQI9r6QFY
e6iKeGtV+MGQZ7wbKUM6s0xSezPZJtN0ZLLq6PhiDirEmSDbJYbihU+k3FwF
aY2faaDSBxUKBZwLDWHldbkQb34AGaYQnl6bIb3S47Qt+Tftap4kLXNHMejb
AuU1aqfBfutlsrTkxe9uUjmhR197GzwiNKFhcxqszgUYGBRAdqsZFgy70FFf
LW6dayROrhJ24IUT8DdDshTsMstA7qeQehS40cnZHqOocv5RyU0prAiF8Nwl
HWyjLGD+jB4CG3bA1UQl6fQLwVlrB/j60Q8rTkvobe+L4KOT4b/OH6R+ZIT2
+fvRDT+4f22AlBcF+FG3ftpjeY+mFeXB2Ukpih+ngc5WA/XVF2BcxIFBzcC0
o47PAPdGetCWSztZq/s6FBzjgJ/Nt0pQtGqgp2qicWxdDZLgX/RhiQan3ubg
ct+iMezKdXauSbeZWXbgKJshbaV9HaU0aDslT0zzsbunlI2JUcP0shQFTCrc
knuhfbIWHxRbgzYgHdy3yECnTgO7GwskQjZNCxr2wIRjLEgdxKR8dz6c+BMH
mpeHyYhDIYkYm2KDq6JIW7t2859uREMqnSt4v2AQXaZv8qNA8IXQuKwVWlbz
mnyXykG/zkH++SHjq2fN1CrVBpLutJP+aGtjljYLxlVJsCbg0N31PeluqSU+
g8Nk30wZSRrXUFd9qNFSrsD4Rk882JVD/rIcdqSooHNVvpnLf07NMic=
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Real32\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "16"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.9997337460517883`"}], "\", \"", 
                    RowBox[{"-", "1.`"}], "\", \"", 
                    RowBox[{"-", "1.`"}], "\", \"", 
                    RowBox[{"-", "0.8561752438545227`"}], "\", \"", 
                    "0.2907177209854126`", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJILiAWAuPdd/X4G
hgYw9tWL3v/lxhS7nWdz96vEP9irGG67P+UFn/2130I2IPkZNzfsg6q13/JO
zH6fNaN9gkiufcJMxv0ps4zB4o0/mXaCaMMPumB++h9Oe651ofsSrn7cd5b5
q50zv+1+n/v/QObYg8x67Pbd7tkzL7gbWFZW709bLrj/9TcjsF1H2MPtd50U
tu/WlNqvVecPFssX2mFn0rbW9tFyWXuYvgOHCvdvPcCzrz7q/941k07sNUzz
2vOsV9n+dB+XvX19vf12DiaQWnthDgF7o/ledtMeRO53nKto//WN/X73a35g
9zRuUt8/9fwdO6VNX/edY6wG2/V02n27qu1ee8uLNu672DgHrO6xpPp+qPvh
OLjqsx3MLYxR3vs+zP1kAQsrEH1QSWz/pd4t+3ZOTwSLhZZeh4Xl/vAJJ/b2
2zHD9NsbTWGyi/g0ZZ+Xbd6+V6LbweK81zbYgsN9lQRYzW8PK7DeO+tEwfYX
iViAabUp/+2mTP69L6FOxX5ybI59bMtbsL4bv0vsNbWY7SYW5tiJOHfY/rzd
BLfvZcYUu+yX3WC/BX1Yuk/YMdh++jLJfS1y7/eVBF22Sz8VCTZ7ZWrAXl6/
HfseWCvZZ2sttPNNaQSlC/tvb2vBftx79Y2dePRiuzsNn+xm/Zhkx9XbtU+1
RX5vekrJfq0XDvvD3gfA7Tx/wAGsBwD+0xQm
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.803413792028844*^9, 3.8034138086185617`*^9}},
 CellLabel->
  "Out[3987]=",ExpressionUUID->"3126ac14-5e5c-4484-83ae-0a0926376ad6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"companiesNameGenerator", "[", "#1", "]"}], "&"}], "/@", " ", 
  "%"}]], "Input",
 CellChangeTimes->{{3.803413452981008*^9, 3.803413500605856*^9}, {
  3.803413818150819*^9, 3.803413819518354*^9}},
 CellLabel->
  "In[3988]:=",ExpressionUUID->"42d0bb3d-1dc0-410b-9c3b-f2eb0a30e624"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bif  Iowiu\"\>", ",", "\<\"Bif  Eowiu\"\>", 
   ",", "\<\"Bif  Eomnu\"\>", ",", "\<\"Bif  Eomnu\"\>", 
   ",", "\<\"Bif  Eomnu\"\>", ",", "\<\"Bifr Eomnu\"\>", 
   ",", "\<\"Bifr Eomnu\"\>", ",", "\<\"Biyp Comnu\"\>", 
   ",", "\<\"Biyi Comnu\"\>", ",", "\<\"Biyiebocnu\"\>", 
   ",", "\<\"Aiyiebocnu\"\>", ",", "\<\"Aiyiebocnu\"\>", 
   ",", "\<\"Aiyiebocnu\"\>", ",", "\<\"Agyiebocnu\"\>", 
   ",", "\<\"Agyiebocnu\"\>", ",", "\<\"Agyiebocnu\"\>", 
   ",", "\<\"A Yiebocnu\"\>", ",", "\<\"Araiebocnu\"\>", 
   ",", "\<\"Araiebocnb\"\>", ",", "\<\"Eraieboena\"\>", 
   ",", "\<\"Eraieboena\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8034134708322973`*^9, 3.803413502408511*^9}, 
   3.8034138201829042`*^9},
 CellLabel->
  "Out[3988]=",ExpressionUUID->"eb6b79c4-0dfb-4d32-ba81-d17f7bf4b384"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameGenerator", "@", "p1"}]], "Input",
 CellChangeTimes->{{3.803414150217985*^9, 3.803414153728837*^9}},
 CellLabel->
  "In[3989]:=",ExpressionUUID->"740a3815-38e8-4dfc-bd67-9b71299e1e91"],

Cell[BoxData[
 RowBox[{"{", "\<\"Bif  Iowiu\"\>", "}"}]], "Output",
 CellChangeTimes->{3.803414154379023*^9},
 CellLabel->
  "Out[3989]=",ExpressionUUID->"8d3935ee-1ad5-4b46-bb8f-3a4e871dd5af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"companiesNameGenerator", "@", "p2"}]], "Input",
 CellChangeTimes->{{3.8034141567261066`*^9, 3.803414159825865*^9}},
 CellLabel->
  "In[3990]:=",ExpressionUUID->"a8580936-54c2-4c04-888c-f4b2f7ba4d30"],

Cell[BoxData[
 RowBox[{"{", "\<\"Eraieboena\"\>", "}"}]], "Output",
 CellChangeTimes->{3.803414160297247*^9},
 CellLabel->
  "Out[3990]=",ExpressionUUID->"238f1ea0-c0c4-40e0-b8ac-ae2bdb43e1f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Rasterize", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Bif  Iowiu\>\"", ",", "\"\<Bif  Eowiu\>\"", ",", "\"\<Bif  Eomnu\>\"",
     ",", "\"\<Bif  Eomnu\>\"", ",", "\"\<Bif  Eomnu\>\"", ",", 
    "\"\<Bifr Eomnu\>\"", ",", "\"\<Bifr Eomnu\>\"", ",", 
    "\"\<Biyp Comnu\>\"", ",", "\"\<Biyi Comnu\>\"", ",", 
    "\"\<Biyiebocnu\>\"", ",", "\"\<Aiyiebocnu\>\"", ",", 
    "\"\<Aiyiebocnu\>\"", ",", "\"\<Aiyiebocnu\>\"", ",", 
    "\"\<Agyiebocnu\>\"", ",", "\"\<Agyiebocnu\>\"", ",", 
    "\"\<Agyiebocnu\>\"", ",", "\"\<A Yiebocnu\>\"", ",", 
    "\"\<Araiebocnu\>\"", ",", "\"\<Araiebocnb\>\"", ",", 
    "\"\<Eraieboena\>\"", ",", "\"\<Eraieboena\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.803414207592244*^9, 3.80341422059872*^9}},
 CellLabel->
  "In[3991]:=",ExpressionUUID->"22c690cd-0ffb-47fc-8253-e61da63c4855"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
AgUKFChQoECBAgUKFFgcfwOzU5oa
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztWntIVFkYv2WmSLmjplGitZui1h+NPWRNkRaMMuw1q2hYkLWjbIFb44Ya
ZYhi9UcSVBCxQYWPENHCEt9/aKKpWEJFTRJZIr2LymrKx/70o8PdO3fuPByn
hj0/GLnzne+c+93vd873uOPPO//SpE0XBCHTHX80qVm/6XSpOb+r8CUxI/PP
9AztH3EZf2vTtbpfd7pA+As+/+Azfj3GwcHBwcHBwcHBwTGVMBgMg4OD39sK
DnkUFBSsWLEiKytrdHTUrPLw8PCRI0eCgoJcXMabKS8vr9jYWMx99eqVA0z9
kWGVG81Cr9cXi1BWVtbU1HT37t2RkRGzc2/duiV8Q11dnVn9uLg4pu/m5jZ9
+nhn7eHh8fHjx8k/iFkMDQ2VlJQUm0ZLS4sDzDCGtW40i8LCQkEOCxcuPHbs
mPK2uXPnDtO/du2a8o2qqqpIU6PRPHr0CBJsm/b29gsXLkz+KSwBNqrskzIk
JCQ4xhIJrHKjJWCcJiYmJiUlrV+/Xq1WT5s2jYR79+5Vnn769OkNGzYgopoN
Gtu2bcOCOJvPnz+fvNk2gHEaGhoaLYejR49+F8PGrHGjJWCcItkxIc5ReHg4
hCDXXskuIiICC0ZFRdllNRvAOK2oqPheNjgGspwCSC4kr6mpscuNUBphtX37
9tllNRswGU4fPnyINPH27dupMMzuMMVpb28vydva2piwoaHhJzmoVCrZxc+d
O4dAt2DBAl9fX6qIUBqJJy5fvnxqH08EGzhFjEpNTYWdLN8tWrRIUgCsXLkS
CmlpaUyCYgxlz+3bt8VqS5YsgRpKlDEr3djX10ejxqn2wYMHNNTY2CiWm+I0
JycHwnnz5okj/OXLl00VGLI+MVWAMQQHByu41L6wltMbN27MnTuXpsyYMWPO
nDnM7Pj4+K9fv5Lapk2bIAkJCWETQTqpvXjxgiRPnz4lydWrV8esdOP9+/dp
CLMkQ/fu3aOh2tpasZy5HfeFDaAevQw2JzKpu7v72bNnxcqfPn0a+C/y8vIU
OH3//j3TRCENtfT0dPF03NQS99oFjNP8/PxeI7x+/VqsjCcFTVCeOXPmqVOn
qNvq7+9n7Rj8Rpo4esJE4cEis1arJR2U+iSprq4Ws2yVGyfDqQSenp7YqGYd
deLECQVOxaB8mpmZaVZziqDcy5w/f16sDN5JfvHiRbEc/VdMTIwwkURA8Zio
8GABMCwsjF6q6HQ6khw6dAhf4QFTtim4cTKcwpLFixcjX8yePZskMAzHCmdN
wVHOyKmrq6u7EdiZIqxevRqaSILGzQUjsbS0FF9xhLEgO7kvX77Emd2+fTtI
R6qlKevWrYNCSkqKKdumiFNxPsUOPHDgAHWpycnJCo5yRk4tyafe3t7CRKYw
HoKjiMTs7GySgDt83bx5M66vXLmCa4TrZcuWIQt/+PABQh8fHwhPnjxp6nYO
4JRAEQOgIGOtMRI4EacITaSZm5srqxAQECCI3jtlZGTg6/z583G9f/9+XKPx
2bVrFy5Q4qJwpdW6urpM3dFhnHZ0dMhOsdAYCZyIU8RblBPQ3LNnj/EoUiri
qvhZLl26RCsPDg6uWrUKo58/f0YfB8nhw4dpFOH9y5cvpu5oCaeVlZWSIRs4
RUNEQyDXBmMkcCJOgaioKGjKts/d3d20DiufEMeY20EovSsjLtauXXvw4EHB
3As0BTc+efKEhs6cOSMZQgtsFafov9asWSNMFPPYdTYYI4FzcUrtuWzEo3YG
BST6Pib09/cXJlIq/iL8ktDPz0+lUm3cuNHsgyu4EbwgL2Nox44dYvmzZ8+Q
spU5BXHgETldr9cjXERGRpJ89+7dthkjwY/DKWoVvRyQ+Jjyu3fvAgMDoTxr
1qySkhL65fHNmzdbt26lRViBREBuFb6BbQONRsOE5eXlCrYpu3Hp0qV0uGg3
otKuqakhfypzKgvsMfbCxAZjxPhxODUFLy8vsX5zczN7KwhmYT+93gSio6Ml
sev48eNsHfbDU1FRERM+fvxYwTZlNxYXF7N1YAlSszDxCxfWp2pNwim9BhED
ZbxarcaGvH79ullHORGnrNiwkFNgYGBgy5Yt1LkQ0JXgkY3/YQCFLimI33Z2
dnaSkEpiBSi7ETUb9gwVZsRmREQENdQUfuvr6612x/8bBoOhp6entbVVoadz
ABByb968iSMpeY3JwcHBwcHBwcHBwcHh7PgXxApsqw==
      "], {{0, 17.}, {78., 0}}, {
      0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
jiUp9xlTRERERERERERERERks/MvgNstwA==
      "], {{0, 17.}, {78., 0}}, {0, 255},
      
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
jiUp9xlTRERERERERERERERks/MvgNstwA==
      "], {{0, 17.}, {78., 0}}, {0, 255},
      
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
jiUp9xlTRERERERERERERERks/MvgNstwA==
      "], {{0, 17.}, {78., 0}}, {0, 255},
      
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
u8aUIEGCBAkSJEiQIEGChMWOfwEoDZoP
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
u8aUIEGCBAkSJEiQIEGChMWOfwEoDZoP
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztWmlIVVsUPmqDZYOlVBINr4ImIjOJ19wNGoyy9KXVjwZLn76ijDTMaCCK
QqOJyiwkKGwgmsAm0ySa50Ea1aLyQXM22ISV78sPN+edez133+u53VfvfKDc
vfba6+y9vr3XXuvc+9vk+PA/PRVFSfDGv/CoJMusWVHJf/iiETEj4a/YGTHR
ITMSY2JjZv0+2QvCNvjLwN/3z+UmTJgwYcKECRMmTJgw8X/FkiVLgoODk5KS
vn379nMZ/4VRUFCQqcKOHTuOHTt269atr1+/2h177do1pRLZ2dnGTsylxu/f
v79r1y7slvHjx69aterChQtlZWXGPsKNWLp0qWILrVu3TklJ0T8gN2/eFPoH
Dx40dmIuMl5aWjplyhTr9QYFBd27d8+op7gXgtOIiIgxY8YMGzYsMDDQw8OD
wpkzZ+oPX79+/YgRI5YtW+aK8Gi48bt373bo0IFLq1+/vsVimTBhQpcuXbje
Ro0avX792pAHuReC0y9fvgjhgwcPunXrBiEW+/LlSzdOz1j069ePi504ceKn
T5+EPDc3t2nTpgjCbpybgbDJKXDixAnKDx065K65GYs9e/boBJ8PHz7ojMX9
e/bsWZlTDJ3Lly+LwIIPaBYXF+uPwm1+8eJF5DYaFpxDVZxev36d8tOnTwth
Tk5OQ1vw9fW1thwWFoaugQMH2nxuSUkJjgYUtm7d6oRxJ9CpUycsBwbxaMkh
iFFRUVEYIq7dtm3bbtmyRaOGXAs6GzZsQCSvWbMm1Fq0aAGCsrKy8IEDp02b
JvTBMhaFmI/PSM9CQ0MbNGhAtTp16qSmpqoT1KKiIvrBOqkoLCxkF+KMWl4V
p8nJyRAGBASo77L9+/fbTKgUW9/yIIVm17lz56x7161bhy4fH583b944YdxR
4Bjy0kxMTJQccv78eew6TqBGjRr+/v5iPsOHD1fnyXFxcbyO1XPu1auXYIrA
Saf+qVOn0Kxbty5cBBJpn5uBWLt2rTCOHIBC+Eczwzt37rDryJEjarng9MmT
J8+fPwf1qGWwOeEBb2/vTZs2qZU/fvz497+xaNGiqtyOTdKmzfcv9yIjI617
u3btiq7o6GjnjDsKEXZQr8noYzLt27eHfq1atbD9GJkfPnwYEhJCO/CbUCan
wMiRIx8/fjxv3jw2UTvk5+fn5eWxiXKb+uSUaNas2c6dO8sqsHfvXmRuEDZv
3lwYrw6nGmCPYaPaXfvq1at13I7EFV1eXl7whlqOgMNRly5dctq4Q0A1SlNn
zpyR0V+8eDH1xdVAICoy0apdu7ZYFDn18/N78eIFmqiJOBangwotW7ZEc+rU
qWwKThF+sQfU9ufMmcOup0+fUlIdTjt27IgbB/cFtwq5iI2Nfffunc7a9d2O
7d2kSRPFKuLFxMRAGBwcrGPZrnGHkJGRQVMoe2X0BwwYAOXOnTtbl1Eie9y+
fTsl5LRPnz5ChwoiPvfv319RBSXBqYjGAshI2YWUiZLqcKq+T7ED586dywto
7NixOmu363YEHKUiMxF7Ax+4beBnHcsyxuWRnZ1NU4cPH5bRb9y4MZSxpa27
4CjefThTlNjllDvEmlPrMIX0iV3Hjx+nxChOifnz57NLEznVsOv2V69e1atX
Dwpr1qyhhEcGLL9//76qUZLG5YGKm6bS0tLsKmPXUXnBggU2FZjNjh49mk0D
ORVvRF3EKfJVm0PUkHF7QkICFNq1a8c4hoQQzenTp+sMkTcuCTyaGebQoUNl
lJmyqgsQAVypuEzRi3VR8mM4RQalUXaCUxRE7LJZjBAybkcGi+wROgcOHEBe
Tf0bN27oDJE3Lo9Ro0bRGjI0u8q9e/eGZvfu3a27QATtiPTJpZwWFxdTkp6e
rlGGDx3iFPMZNGiQUpHMq1+jaSDpdhRH0BkyZAjjed++ffX1HTIuCWx43oMo
o7DNNL2bN28W92N5ZXluM+KxnEECif1JiUs5BS+oXiGZNGmSWhOJcVBQkD6n
IA5zKC0tLSgoQMXUs2dPykUGbhOSbr99+7ZHBfhOZtu2bfr6DhmXR3x8PA0G
BAQgawWz8BgcKwrMjRs3UvPt27csQJAMYLZ8sVNSUjJu3DhqqjeASzktr6zl
cbh2795dXlFNID3GXaZUQrI+JUJDQ/W/WJR3uwh9/v7+OgffOeOS+Pz5s6CV
UL+9CQ8PVxdueXl54q0gmIUPPT092QR96iW4mtPMzEwxSczE2/v7j7kxmZUr
VzJb03CakpKi4RFpfGBgIDYkHm3XS/JuFwuZPXu2XWVHjTuErKwsXJS84pWK
755QmC9fvty6FMVBDgsLU/Pu5+eHWWl+MIBUCl0Wi0VIMAQBU1xngwcPVlQR
D2UpreXn52ueaJNTTGzFihVMzMhmjx499u3bhy6G36NHjxrkG8eAOdCBRUVF
bpmABjizOCa5ubl2X+lD88qVKydPntSp6X4AEHKvXr2KI4ny0I3TEMD11KpV
KwZzd8/FhAF49OhRZGQkD6nMO2QT/1kgpiFtQKEnfgmzcOFCd0/KRLWg/j7U
x8cnNTXV/Ennz45nz54hL0pLS8vJyfmVftRkwoQJE9XBPyl2sh4=
      
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
4z/mqtig
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
A/4Dck8V0w==
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztWglIVWsQPtlmUWll+3ptt8VKMVuoXptJC5gZGTxIM+21+ChNs6J9oSQp
WrB4EZW2UEREltFCaptme6KlBZLZvtlqVvd9naGfv//cczzec+3x6Hzg5Z6Z
OXPnn5l//pkfLaF/jwt3kiQpyhkf40Ji/5gzJyQu0BUPQZFRf0VETg3zj4ye
GjF1jm9oVRDd8fcP/r5/t5owYcKECRMmTJgwYcKEiUrAihUrvL29Y2Njv337
ZlzbrFmzPD098Wlc1S+GEcvPnz+fJOPp06cON6yiuH79uvQDJ06cMK5w2LBh
UDV69Gjjqn4xjFjerl078uGaNWscblhFkZOTw2KakpJiXOFvGNPs7GzmQy8v
r8qwraLYvHnzmDFjVq9e7ZDa+xvGNCYmBi8OHjyYwlpQUFAZ5v2H+A1jarFY
8OLu3bt79uyJL6tWrdL/7vPnzy9fvpyZmfnkyRM1mZcvX+KIvHjx4rNnzypq
W7nARs7Pz4cBJSUlajLkGWx8evz8+TNKk87UvX//Pix//fq1TntKS0tv3bp1
5coVfNEjX1ZWBgfevXv3y5cvjrI8KysLbzk5OcHhcXFx+I7Iqgn7+vq6uLig
ocL3s2fPDhw4kBXtKlWqLF++nBd+9epVfHx8r169wGJizZo1S05OFtSePHnS
xRZcXV01LC8uLp44cWK9evWYAegK9u3bp+aZgICAvLw8Pz+/WrVq0Sv169eP
ioqCV5WvvHjxIiQkBDYwy6F8586dasYgtcD18PCoVq0aydeoUQMHmWAPYo1F
de/e3Sp7fuzYscx+WLV27dqvX78atBwACzL9+vXD9wsXLtArSBubwh06dAD3
yJEjR48erVmzpvQzdu3axSSPHz+O32UsLIQZD8B4Xu3hw4clFaj5EDZAJ8k0
b94cXmLrnTZtmiBMnnF2diYZRL9u3brsJ4YMGSJ4Eru+SZMmxEWM3NzcmDDK
oNKTqFE+Pj5Mpnbt2g0bNmSPoaGhTPLcuXMksHfvXjIG+qtXr86EN27caMRy
q5xdrVu3BhfdCB4h0KhRIzxiPNSI6YQJE5CEMGb69Okoqp8+fUJWIy74ZJK5
ubkQQFXfunXrvXv3iJiRkdG2bVtogGF8rf748WPRz1i6dKlGTB88eEAB7dSp
U1paGlMSHR1Nb506dUrpGXLO+vXraV6Dhb179yY6v5ugB2oleaNt2rTpw4cP
IBYWFvr7+5OwcDbBhyNHjiQWthIKL/kZRXvKlCkgbtmyRYgpoWnTpvjdMhmH
Dh2iYLVo0cJuywk4KYh1+/ZtokyePBmPPXr00IgpUKdOndTUVJsyDJcuXUL9
F4gos6Th4MGDGu/Cfo2Y4nwBC3sBrhZYo0aNkuR+jyeSZ1q2bHnjxg2ejtOB
POnt7c2IOEHop/myY5UTns4aFCj+dxMTE0k+LCxMaSpzLIHFFIXl0aNHPGve
vHnE4rO9QpYTZs+eDXr79u0ZhZVBJIPSQhZTlA4lVxvoAbBhT58+bTPbBWjE
FFmNpAULe1nJ3b9/P4WbJ2p0j+Hh4RQmNjRR/9+1a1flGJWenk5W7dmzhxFx
JoKCWv3mzRuNFRFYTLGbBNaxY8eIhZbJPsutctFAAoA+YsSItB/AOUiabXqM
Yqq/tX737h2Wj73frVs34fydO3euxosaMUXGEgs9wJ8KsIkMDbkez2zYsIHk
Hz58SJQGDRrgMSIiQimMtKSzD3uKEVEtJfk80uMQFlO0rwIL7ROx0HzaZ7lV
vg+U1IFEVeqhmM6YMUOP/QcOHGBtDI74vn37Tpo0aeHChdQG2x1TjYaKB1/Z
NDyzY8cOks/JycHj27dv6XHRokU2DWvVqhW448ePp0f0ErScBQsW6PGJRkzZ
jajOmAqWEyIjIyW5B/P6GR07dlQKE/THdNu2bbRYhBINwPv37xmLEtvumKI0
EQvNc7Y6+IZQwzNLliyR5FEOrZFVrl3Un9tcI3RStcGwwIjU4qJElOsTq0Nj
KlhO5mEEABG9mSCMQbVq1e//irZ48WKBpT+mOLshOXz4cGWbZDCmWALNgHwB
1IaGZ3DuSPLsySj9+/eXVO5I2SUq3z4NHToUFPTz2LPlWuLAmCotZ8c9Jk2l
PDV4Xbp0Eeg6Y4qEoXMnPj5eYGEt6JmNxJSZh3oudJVqIM8MGjRIaHvY6cOP
kHTxAqDIC3ponEHC5+fnM+KyZctIfv78+cqfLpTBHu2LqU7LZ86cKckjic3s
WrduHb1y8+ZNnq5/n9Icio798ePHRMFsFRMTQxXAYEzz8vJwZEjyrVRSUhJb
L2rC9u3b+/TpI1xUsilvwIAB165ds8o1Ft0glU04gW8zSkpKaGYHPTk5mWo4
Zofg4GBSItQHOBDLJBYqcHFxMdHRpCUkJECJj48Pu/ezL6Z6LIedGHhBDAoK
sum0goICUoWWhqfrj+nKlStJAyZ3TLvu7u702KZNGw8PD4MxBeBtCqsk32Cg
1KOpY6019g4vTJ6h+gC4ubmxOy7kGI5+QfmZM2fYrSDewqyHY4v5VrkLkPk0
QRCQaZTSBLTiSAmStC+meizPzMwkOj9nCcD0AQFPT0+e2LlzZ50xRTphGuIv
siwWC5pDNEs0FGs3iuXG1CqXtcDAQJpVCfA88geHnXAf7ufnBy7SIDExsXHj
xkwe3WBGRoZN5UVFRQEBAfytHbYGrFLexREwtWFF/HUoWkRsAXSnvBi75BEK
oFUlpnZYXtnASpGQqBXCnYkDgfDduXMnJSUFpYnu8cpFbm5uamqqHpNKS0uv
Xr0K7ykvrNQAtRjzs7Ky9FxBVBT6LTdhwoQJEyZMmDBhwoSJ/wX+BUDByPw=

      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      
      "], {{0, 17.}, {78., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->144.],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{78., 17.},
    PlotRange->{{0, 78.}, {0, 17.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.8034142255993853`*^9},
 CellLabel->
  "Out[3991]=",ExpressionUUID->"5ad69793-a0b7-4233-846b-04ace67b8543"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.803414253570409*^9, 3.803414260167306*^9}},
 CellLabel->
  "In[3992]:=",ExpressionUUID->"bc346cdb-87ad-4a40-bbb8-684f69c84900"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i4889$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i4889$$ = 1}, 
     "\"max\"" :> {$CellContext`i4889$$ = 21}}, Typeset`bookmarkMode$$ = 
    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i4889$$], 1, ""}, 1, 21, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i4889$$], {1, 21, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->514.658016204834,
                 AnimationTimeIndex->4.658016204833984,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
AgUKFChQoECBAgUKFFgcfwOzU5oa
                  "], {{0, 17.}, {78., 0}}, {0, 
                  255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 2->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 3->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
jiUp9xlTRERERERERERERERks/MvgNstwA==
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 4->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
jiUp9xlTRERERERERERERERks/MvgNstwA==
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 5->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJztmntIVFkcx8dHZaGuZpEilrsqqRFZiqy6aEIFSiq6igkiGra2BW3pghkZ
iOILFKEiiQ1U1PwjUhDFN6KGWlkqKTVZFIqmlkqaD3y0X+fHHs7O3JkxnZnQ
7geUe3/3d84953zP4/e7+vPZv0L+0JdIJAlG+BUSk+gbHx+T9LsZbsIuJfwZ
d+lcrN+lv8/FnYv/9awBjL/g5x/8rF5/FRERERERERERERHRJgsLC8PDw9+7
FSLCpKWlubm5JSYmrqysqHVeWlrKyMiwt7c3MFhNpszNzU+cOIGynz590kFT
fxykUmkxx/379xsbG/v7+5eXl9WW7e7ulvxHbW2tWn8/Pz/mv2PHDn391cx6
165ds7OzmuiKGr58+VJSUlKsnJaWFh00Qwekp6dLhLC1tc3KylK9+vr6+ph/
VVWV6heVl5eTZ0hIyLt372DBtGlvby8sLNRkf5SDiSrYU0ZoaKhuWqJtmKZh
YWHh4eH+/v4uLi56enpkvHz5surit2/fDggIwI6qdu+NjIxEhVibY2Njmmv+
N8A0dXR0/E2IzMzM79IwjcM0xWHHjFhHR48ehRHiauqwc3d3R4VeXl4aqW0d
ME0fPHjwvdqgGwQ1BThcyF5dXa2RFyE0Qm1XrlzRSG3rYCOavn37FsfE1NSU
Wk/4dHV1sV0LF7gdHBxUXWpxcfHJkyeIbeRUWB/KNO3p6SH7o0ePmLG+vv4n
IczMzAQrv3fvHja6AwcO7N27lyIihEZ8QVdX1413YY2sQ1PsUTExMWgnO3Pt
7OwUAwCE7vC5c+dOVFTUtm3b4GZjYwOBKisrcUEFL168yPyhMkbs8OHDuH78
+HFgYKCpqSm57dy5Mzs7mw9QBwYGaKwUI5bXr1/To4aGBt6uTNOkpCQYrays
+IOyoqJCWYAhOCbKAjCGg4PDGod343yrpp2dnfv27aMihoaGe/bsYc0+ffo0
VhbzPH/+vESWmvFd8/T0ZEoRWOnk39bWJpEF/MgyICLVT5OBuHnzJqv81atX
ZMTgy7Xw5cuX9Kimpoa3s2H/8OHD+Pg4pEcug8mJk9TIyOju3bu889zc3ND/
SUlJUaHp9PQ080QgDbe4uDi+OF66luHVCEzT1NTUHgUmJiZ4Z/T04MGDcN6+
ffutW7co23r//j1LxzBuzJk0BUFBQSMjI9evX6dbdLm3t7epqYlukcuTP2lK
WFpalpWVLcp4+PChiYkJjNbW1qzyjWgqB+YYJqragcrLy1OhKQ+dpwkJCWo9
tYTqXKagoIB3hu5kLyoq4u3YFb29vSWyQwQSk5E0tbCw+PjxI27fvHlDZbE6
yGH//v24vXDhAt0yTbH9Yg7w9V+9epUejY6OkmUjmjo5OTk7O+O8oKkCDAwM
sKyw1lQM1GbUFLuckQJIn3nn48ePw/PQoUOKORqLHktLS8lCmiIbYj7kwPZn
Hx8f3MbGxtIt05TtxgxEpPQIIRNZNqIpf55iBl67do2y1DNnzqgYqM2o6VrO
0927d0tkJ4XiIwwUnX1YU2RRqynNEEVNnz59Klc5wid61NzcTBZNaUokJyfT
I7bJKLIlNcXWRJ43btwQdKBoln130qCm7HOrljTt6OgQLMKzJTXFfkshK5+A
MHCk4jDl+6IbTRFByTmvQ1MkRPQI4irr/pbUFHh5ecFTMH2GEFQPC5+0qung
4CBZ8vPz5ZxfvHjxTZqiPSdPnpTIgvn5+Xllfd+qmlJ6LrjjUTqDABJ5H1m0
qil0QfYKS3R0NO+JwPjYsWOqNYVwaMPMzIxUKkXG5OHhQXYWgQuyGTVFRi8V
YmBggDl//vyZEhBjY+OSkhL6sDM5ORkREUGVsADpq5Y1BUeOHKHFRbMRyTLC
YxpP1ZoKEhgYyH8wUWQzaqoMc3Nz3r+pqYl9FYSyaD993iT5+L1L25oWFxez
RqIlyLwksr9w5ebmUrQmp2lWVpZc1xDGu7i4YELi1WoHahNpyoKNNWoKhoaG
goOD+a92FhYW6LLcPwwglMIjX19fZkERbJjsODt16pSE2/GQllJtvb29cm8U
1BQxW05ODgVmpKa7uzsl1LT91tXVaWiQfhQWFhaePXvW2tqqIqfTAdhynz9/
jiUp9xlTRERERERERERERERks/MvgNstwA==
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 6->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
u8aUIEGCBAkSJEiQIEGChMWOfwEoDZoP
                  "], {{0, 17.}, {78., 0}}, {
                  0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 7->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
u8aUIEGCBAkSJEiQIEGChMWOfwEoDZoP
                  "], {{0, 17.}, {78., 0}}, {
                  0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 8->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 9->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJztWmlIVVsUPmqDZYOlVBINr4ImIjOJ19wNGoyy9KXVjwZLn76ijDTMaCCK
QqOJyiwkKGwgmsAm0ySa50Ea1aLyQXM22ISV78sPN+edez133+u53VfvfKDc
vfba6+y9vr3XXuvc+9vk+PA/PRVFSfDGv/CoJMusWVHJf/iiETEj4a/YGTHR
ITMSY2JjZv0+2QvCNvjLwN/3z+UmTJgwYcKECRMmTJgw8X/FkiVLgoODk5KS
vn379nMZ/4VRUFCQqcKOHTuOHTt269atr1+/2h177do1pRLZ2dnGTsylxu/f
v79r1y7slvHjx69aterChQtlZWXGPsKNWLp0qWILrVu3TklJ0T8gN2/eFPoH
Dx40dmIuMl5aWjplyhTr9QYFBd27d8+op7gXgtOIiIgxY8YMGzYsMDDQw8OD
wpkzZ+oPX79+/YgRI5YtW+aK8Gi48bt373bo0IFLq1+/vsVimTBhQpcuXbje
Ro0avX792pAHuReC0y9fvgjhgwcPunXrBiEW+/LlSzdOz1j069ePi504ceKn
T5+EPDc3t2nTpgjCbpybgbDJKXDixAnKDx065K65GYs9e/boBJ8PHz7ojMX9
e/bsWZlTDJ3Lly+LwIIPaBYXF+uPwm1+8eJF5DYaFpxDVZxev36d8tOnTwth
Tk5OQ1vw9fW1thwWFoaugQMH2nxuSUkJjgYUtm7d6oRxJ9CpUycsBwbxaMkh
iFFRUVEYIq7dtm3bbtmyRaOGXAs6GzZsQCSvWbMm1Fq0aAGCsrKy8IEDp02b
JvTBMhaFmI/PSM9CQ0MbNGhAtTp16qSmpqoT1KKiIvrBOqkoLCxkF+KMWl4V
p8nJyRAGBASo77L9+/fbTKgUW9/yIIVm17lz56x7161bhy4fH583b944YdxR
4Bjy0kxMTJQccv78eew6TqBGjRr+/v5iPsOHD1fnyXFxcbyO1XPu1auXYIrA
Saf+qVOn0Kxbty5cBBJpn5uBWLt2rTCOHIBC+Eczwzt37rDryJEjarng9MmT
J8+fPwf1qGWwOeEBb2/vTZs2qZU/fvz497+xaNGiqtyOTdKmzfcv9yIjI617
u3btiq7o6GjnjDsKEXZQr8noYzLt27eHfq1atbD9GJkfPnwYEhJCO/CbUCan
wMiRIx8/fjxv3jw2UTvk5+fn5eWxiXKb+uSUaNas2c6dO8sqsHfvXmRuEDZv
3lwYrw6nGmCPYaPaXfvq1at13I7EFV1eXl7whlqOgMNRly5dctq4Q0A1SlNn
zpyR0V+8eDH1xdVAICoy0apdu7ZYFDn18/N78eIFmqiJOBangwotW7ZEc+rU
qWwKThF+sQfU9ufMmcOup0+fUlIdTjt27IgbB/cFtwq5iI2Nfffunc7a9d2O
7d2kSRPFKuLFxMRAGBwcrGPZrnGHkJGRQVMoe2X0BwwYAOXOnTtbl1Eie9y+
fTsl5LRPnz5ChwoiPvfv319RBSXBqYjGAshI2YWUiZLqcKq+T7ED586dywto
7NixOmu363YEHKUiMxF7Ax+4beBnHcsyxuWRnZ1NU4cPH5bRb9y4MZSxpa27
4CjefThTlNjllDvEmlPrMIX0iV3Hjx+nxChOifnz57NLEznVsOv2V69e1atX
Dwpr1qyhhEcGLL9//76qUZLG5YGKm6bS0tLsKmPXUXnBggU2FZjNjh49mk0D
ORVvRF3EKfJVm0PUkHF7QkICFNq1a8c4hoQQzenTp+sMkTcuCTyaGebQoUNl
lJmyqgsQAVypuEzRi3VR8mM4RQalUXaCUxRE7LJZjBAybkcGi+wROgcOHEBe
Tf0bN27oDJE3Lo9Ro0bRGjI0u8q9e/eGZvfu3a27QATtiPTJpZwWFxdTkp6e
rlGGDx3iFPMZNGiQUpHMq1+jaSDpdhRH0BkyZAjjed++ffX1HTIuCWx43oMo
o7DNNL2bN28W92N5ZXluM+KxnEECif1JiUs5BS+oXiGZNGmSWhOJcVBQkD6n
IA5zKC0tLSgoQMXUs2dPykUGbhOSbr99+7ZHBfhOZtu2bfr6DhmXR3x8PA0G
BAQgawWz8BgcKwrMjRs3UvPt27csQJAMYLZ8sVNSUjJu3DhqqjeASzktr6zl
cbh2795dXlFNID3GXaZUQrI+JUJDQ/W/WJR3uwh9/v7+OgffOeOS+Pz5s6CV
UL+9CQ8PVxdueXl54q0gmIUPPT092QR96iW4mtPMzEwxSczE2/v7j7kxmZUr
VzJb03CakpKi4RFpfGBgIDYkHm3XS/JuFwuZPXu2XWVHjTuErKwsXJS84pWK
755QmC9fvty6FMVBDgsLU/Pu5+eHWWl+MIBUCl0Wi0VIMAQBU1xngwcPVlQR
D2UpreXn52ueaJNTTGzFihVMzMhmjx499u3bhy6G36NHjxrkG8eAOdCBRUVF
bpmABjizOCa5ubl2X+lD88qVKydPntSp6X4AEHKvXr2KI4ny0I3TEMD11KpV
KwZzd8/FhAF49OhRZGQkD6nMO2QT/1kgpiFtQKEnfgmzcOFCd0/KRLWg/j7U
x8cnNTXV/Ennz45nz54hL0pLS8vJyfmVftRkwoQJE9XBPyl2sh4=
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 10->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 11->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 12->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 13->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJztmnlsTu8Sx499KX5K7fseWwlN3dgvYgka/aHhj5toqbpBb6h930I0IQSN
CBE7iSCitorYita+NLZGgqui1FJra3nvx5n0yfmd876np6+6/OJ8E/KemTlz
5pmZZ56ZhwZR//lzdFFN0+JK89efkVP/OXFi5PTBFXkYGhv375jY6FH9YidF
x0RP/EdUMYgN+bOeP99+e1y4cOHChQsXLly4cOHid8WiRYtCQkKmTp369evX
X1z5+PHj27Rpw9/fr+pvhOTk5K06MjMznchfvXpVy8ORI0cK15hCV96rVy9U
DRgw4PtV/Y3QqFEj8eHSpUudyKelpSm3JyYmFq4xha78N4zpxYsXlQ/bt2/v
8K01a9YMHDhwyZIlP6L2Fq7y3zCmU6ZMYcndu3eXsKanp/9siwoZv2FMGzRo
wJK3bNnStm1bfixevPhnW1QAsJHv3buXkpKSnZ3tS0ZiysaXx9zcXEqTw9S9
f//+uXPnXr165dCenJycGzduXLp0iR9O5D99+nThwoW7d+9+/vzZ4SfyRWpq
KustWrTos2fPpk+fzm8iaxVLSkr6wxsqVqxoFQ4PD4fVo0cPr198+fJltWrV
ENi8ebMfyhUyMjKGDRtWoUIFKS9FihShK9i5c6dVUmKKVbdv3+7Tp0+ZMmXk
lcDAwLi4OLxqfSUrKysyMhIb1KmE8k2bNvkyhtSC26JFi+LFi4t8yZIlOchM
9hBrFtW6dWuP7vmwsDBlP1bFx8d/+fJFCZN14gdrU0EaC+vYsWNWY1gUCjt2
7Mjvs2fPin7SxiS2b98+zQesOnfs2CGs8+fPW7mrV6+GFRAQ8Pr1az+UC/bv
349zRKZmzZp4SUVqzJgxJmGJaenSpUWG6JcvX159gtwzehKw68k64RKjoKAg
JUwBt+bA06dPQ0NDlUzZsmUrV66sHqOiopTkmTNnRAAXiTHoL1GihBJetWqV
Er5z544Q8Y/piySnsA4fPmxikV1169aFRTfCI0urUqUKj4yHJskPHz7896+Y
P3++L7dTRho2/PaPexEREVYuoyKsUaNG+accPHr0SALarFmzkydPKiWTJk2S
t0zZKzGVsK5YsULmtVu3brVr107oxt2EHtRq+kYj/d6/fw/xwYMH/fr1E2HT
2YQP+/btKyyKAIVXMoSiPXLkSIgJCQlKWGIqqF69Ot/9pGPPnj2SZrVq1VLC
/sWUk0JYN2/eFMqIESN4DA4O9upMI3COjdtpXGEVK1YMbxjpUuoBJ5rfyjkZ
YbEXTMpB//79Nb3fMxIlprVr17527ZqRzikgngwJCVHEhQsXyqfV0SAgUl27
doVeqlQp43fXrl0r8sYsVVCOFaiYUliePHliZE2bNk1Y7Hqh+BfTCRMmQG/c
uLGiqDJIGlstNMLe7aR31apV4bJ3jPTo6GiTDwuqnKxmu8FiL1u5u3btknAb
iTZ97+jRoyVMamiS/r9ly5bWMerUqVNi1fbt2xWRMxEKtVodJTZQMWU3mVgH
Dx4UFi2TUPyIKTaTutB79+59Mg+HDh0SYa8eM8I+ph79fg8u5/ibN2+Ewg/Z
F+vXr/dbOXtNWPQA/7JATWTPnz9Xr9jEdOXKlSL/+PFjoVSqVInHmJgYqzBn
ipx97ClFpFpqPk4ZK1RMrWWK9klYJ06cEIofMU1OTtZ8g0S1Ny/fmL548aJc
uXII4DehEEqJ8rt37/xWbtNQGWGsbDYx3bhxo8inpaV59KyTxzlz5ng1rE6d
OnCHDBkijx8/fqTjgjJz5kz7FQlsYqpuRL8nprGxsZreg7X/K5o2bWpcpi/k
G1NPXlNNbZc6xs7i0clduo1ySpOw6Pwv+oaxlbWJ6bx58zR9lKM18ui1S4aL
sWPHWoXRSZWGy7oUUVpcSkS+i/L4G1M6KJOw15hiHiMARHozkzyDKr0NrLlz
59qY5ySmdLB0j8gcOHCAkUrkTW1DQZXjfJkBjQXQHjYx5dzR9NlTUTp16qT5
uCNVl6jG9qlnz55Q6tevz57N15ICxZT2Xii0YSZhfGiNqTru8bb109LgNW/e
3MY8JzEFTO6a3uTPnj2bH126dLGXd6JczGO+c5IenryYduvWzdT2qNPHOELK
xYvXiifjDAlPfiriggULRH7GjBnWTz/QoR4LFFOOb8lehhGjJI2xmsKMMR03
bhwUzjuv2bVs2TJ55fr1696c9A0OY0r/XESH3Mls27bNXt6JcioPRwbcGjVq
bN26VUUqNzd3w4YNHTp0UOOAQM2nnTt3vnLlikevsXSDUjZxgmqQQHZ2tszs
0LFWajhTz/Dhw0WJqT7gQAYTYVGBMzIyhE6Ttnz5cpSEhoaqe78CxdSTN8tT
63bv3u3RpwnaY84yLQ8qptjJwAtl6NChXp2Wnp4ur8yaNcs/txsxaNAgkQwK
CnJSoJwox9sSVkAvzXBEUyeHHWDvGIUlptKwiRmBgYHym023bt06k/Ljx4+r
W0HewoccuCorrEsg82WCEJBplGL1SCtOSohkQWNKxio9WCJDHMaQLdKtqZim
pKSImHHOMqFVq1YIkCe+BJzHVC1k8uTJ+Qo7V05NGzx4sCxTwGKDg4M57Ez3
4VR+TS8RHEwyNQvoBk+fPu1VOZ1AeHi48daOTY1VpltEhbdv39L6qlTR9BvI
Jk2a0FcbxdQlj7UAeo0p9YSaqXKVBbLr9+7dC0vK79GjR21c9OOADbLGH/Gv
eISP/jAxMZGiKvd4+YLjgPQ2XeN4RU5OzuXLl4m79cLKF1DLmJ+amurkCsIh
WBerw2bGw8LS+T3geKpXrx4xDQsL+9m2uCgEPHz4MCIiQjYpBf9nm+PCf9AS
0Esw6Mkdi5bfqOvi14fx+i4gICA+Pv5H/J8lF/9PZGZm0hclJCQkJSVlZWX9
bHNcuHDh4pfA/wDzpSDL
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 14->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 15->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 16->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
2LBh4x+F/wM7VFJt
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 17->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
4z/mqtig
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 18->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
A/4Dck8V0w==
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 19->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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

                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 20->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}], 21->
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 17.}, {78., 0}}, {0, 255},
                  ColorFunction->RGBColor,
                  ImageResolution->144.],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{78., 17.},
                PlotRange->{{0, 78.}, {0, 17.}}]}, 
               Dynamic[$CellContext`i4889$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.803414261852384*^9},
 CellLabel->
  "Out[3992]=",ExpressionUUID->"580e973a-748e-4763-8c0e-b14dd467e184"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<interpolation.gif\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.803414355975307*^9, 3.803414367775329*^9}},
 CellLabel->
  "In[3993]:=",ExpressionUUID->"9b65f779-8033-4f5d-b7c7-71572f254673"],

Cell[BoxData["\<\"interpolation.gif\"\>"], "Output",
 CellChangeTimes->{3.803414386173379*^9},
 CellLabel->
  "Out[3993]=",ExpressionUUID->"e26bbe7b-9466-457b-9e07-f957c6e27691"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 308}, {36, Automatic}},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (June 30, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34305437-66ee-48bb-9879-da8313965d36"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1877, 53, 241, "Input",ExpressionUUID->"cbb771cd-a064-4153-827d-36ae4a11a959"],
Cell[2438, 75, 594, 15, 73, "Input",ExpressionUUID->"be28ed90-1b71-430c-b6af-f28e0bb0c45d"],
Cell[3035, 92, 496, 12, 52, "Input",ExpressionUUID->"99229ea1-c984-40c4-8ad7-d730be1b7aa7"],
Cell[3534, 106, 2381, 56, 221, "Input",ExpressionUUID->"64a4ec3e-a290-4efe-800b-30980c49e2e5"],
Cell[5918, 164, 297, 6, 30, "Input",ExpressionUUID->"4bbf2ab3-b134-49ad-8992-dc7a2dfb77be"],
Cell[6218, 172, 988, 26, 73, "Input",ExpressionUUID->"ffe8d753-2155-496a-b00d-500247e50b9f"],
Cell[7209, 200, 225, 4, 30, "Input",ExpressionUUID->"32894e20-86b2-43b7-8a94-97db7edd973e"],
Cell[7437, 206, 342, 9, 30, "Input",ExpressionUUID->"206386f3-f58f-4a64-9017-170f18a63cac"],
Cell[7782, 217, 204, 4, 30, "Input",ExpressionUUID->"c08d5327-d94f-407e-8353-e66884c6a87a"],
Cell[7989, 223, 697, 19, 52, "Input",ExpressionUUID->"6619122e-0413-45e1-8cfe-77eef070df38"],
Cell[8689, 244, 1053, 26, 73, "Input",ExpressionUUID->"b5b724f1-0e45-4414-9598-4b012e5e7b26"],
Cell[9745, 272, 266, 6, 52, "Input",ExpressionUUID->"e2997b19-1019-4362-86b5-8706fd60bf9a"],
Cell[10014, 280, 919, 24, 73, "Input",ExpressionUUID->"1b7740ee-11f3-4efd-a6bf-9ef3ece33a65"],
Cell[10936, 306, 2508, 64, 115, "Input",ExpressionUUID->"5d147def-db2a-4de6-b523-e3787e611155"],
Cell[CellGroupData[{
Cell[13469, 374, 6627, 158, 304, "Input",ExpressionUUID->"fe6ccfac-b292-42b3-8076-c3e659995258"],
Cell[20099, 534, 939, 17, 24, "Message",ExpressionUUID->"20492806-746c-46cc-9632-e32157474310"],
Cell[21041, 553, 70096, 1306, 63, "Output",ExpressionUUID->"370404f3-17fb-44e8-b122-3c832e5305ec"]
}, Open  ]],
Cell[91152, 1862, 178, 3, 30, "Input",ExpressionUUID->"238676a8-d1b3-4234-947b-1659aae99ffe"],
Cell[91333, 1867, 1328, 37, 94, "Input",ExpressionUUID->"77d3a5d7-551f-4aa7-b7c1-75c14a4d5835"],
Cell[92664, 1906, 1385, 38, 73, "Input",ExpressionUUID->"f33c6601-4517-4e1d-9d78-96ed3777344f"],
Cell[94052, 1946, 1165, 31, 73, "Input",ExpressionUUID->"59931907-4a47-4b9c-9332-2f1db02a578e"],
Cell[95220, 1979, 705, 18, 30, "Input",ExpressionUUID->"f86e2477-1494-403f-8059-ecd085c70c89"],
Cell[CellGroupData[{
Cell[95950, 2001, 257, 7, 30, "Input",ExpressionUUID->"a31f8cb0-efc3-4101-8d72-c0933554745c"],
Cell[96210, 2010, 119836, 2086, 103, "Output",ExpressionUUID->"dae8fd86-068c-47cd-832e-156073fc271a"]
}, Open  ]],
Cell[216061, 4099, 162, 3, 35, "Text",ExpressionUUID->"ab3f6e29-61fd-49a1-b1fa-530f930c3ed9"],
Cell[216226, 4104, 3835, 98, 451, "Input",ExpressionUUID->"42e727b1-7578-4fa8-b08f-a778a78de460"],
Cell[220064, 4204, 286, 5, 30, "Input",ExpressionUUID->"47866491-5ff3-4854-868b-587317461f58"],
Cell[CellGroupData[{
Cell[220375, 4213, 5703, 147, 430, "Input",ExpressionUUID->"0ed6c39f-0d52-464c-9fa4-869b8601a3b1"],
Cell[226081, 4362, 119608, 2073, 94, "Echo",ExpressionUUID->"39a2b37f-6a30-42b8-9783-8c7295676e1e"],
Cell[345692, 6437, 513, 11, 24, "Message",ExpressionUUID->"1337d70d-216a-4a39-b8bb-15392eb0135e"],
Cell[346208, 6450, 525, 11, 24, "Message",ExpressionUUID->"7c0c3513-88ec-476f-831f-e862c37140f9"],
Cell[346736, 6463, 273, 5, 34, "Output",ExpressionUUID->"e09b2118-fe88-4965-8177-0ffbf4dcd610"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347046, 6473, 310, 7, 30, "Input",ExpressionUUID->"8318c6fb-7183-4c74-834d-a6ba5c4a682b"],
Cell[347359, 6482, 118106, 2056, 103, "Output",ExpressionUUID->"de5e0769-73ca-478c-83b3-46fbd4670371"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465502, 8543, 320, 6, 30, "Input",ExpressionUUID->"1e1bb49e-1ad1-4b79-b342-faa5332bb777"],
Cell[465825, 8551, 68423, 1264, 63, "Output",ExpressionUUID->"072ef833-6e07-4de5-a4e9-e39a71600af2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534285, 9820, 339, 6, 30, "Input",ExpressionUUID->"994122b2-f2c9-4ba7-9895-21d5a9b5600b"],
Cell[534627, 9828, 3727, 59, 224, "Output",ExpressionUUID->"8daa4f6a-f342-48dd-b083-75e74ef5665c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538391, 9892, 328, 6, 30, "Input",ExpressionUUID->"6e56d6a7-035c-4667-ab32-2a1f3920b88e"],
Cell[538722, 9900, 49241, 935, 63, "Output",ExpressionUUID->"10c6c261-e8f4-4fdf-883f-743410687997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588000, 10840, 269, 5, 30, "Input",ExpressionUUID->"5287bec7-90f2-4538-a5b2-49b09f87c55e"],
Cell[588272, 10847, 219, 4, 34, "Output",ExpressionUUID->"d08a337b-7e2e-4b1a-8e2c-0c7499776df8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588528, 10856, 1481, 42, 136, "Input",ExpressionUUID->"0ebcd4a9-ea5a-4adc-972a-4a1d35a0f05e"],
Cell[590012, 10900, 79220, 1857, 3668, "Output",ExpressionUUID->"f406b9ac-12c9-4103-a26d-669b5a451c34"]
}, Closed]],
Cell[CellGroupData[{
Cell[669269, 12762, 463, 11, 26, "Input",ExpressionUUID->"33dd8e6b-1ed1-4661-b3f5-0d9809d1fff1"],
Cell[669735, 12775, 303, 5, 34, "Output",ExpressionUUID->"43fa6ebe-350d-40e8-bfe2-97b9dbe25074"]
}, Open  ]],
Cell[670053, 12783, 318, 8, 30, "Input",ExpressionUUID->"91da568e-e5a5-4e11-b514-9e15a3fecd34"],
Cell[CellGroupData[{
Cell[670396, 12795, 933, 25, 73, "Input",ExpressionUUID->"200d5426-5982-48eb-afb2-21b4c8401b42"],
Cell[671332, 12822, 49900, 932, 248, "Output",ExpressionUUID->"2f03cd69-4746-44d1-b082-89408a9cff15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721269, 13759, 245, 5, 30, "Input",ExpressionUUID->"0c00258a-2f5a-48da-aa0a-18fff8ddddb4"],
Cell[721517, 13766, 401, 8, 34, "Output",ExpressionUUID->"f26c457b-fbf0-40eb-80c5-a2188eee53d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721955, 13779, 276, 5, 30, "Input",ExpressionUUID->"3c79e906-6559-43dd-84d1-c83afaadaac3"],
Cell[722234, 13786, 5842, 120, 63, "Output",ExpressionUUID->"08487407-a7f4-479f-bd2a-32f7251552dc"]
}, Open  ]],
Cell[728091, 13909, 1907, 54, 73, "Input",ExpressionUUID->"2732da60-e661-44f7-802d-6d55f2bb6ba8"],
Cell[730001, 13965, 764, 23, 30, "Input",ExpressionUUID->"1539f9bc-1d30-4c2c-b812-20943b85a2b2"],
Cell[730768, 13990, 512, 11, 30, "Input",ExpressionUUID->"e67b22f5-ebf6-4f43-838a-8d4ded0f0bde"],
Cell[CellGroupData[{
Cell[731305, 14005, 209, 4, 30, "Input",ExpressionUUID->"0445cb66-9e42-4d86-b7fb-8ec506a0a31a"],
Cell[731517, 14011, 179, 4, 34, "Output",ExpressionUUID->"7f3fa6f3-1af3-46d5-acb3-e4b71e9af9ae"]
}, Open  ]],
Cell[731711, 14018, 410, 8, 52, "Input",ExpressionUUID->"cc5c53e2-9a6e-4f66-ab80-45c635d02317"],
Cell[CellGroupData[{
Cell[732146, 14030, 180, 3, 30, "Input",ExpressionUUID->"25a21c43-1439-47cd-aeb5-0087867eef6b"],
Cell[732329, 14035, 5404, 113, 63, "Output",ExpressionUUID->"bb29c57a-cbf7-4068-9a92-52f9b9d84b5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737770, 14153, 826, 25, 52, "Input",ExpressionUUID->"91ff4004-0d3d-442d-a5f6-a8239e26c223"],
Cell[738599, 14180, 116595, 2396, 283, "Output",ExpressionUUID->"3126ac14-5e5c-4484-83ae-0a0926376ad6"]
}, Closed]],
Cell[CellGroupData[{
Cell[855231, 16581, 326, 8, 26, "Input",ExpressionUUID->"42d0bb3d-1dc0-410b-9c3b-f2eb0a30e624"],
Cell[855560, 16591, 840, 16, 56, "Output",ExpressionUUID->"eb6b79c4-0dfb-4d32-ba81-d17f7bf4b384"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856437, 16612, 221, 4, 30, "Input",ExpressionUUID->"740a3815-38e8-4dfc-bd67-9b71299e1e91"],
Cell[856661, 16618, 193, 4, 34, "Output",ExpressionUUID->"8d3935ee-1ad5-4b46-bb8f-3a4e871dd5af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856891, 16627, 223, 4, 30, "Input",ExpressionUUID->"a8580936-54c2-4c04-888c-f4b2f7ba4d30"],
Cell[857117, 16633, 193, 4, 34, "Output",ExpressionUUID->"238f1ea0-c0c4-40e0-b8ac-ae2bdb43e1f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857347, 16642, 897, 18, 52, "Input",ExpressionUUID->"22c690cd-0ffb-47fc-8253-e61da63c4855"],
Cell[858247, 16662, 64308, 1157, 62, "Output",ExpressionUUID->"5ad69793-a0b7-4233-846b-04ace67b8543"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922592, 17824, 214, 4, 30, "Input",ExpressionUUID->"bc346cdb-87ad-4a40-bbb8-684f69c84900"],
Cell[922809, 17830, 71011, 1281, 108, "Output",ExpressionUUID->"580e973a-748e-4763-8c0e-b14dd467e184"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993857, 19116, 256, 5, 30, "Input",ExpressionUUID->"9b65f779-8033-4f5d-b7c7-71572f254673"],
Cell[994116, 19123, 178, 3, 34, "Output",ExpressionUUID->"e26bbe7b-9466-457b-9e07-f957c6e27691"]
}, Open  ]]
}
]
*)

